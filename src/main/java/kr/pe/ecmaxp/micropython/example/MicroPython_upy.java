package kr.pe.ecmaxp.micropython.example;

import kr.pe.ecmaxp.thumbsk.CPU;
import kr.pe.ecmaxp.thumbjk.KotlinCPU;
import org.jetbrains.annotations.NotNull;

import static kr.pe.ecmaxp.thumbsk.helper.RegisterIndex.*;
import static kr.pe.ecmaxp.micropython.example.MicroPython_vals.*;

abstract public class MicroPython_upy extends MicroPython_extmod
{
    public MicroPython_upy(@NotNull CPU cpu)
    {
        super(cpu);
    }

    // function: Function(address=134217740, size=20, name='nlr_push_tail', path='build/py/nlr.o', has_indirect=True)
    protected void nlr_push_tail(int offset) throws Exception
    {
        assert offset == 0;
        pc = nlr_push_tail + offset;
        r3 = mp_state_ctx;
        r2 = ldr(r3 + 28);
        str(r0, r2);
        r2 = ldr(r3 + 16);
        str(r3 + 28, r0);
        str(r0 + 48, r2);
        r0 = movs(r0, 0);
        bx(lr);
    }

    // function: Function(address=134217760, size=16, name='nlr_pop', path='build/py/nlr.o', has_indirect=False)
    protected void nlr_pop(int offset) throws Exception
    {
        assert offset == 0;
        pc = nlr_pop + offset;
        r3 = mp_state_ctx;
        r2 = ldr(r3 + 28);
        r2 = ldr(r2);
        str(r3 + 28, r2);
        bx(lr);
    }

    // function: Function(address=134217776, size=40, name='nlr_push', path='build/py/nlrthumb.o', has_indirect=False)
    protected void nlr_push(int offset) throws Exception
    {
        assert offset == 0;
        pc = nlr_push + offset;
        str(r0 + 12, r4);
        str(r0 + 16, r5);
        str(r0 + 20, r6);
        str(r0 + 24, r7);
        r1 = mov(r8);
        str(r0 + 28, r1);
        r1 = mov(r9);
        str(r0 + 32, r1);
        r1 = mov(r10);
        str(r0 + 36, r1);
        r1 = mov(r11);
        str(r0 + 40, r1);
        r1 = mov(sp);
        str(r0 + 44, r1);
        r1 = mov(lr);
        str(r0 + 8, r1);
        r1 = nlr_push_tail | 1;
        hint(nlr_push_tail | 1, this::nlr_push_tail);
        bx(r1);
    }

    // function: Function(address=134217816, size=68, name='nlr_jump', path='build/py/nlrthumb.o', has_indirect=False)
    protected void nlr_jump(int offset) throws Exception
    {
        pc = nlr_jump + offset;
        switch (offset)
        {
            case 0:
                r2 = mp_state_ctx;
                push(true, r4);
                r3 = ldr(r2 + 28);
                cmp(r3, 0);
                if (bne(null, 14)) return;
            case 10:
                lr = nlr_jump + 14 | 1;
                bl(this::nlr_jump_fail, 14);
                return;
            case 14:
                r1 = ldr(r3 + 48);
                str(r3 + 4, r0);
                str(r2 + 16, r1);
                r1 = ldr(r3);
                str(r2 + 28, r1);
                r0 = adds(r3, 0);
                r4 = ldr(r0 + 12);
                r5 = ldr(r0 + 16);
                r6 = ldr(r0 + 20);
                r7 = ldr(r0 + 24);
                r1 = ldr(r0 + 28);
                r8 = mov(r1);
                r1 = ldr(r0 + 32);
                r9 = mov(r1);
                r1 = ldr(r0 + 36);
                r10 = mov(r1);
                r1 = ldr(r0 + 40);
                r11 = mov(r1);
                r1 = ldr(r0 + 44);
                sp = mov(r1);
                r1 = ldr(r0 + 8);
                lr = mov(r1);
                r0 = movs(r0, 1);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134217884, size=64, name='m_malloc', path='build/py/malloc.o', has_indirect=False)
    protected void m_malloc(int offset) throws Exception
    {
        pc = m_malloc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, 0);
                r4 = movs(r4, r0);
                lr = m_malloc + 10 | 1;
                bl(this::gc_alloc, 10);
                return;
            case 10:
                cmp(r0, 0);
                if (bne(null, 24)) return;
            case 14:
                cmp(r4, 0);
                if (beq(null, 24)) return;
            case 18:
                r0 = movs(r0, r4);
                lr = m_malloc + 24 | 1;
                bl(this::m_malloc_fail, 24);
                return;
            case 24:
                r1 = movs(r1, 246);
                r3 = mp_state_ctx;
                r1 = lsls(r1, 1);
                r2 = ldr(r3 + r1);
                r2 = adds(r2, r4);
                str(r3 + r1, r2);
                r2 = movs(r2, 248);
                r2 = lsls(r2, 1);
                r1 = ldr(r3 + r2);
                r4 = adds(r4, r1);
                str(r3 + r2, r4);
                r2 = adds(r2, 4);
                r1 = ldr(r3 + r2);
                cmp(r4, r1);
                if (bls(null, 56)) return;
            case 54:
                str(r3 + r2, r4);
            case 56:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134217948, size=48, name='m_malloc_maybe', path='build/py/malloc.o', has_indirect=False)
    protected void m_malloc_maybe(int offset) throws Exception
    {
        pc = m_malloc_maybe + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, 0);
                r4 = movs(r4, r0);
                lr = m_malloc_maybe + 10 | 1;
                bl(this::gc_alloc, 10);
                return;
            case 10:
                r1 = movs(r1, 246);
                r3 = mp_state_ctx;
                r1 = lsls(r1, 1);
                r2 = ldr(r3 + r1);
                r2 = adds(r2, r4);
                str(r3 + r1, r2);
                r2 = movs(r2, 248);
                r2 = lsls(r2, 1);
                r1 = ldr(r3 + r2);
                r4 = adds(r4, r1);
                str(r3 + r2, r4);
                r2 = adds(r2, 4);
                r1 = ldr(r3 + r2);
                cmp(r4, r1);
                if (bls(null, 42)) return;
            case 40:
                str(r3 + r2, r4);
            case 42:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134217996, size=8, name='m_malloc0', path='build/py/malloc.o', has_indirect=False)
    protected void m_malloc0(int offset) throws Exception
    {
        pc = m_malloc0 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = m_malloc0 + 6 | 1;
                bl(this::m_malloc, 6);
                return;
            case 6:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218004, size=68, name='m_realloc', path='build/py/malloc.o', has_indirect=False)
    protected void m_realloc(int offset) throws Exception
    {
        pc = m_realloc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r2);
                r5 = movs(r5, r1);
                r2 = movs(r2, 1);
                r1 = movs(r1, r4);
                lr = m_realloc + 14 | 1;
                bl(this::gc_realloc, 14);
                return;
            case 14:
                cmp(r0, 0);
                if (bne(null, 28)) return;
            case 18:
                cmp(r4, 0);
                if (beq(null, 28)) return;
            case 22:
                r0 = movs(r0, r4);
                lr = m_realloc + 28 | 1;
                bl(this::m_malloc_fail, 28);
                return;
            case 28:
                r1 = movs(r1, 246);
                r3 = mp_state_ctx;
                r1 = lsls(r1, 1);
                r2 = ldr(r3 + r1);
                r4 = subs(r4, r5);
                r2 = adds(r2, r4);
                str(r3 + r1, r2);
                r2 = movs(r2, 248);
                r2 = lsls(r2, 1);
                r1 = ldr(r3 + r2);
                r4 = adds(r4, r1);
                str(r3 + r2, r4);
                r2 = adds(r2, 4);
                r1 = ldr(r3 + r2);
                cmp(r4, r1);
                if (bls(null, 62)) return;
            case 60:
                str(r3 + r2, r4);
            case 62:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218072, size=64, name='m_realloc_maybe', path='build/py/malloc.o', has_indirect=False)
    protected void m_realloc_maybe(int offset) throws Exception
    {
        pc = m_realloc_maybe + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r2);
                r5 = movs(r5, r1);
                r2 = movs(r2, r3);
                r1 = movs(r1, r4);
                lr = m_realloc_maybe + 14 | 1;
                bl(this::gc_realloc, 14);
                return;
            case 14:
                cmp(r0, 0);
                if (bne(null, 22)) return;
            case 18:
                cmp(r4, 0);
                if (bne(null, 56)) return;
            case 22:
                r1 = movs(r1, 246);
                r3 = mp_state_ctx;
                r1 = lsls(r1, 1);
                r2 = ldr(r3 + r1);
                r4 = subs(r4, r5);
                r2 = adds(r2, r4);
                str(r3 + r1, r2);
                r2 = movs(r2, 248);
                r2 = lsls(r2, 1);
                r1 = ldr(r3 + r2);
                r4 = adds(r4, r1);
                str(r3 + r2, r4);
                r2 = adds(r2, 4);
                r1 = ldr(r3 + r2);
                cmp(r4, r1);
                if (bls(null, 56)) return;
            case 54:
                str(r3 + r2, r4);
            case 56:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218136, size=28, name='m_free', path='build/py/malloc.o', has_indirect=False)
    protected void m_free(int offset) throws Exception
    {
        pc = m_free + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                lr = m_free + 8 | 1;
                bl(this::gc_free, 8);
                return;
            case 8:
                r3 = movs(r3, 248);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 1);
                r1 = ldr(r2 + r3);
                r4 = subs(r1, r4);
                str(r2 + r3, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218164, size=16, name='m_get_total_bytes_allocated', path='build/py/malloc.o', has_indirect=False)
    protected void m_get_total_bytes_allocated(int offset) throws Exception
    {
        assert offset == 0;
        pc = m_get_total_bytes_allocated + offset;
        r3 = movs(r3, 246);
        r2 = mp_state_ctx;
        r3 = lsls(r3, 1);
        r0 = ldr(r2 + r3);
        bx(lr);
    }

    // function: Function(address=134218180, size=16, name='m_get_current_bytes_allocated', path='build/py/malloc.o', has_indirect=False)
    protected void m_get_current_bytes_allocated(int offset) throws Exception
    {
        assert offset == 0;
        pc = m_get_current_bytes_allocated + offset;
        r3 = movs(r3, 248);
        r2 = mp_state_ctx;
        r3 = lsls(r3, 1);
        r0 = ldr(r2 + r3);
        bx(lr);
    }

    // function: Function(address=134218196, size=16, name='m_get_peak_bytes_allocated', path='build/py/malloc.o', has_indirect=False)
    protected void m_get_peak_bytes_allocated(int offset) throws Exception
    {
        assert offset == 0;
        pc = m_get_peak_bytes_allocated + offset;
        r3 = movs(r3, 250);
        r2 = mp_state_ctx;
        r3 = lsls(r3, 1);
        r0 = ldr(r2 + r3);
        bx(lr);
    }

    // function: Function(address=134218212, size=240, name='gc_mark_subtree', path='build/py/gc.o', has_indirect=False)
    protected void gc_mark_subtree(int offset) throws Exception
    {
        pc = gc_mark_subtree + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 252);
                r3 = movs(r3, 0);
                push(true, r4, r5, r6, r7);
                lr = mov(r11);
                r7 = mov(r10);
                r6 = mov(r9);
                r5 = mov(r8);
                r2 = lsls(r2, 1);
                r10 = mov(r2);
                r2 = adds(r2, 16);
                r1 = movs(r1, 3);
                r11 = mov(r2);
                r9 = mov(r3);
                push(true, r5, r6, r7);
                r4 = mp_state_ctx;
                sp = sub(sp, 12);
            case 32:
                r3 = mov(r10);
                r5 = ldr(r4 + r3);
                r3 = movs(r3, 0);
            case 38:
                r3 = adds(r3, 1);
                r2 = adds(r0, r3);
                r6 = lsrs(r2, 2);
                r6 = ldrb(r5 + r6);
                r2 = ands(r2, r1);
                r2 = lsls(r2, 1);
                r6 = asrs(r6, r2);
                r2 = movs(r2, r6);
                r2 = ands(r2, r1);
                cmp(r2, 2);
                if (beq(null, 38)) return;
            case 60:
                r2 = movs(r2, 129);
                r2 = lsls(r2, 2);
                r2 = ldr(r4 + r2);
                r0 = lsls(r0, 4);
                r12 = mov(r2);
                r3 = lsls(r3, 4);
                r0 = add(r0, r12);
                r3 = lsrs(r3, 2);
                if (beq(null, 148)) return;
            case 78:
                r5 = movs(r5, 15);
                r3 = lsls(r3, 2);
                r3 = adds(r3, r0);
            case 84:
                r2 = ldr(r0);
                tst(r2, r5);
                if (bne(null, 142)) return;
            case 90:
                r6 = movs(r6, 129);
                r6 = lsls(r6, 2);
                r6 = ldr(r4 + r6);
                cmp(r6, r2);
                if (bhi(null, 142)) return;
            case 100:
                r7 = mov(r11);
                r7 = ldr(r4 + r7);
                cmp(r7, r2);
                if (bls(null, 142)) return;
            case 108:
                r7 = mov(r10);
                r7 = ldr(r4 + r7);
                r2 = subs(r2, r6);
                r12 = mov(r7);
                r6 = lsrs(r2, 4);
                r2 = lsrs(r2, 6);
                r2 = add(r2, r12);
                r7 = ldrb(r2);
                str(sp + 4, r6);
                r6 = ands(r6, r1);
                r6 = lsls(r6, 1);
                r8 = mov(r7);
                r7 = asrs(r7, r6);
                r7 = ands(r7, r1);
                r12 = mov(r7);
                cmp(r7, 1);
                if (beq(null, 174)) return;
            case 142:
                r0 = adds(r0, 4);
                cmp(r0, r3);
                if (bne(null, 84)) return;
            case 148:
                r3 = mov(r9);
                cmp(r3, 0);
                if (beq(null, 210)) return;
            case 154:
                r3 = movs(r3, 1);
                r3 = rsbs(r3, 0);
                r12 = mov(r3);
                r9 = add(r9, r12);
                r3 = mov(r9);
                r3 = adds(r3, 130);
                r3 = lsls(r3, 2);
                r3 = adds(r4, r3);
                r0 = ldr(r3 + 8);
                b(null, 32);
                return;
            case 174:
                r7 = movs(r7, r1);
                r7 = lsls(r7, r6);
                r6 = movs(r6, r7);
                r7 = mov(r8);
                r6 = orrs(r6, r7);
                strb(r2, r6);
                r2 = mov(r9);
                cmp(r2, 63);
                if (bhi(null, 224)) return;
            case 192:
                r2 = adds(r2, 130);
                r2 = lsls(r2, 2);
                r6 = ldr(sp + 4);
                r2 = adds(r4, r2);
                str(r2 + 8, r6);
                r2 = movs(r2, 1);
                r12 = mov(r2);
                r9 = add(r9, r12);
                b(null, 142);
                return;
            case 210:
                sp = add(sp, 12);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 224:
                r2 = movs(r2, 131);
                r6 = mov(r12);
                r2 = lsls(r2, 2);
                str(r4 + r2, r6);
                b(null, 142);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218452, size=128, name='gc_init', path='build/py/gc.o', has_indirect=False)
    protected void gc_init(int offset) throws Exception
    {
        pc = gc_init + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 15);
                r1 = bics(r1, r3);
                push(true, r4, r5, r6, r7);
                lr = mov(r8);
                r7 = movs(r7, r0);
                r6 = movs(r6, r1);
                r0 = subs(r1, r0);
                r1 = movs(r1, 131);
                push(true);
                r1 = lsls(r1, 2);
                r0 = lsls(r0, 3);
                lr = gc_init + 26 | 1;
                bl(this::__aeabi_uidiv, 26);
                return;
            case 26:
                r3 = movs(r3, 254);
                r5 = mp_state_ctx;
                r3 = lsls(r3, 1);
                str(r5 + r3, r0);
                r3 = subs(r3, 4);
                str(r5 + r3, r7);
                r3 = adds(r3, 8);
                r8 = mov(r3);
                r2 = mov(r8);
                r3 = adds(r7, r0);
                str(r5 + r2, r3);
                r3 = lsls(r0, 6);
                r3 = subs(r6, r3);
                r2 = adds(r2, 4);
                str(r5 + r2, r3);
                r3 = movs(r3, 130);
                r4 = movs(r4, r0);
                r3 = lsls(r3, 2);
                r2 = movs(r2, r0);
                r1 = movs(r1, 0);
                r0 = movs(r0, r7);
                str(r5 + r3, r6);
                lr = gc_init + 74 | 1;
                bl(this::memset, 74);
                return;
            case 74:
                r3 = mov(r8);
                r2 = lsls(r4, 2);
                r2 = adds(r2, 7);
                r0 = ldr(r5 + r3);
                r2 = lsrs(r2, 3);
                r1 = movs(r1, 0);
                lr = gc_init + 90 | 1;
                bl(this::memset, 90);
                return;
            case 90:
                r2 = movs(r2, 199);
                r3 = movs(r3, 0);
                r1 = movs(r1, 128);
                r2 = lsls(r2, 2);
                str(r5 + r2, r3);
                r1 = lsls(r1, 9);
                r2 = subs(r2, 12);
                str(r5 + r2, r1);
                r1 = movs(r1, 1);
                r2 = adds(r2, 8);
                r1 = rsbs(r1, 0);
                str(r5 + r2, r1);
                r2 = subs(r2, 4);
                str(r5 + r2, r3);
                pop(false, R2);
                r8 = mov(r2);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218580, size=20, name='gc_lock', path='build/py/gc.o', has_indirect=False)
    protected void gc_lock(int offset) throws Exception
    {
        assert offset == 0;
        pc = gc_lock + offset;
        r2 = movs(r2, 196);
        r1 = mp_state_ctx;
        r2 = lsls(r2, 2);
        r3 = ldrh(r1 + r2);
        r3 = adds(r3, 1);
        strh(r1 + r2, r3);
        bx(lr);
    }

    // function: Function(address=134218600, size=20, name='gc_unlock', path='build/py/gc.o', has_indirect=False)
    protected void gc_unlock(int offset) throws Exception
    {
        assert offset == 0;
        pc = gc_unlock + offset;
        r2 = movs(r2, 196);
        r1 = mp_state_ctx;
        r2 = lsls(r2, 2);
        r3 = ldrh(r1 + r2);
        r3 = subs(r3, 1);
        strh(r1 + r2, r3);
        bx(lr);
    }

    // function: Function(address=134218620, size=20, name='gc_is_locked', path='build/py/gc.o', has_indirect=False)
    protected void gc_is_locked(int offset) throws Exception
    {
        assert offset == 0;
        pc = gc_is_locked + offset;
        r3 = movs(r3, 196);
        r2 = mp_state_ctx;
        r3 = lsls(r3, 2);
        r0 = ldrh(r2 + r3);
        r3 = subs(r0, 1);
        r0 = sbcs(r0, r3);
        r0 = uxtb(r0);
        bx(lr);
    }

    // function: Function(address=134218640, size=276, name='gc_collect_start', path='build/py/gc.o', has_indirect=False)
    protected void gc_collect_start(int offset) throws Exception
    {
        pc = gc_collect_start + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = mov(r9);
                r5 = mov(r8);
                r7 = mov(r10);
                lr = mov(r11);
                r2 = movs(r2, 196);
                push(true, r5, r6, r7);
                r5 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r3 = ldrh(r5 + r2);
                r7 = movs(r7, r5);
                r3 = adds(r3, 1);
                strh(r5 + r2, r3);
                r3 = movs(r3, 0);
                r2 = adds(r2, 4);
                str(r5 + r2, r3);
                r2 = subs(r2, 9);
                r2 = subs(r2, 255);
                str(r5 + r2, r3);
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r4 = movs(r4, r5);
                r8 = mov(r3);
                r3 = adds(r3, 4);
                r6 = movs(r6, 15);
                r9 = mov(r3);
                r7 = adds(r7, 217);
                r4 = adds(r4, 20);
                r7 = adds(r7, 255);
            case 58:
                r3 = ldr(r4);
                tst(r3, r6);
                if (bne(null, 122)) return;
            case 64:
                r2 = mov(r8);
                r2 = ldr(r5 + r2);
                cmp(r3, r2);
                if (blo(null, 122)) return;
            case 72:
                r1 = mov(r9);
                r1 = ldr(r5 + r1);
                cmp(r3, r1);
                if (bhs(null, 122)) return;
            case 80:
                r3 = subs(r3, r2);
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r2 = ldr(r5 + r2);
                r0 = lsrs(r3, 4);
                r11 = mov(r2);
                r3 = lsrs(r3, 6);
                r11 = add(r11, r3);
                r3 = mov(r11);
                r2 = ldrb(r3);
                r10 = mov(r2);
                r2 = movs(r2, 3);
                r1 = mov(r10);
                r12 = mov(r2);
                r2 = ands(r2, r0);
                r2 = lsls(r2, 1);
                r1 = asrs(r1, r2);
                r3 = mov(r12);
                r1 = ands(r1, r3);
                cmp(r1, 1);
                if (beq(null, 236)) return;
            case 122:
                r4 = adds(r4, 4);
                cmp(r7, r4);
                if (bne(null, 58)) return;
            case 128:
                r4 = ldr(r5 + 8);
                r3 = ldr(r5 + 16);
                r6 = subs(r3, r4);
                r6 = lsrs(r6, 2);
                if (beq(null, 224)) return;
            case 138:
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r8 = mov(r3);
                r3 = adds(r3, 4);
                r7 = movs(r7, 15);
                r9 = mov(r3);
                r6 = lsls(r6, 2);
                r6 = adds(r4, r6);
            case 154:
                r3 = ldr(r4);
                tst(r3, r7);
                if (bne(null, 218)) return;
            case 160:
                r2 = mov(r8);
                r2 = ldr(r5 + r2);
                cmp(r3, r2);
                if (blo(null, 218)) return;
            case 168:
                r1 = mov(r9);
                r1 = ldr(r5 + r1);
                cmp(r3, r1);
                if (bhs(null, 218)) return;
            case 176:
                r3 = subs(r3, r2);
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r2 = ldr(r5 + r2);
                r0 = lsrs(r3, 4);
                r11 = mov(r2);
                r3 = lsrs(r3, 6);
                r11 = add(r11, r3);
                r3 = mov(r11);
                r2 = ldrb(r3);
                r10 = mov(r2);
                r2 = movs(r2, 3);
                r1 = mov(r10);
                r12 = mov(r2);
                r2 = ands(r2, r0);
                r2 = lsls(r2, 1);
                r1 = asrs(r1, r2);
                r3 = mov(r12);
                r1 = ands(r1, r3);
                cmp(r1, 1);
                if (beq(null, 254)) return;
            case 218:
                r4 = adds(r4, 4);
                cmp(r6, r4);
                if (bne(null, 154)) return;
            case 224:
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 236:
                r3 = lsls(r3, r2);
                r2 = movs(r2, r3);
                r3 = mov(r10);
                r2 = orrs(r2, r3);
                r3 = mov(r11);
                strb(r3, r2);
                lr = gc_collect_start + 252 | 1;
                bl(this::gc_mark_subtree, 252);
                return;
            case 252:
                b(null, 122);
                return;
            case 254:
                r3 = lsls(r3, r2);
                r2 = movs(r2, r3);
                r3 = mov(r10);
                r2 = orrs(r2, r3);
                r3 = mov(r11);
                strb(r3, r2);
                lr = gc_collect_start + 270 | 1;
                bl(this::gc_mark_subtree, 270);
                return;
            case 270:
                b(null, 218);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134218916, size=136, name='gc_collect_root', path='build/py/gc.o', has_indirect=False)
    protected void gc_collect_root(int offset) throws Exception
    {
        pc = gc_collect_root + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                lr = mov(r10);
                r7 = mov(r9);
                r6 = mov(r8);
                push(true, r6, r7);
                cmp(r1, 0);
                if (beq(null, 102)) return;
            case 14:
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r4 = movs(r4, r0);
                r6 = movs(r6, 15);
                r8 = mov(r3);
                r1 = lsls(r1, 2);
                r7 = mp_state_ctx;
                r5 = adds(r0, r1);
            case 30:
                r3 = ldr(r4);
                tst(r3, r6);
                if (bne(null, 96)) return;
            case 36:
                r2 = mov(r8);
                r2 = ldr(r7 + r2);
                cmp(r2, r3);
                if (bhi(null, 96)) return;
            case 44:
                r1 = movs(r1, 130);
                r1 = lsls(r1, 2);
                r1 = ldr(r7 + r1);
                cmp(r1, r3);
                if (bls(null, 96)) return;
            case 54:
                r3 = subs(r3, r2);
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r2 = ldr(r7 + r2);
                r0 = lsrs(r3, 4);
                r10 = mov(r2);
                r3 = lsrs(r3, 6);
                r10 = add(r10, r3);
                r3 = mov(r10);
                r2 = ldrb(r3);
                r9 = mov(r2);
                r2 = movs(r2, 3);
                r1 = mov(r9);
                r12 = mov(r2);
                r2 = ands(r2, r0);
                r2 = lsls(r2, 1);
                r1 = asrs(r1, r2);
                r3 = mov(r12);
                r1 = ands(r1, r3);
                cmp(r1, 1);
                if (beq(null, 112)) return;
            case 96:
                r4 = adds(r4, 4);
                cmp(r5, r4);
                if (bne(null, 30)) return;
            case 102:
                pop(false, R2, R3, R4);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                pop(true, R4, R5, R6, R7);
                return;
            case 112:
                r3 = lsls(r3, r2);
                r2 = movs(r2, r3);
                r3 = mov(r9);
                r2 = orrs(r2, r3);
                r3 = mov(r10);
                strb(r3, r2);
                lr = gc_collect_root + 128 | 1;
                bl(this::gc_mark_subtree, 128);
                return;
            case 128:
                b(null, 96);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134219052, size=412, name='gc_collect_end', path='build/py/gc.o', has_indirect=False)
    protected void gc_collect_end(int offset) throws Exception
    {
        pc = gc_collect_end + offset;
        switch (offset)
        {
            case 0:
                r0 = movs(r0, 131);
                r2 = movs(r2, 254);
                push(true, r4, r5, r6, r7);
                r6 = mov(r9);
                r5 = mov(r8);
                lr = mov(r11);
                r7 = mov(r10);
                r0 = lsls(r0, 2);
                r2 = lsls(r2, 1);
                r8 = mov(r0);
                r9 = mov(r2);
                push(true, r5, r6, r7);
                r4 = mp_state_ctx;
                sp = sub(sp, 28);
                r1 = ldr(r4 + r2);
                r3 = ldr(r4 + r0);
                r1 = lsls(r1, 2);
            case 34:
                cmp(r3, 0);
                if (beq(null, 150)) return;
            case 38:
                r3 = movs(r3, 0);
                r2 = mov(r8);
                str(r4 + r2, r3);
                cmp(r1, 0);
                if (beq(null, 112)) return;
            case 48:
                r7 = movs(r7, 252);
                r5 = movs(r5, 0);
                r6 = movs(r6, 3);
                r7 = lsls(r7, 1);
            case 56:
                r2 = ldr(r4 + r7);
                r3 = lsrs(r5, 2);
                r3 = ldrb(r2 + r3);
                r2 = movs(r2, r6);
                r2 = ands(r2, r5);
                r2 = lsls(r2, 1);
                r3 = asrs(r3, r2);
                r3 = ands(r3, r6);
                cmp(r3, 3);
                if (beq(null, 88)) return;
            case 76:
                r5 = adds(r5, 1);
                cmp(r5, r1);
                if (blo(null, 56)) return;
            case 82:
                r3 = mov(r8);
                r3 = ldr(r4 + r3);
                b(null, 34);
                return;
            case 88:
                r0 = movs(r0, r5);
                lr = gc_collect_end + 94 | 1;
                bl(this::gc_mark_subtree, 94);
                return;
            case 94:
                r3 = mov(r9);
                r1 = ldr(r4 + r3);
                r5 = adds(r5, 1);
                r1 = lsls(r1, 2);
                cmp(r1, r5);
                if (bhi(null, 56)) return;
            case 106:
                r3 = mov(r8);
                r3 = ldr(r4 + r3);
                b(null, 34);
                return;
            case 112:
                r3 = movs(r3, 200);
                r3 = lsls(r3, 2);
                str(r4 + r3, r1);
            case 118:
                r3 = movs(r3, 199);
                r2 = movs(r2, 0);
                r3 = lsls(r3, 2);
                str(r4 + r3, r2);
                r2 = movs(r2, 196);
                r2 = lsls(r2, 2);
                r3 = ldrh(r4 + r2);
                r3 = subs(r3, 1);
                strh(r4 + r2, r3);
                sp = add(sp, 28);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 150:
                r2 = movs(r2, 200);
                r2 = lsls(r2, 2);
                str(r4 + r2, r3);
                cmp(r1, 0);
                if (beq(null, 118)) return;
            case 160:
                r12 = mov(r3);
                r3 = adds(r3, 249);
                r3 = adds(r3, 255);
                r9 = mov(r3);
                r3 = adds(r3, 4);
                r5 = movs(r5, 0);
                r7 = movs(r7, 3);
                r11 = mov(r3);
                b(null, 192);
                return;
            case 178:
                cmp(r3, 3);
                if (beq(null, 388)) return;
            case 182:
                cmp(r3, 1);
                if (beq(null, 248)) return;
            case 186:
                r5 = adds(r5, 1);
                cmp(r5, r1);
                if (bhs(null, 118)) return;
            case 192:
                r3 = lsrs(r5, 2);
                r8 = mov(r3);
                r3 = mov(r9);
                r3 = ldr(r4 + r3);
                r6 = movs(r6, r7);
                r3 = add(r3, r8);
                r0 = ldrb(r3);
                r2 = movs(r2, r3);
                r3 = movs(r3, r0);
                r6 = ands(r6, r5);
                r6 = lsls(r6, 1);
                r3 = asrs(r3, r6);
                r3 = ands(r3, r7);
                cmp(r3, 2);
                if (bne(null, 178)) return;
            case 222:
                r3 = mov(r12);
                cmp(r3, 0);
                if (beq(null, 186)) return;
            case 228:
                r3 = movs(r3, r7);
                r3 = lsls(r3, r6);
                r0 = bics(r0, r3);
                r3 = mov(r11);
                strb(r2, r0);
                r1 = ldr(r4 + r3);
                r3 = movs(r3, 1);
                r1 = lsls(r1, 2);
                r12 = mov(r3);
                b(null, 186);
                return;
            case 248:
                r0 = lsrs(r5, 3);
                r12 = mov(r0);
                str(sp + 12, r0);
                r0 = movs(r0, 7);
                r1 = movs(r1, 128);
                r0 = ands(r0, r5);
                r10 = mov(r0);
                r1 = lsls(r1, 2);
                r1 = ldr(r4 + r1);
                r1 = add(r1, r12);
                str(sp + 4, r1);
                r1 = ldrb(r1);
                r0 = movs(r0, r1);
                str(sp + 8, r1);
                r1 = mov(r10);
                r0 = asrs(r0, r1);
                tst(r3, r0);
                if (beq(null, 374)) return;
            case 284:
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r3 = ldr(r4 + r3);
                r2 = lsls(r5, 4);
                r3 = adds(r3, r2);
                r2 = ldr(r3);
                cmp(r2, 0);
                if (beq(null, 352)) return;
            case 300:
                r0 = movs(r0, r3);
                r2 = add(sp, 16);
                r1 = movs(r1, 15);
                lr = gc_collect_end + 310 | 1;
                bl(this::mp_load_method_maybe, 310);
                return;
            case 310:
                r3 = ldr(sp + 16);
                cmp(r3, 0);
                if (beq(null, 332)) return;
            case 316:
                lr = gc_collect_end + 320 | 1;
                bl(this::mp_sched_lock, 320);
                return;
            case 320:
                r1 = ldr(sp + 20);
                r0 = ldr(sp + 16);
                lr = gc_collect_end + 328 | 1;
                bl(this::mp_call_function_1_protected, 328);
                return;
            case 328:
                lr = gc_collect_end + 332 | 1;
                bl(this::mp_sched_unlock, 332);
                return;
            case 332:
                r3 = movs(r3, 128);
                r3 = lsls(r3, 2);
                r1 = ldr(r4 + r3);
                r3 = ldr(sp + 12);
                r12 = mov(r3);
                r3 = movs(r3, r1);
                r3 = add(r3, r12);
                str(sp + 4, r3);
                r3 = ldrb(r3);
                str(sp + 8, r3);
            case 352:
                r2 = mov(r10);
                r3 = movs(r3, 1);
                r3 = lsls(r3, r2);
                r0 = ldr(sp + 8);
                r0 = bics(r0, r3);
                r3 = ldr(sp + 4);
                strb(r3, r0);
                r3 = mov(r9);
                r3 = ldr(r4 + r3);
                r3 = add(r3, r8);
                r2 = movs(r2, r3);
            case 374:
                r1 = movs(r1, 200);
                r1 = lsls(r1, 2);
                r3 = ldr(r4 + r1);
                r3 = adds(r3, 1);
                str(r4 + r1, r3);
                r0 = ldrb(r2);
                b(null, 228);
                return;
            case 388:
                r3 = movs(r3, 2);
                r3 = lsls(r3, r6);
                r0 = bics(r0, r3);
                r3 = mov(r11);
                strb(r2, r0);
                r1 = ldr(r4 + r3);
                r3 = movs(r3, 0);
                r1 = lsls(r1, 2);
                r12 = mov(r3);
                b(null, 186);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134219464, size=280, name='gc_info', path='build/py/gc.o', has_indirect=False)
    protected void gc_info(int offset) throws Exception
    {
        pc = gc_info + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 130);
                r1 = movs(r1, 129);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r1 = lsls(r1, 2);
                r1 = ldr(r2 + r1);
                r3 = ldr(r2 + r3);
                push(true, r4, r5, r6, r7);
                r3 = subs(r3, r1);
                str(r0, r3);
                r3 = movs(r3, 0);
                r7 = mov(r10);
                r5 = mov(r8);
                r6 = mov(r9);
                lr = mov(r11);
                str(r0 + 4, r3);
                str(r0 + 8, r3);
                str(r0 + 12, r3);
                str(r0 + 16, r3);
                str(r0 + 20, r3);
                str(r0 + 24, r3);
                r3 = adds(r3, 249);
                r3 = adds(r3, 255);
                push(true, r5, r6, r7);
                r7 = ldr(r2 + r3);
                r3 = adds(r3, 4);
                r5 = ldr(r2 + r3);
                r3 = movs(r3, 0);
                r1 = movs(r1, 0);
                r8 = mov(r3);
                r12 = mov(r3);
                r2 = movs(r2, 0);
                r10 = mov(r3);
                r9 = mov(r3);
                r4 = movs(r4, 3);
                sp = sub(sp, 12);
                r5 = lsls(r5, 2);
                str(sp + 4, r3);
            case 76:
                r3 = mov(r10);
                r6 = movs(r6, r4);
                r3 = ldrb(r7 + r3);
                r6 = ands(r6, r2);
                r6 = lsls(r6, 1);
                r3 = asrs(r3, r6);
                r3 = ands(r3, r4);
                cmp(r3, 1);
                if (beq(null, 238)) return;
            case 94:
                cmp(r3, 0);
                if (beq(null, 222)) return;
            case 98:
                cmp(r3, 2);
                if (bne(null, 112)) return;
            case 102:
                r6 = ldr(sp + 4);
                r1 = adds(r1, 1);
                r6 = adds(r6, 1);
                str(sp + 4, r6);
                str(r0 + 4, r6);
            case 112:
                r2 = adds(r2, 1);
                cmp(r5, r2);
                if (beq(null, 140)) return;
            case 118:
                r6 = movs(r6, r4);
                r3 = lsrs(r2, 2);
                r10 = mov(r3);
                r6 = ands(r6, r2);
                r3 = ldrb(r7 + r3);
                r6 = lsls(r6, 1);
                r3 = asrs(r3, r6);
                r3 = ands(r3, r4);
                if (beq(null, 140)) return;
            case 136:
                cmp(r3, 1);
                if (bne(null, 76)) return;
            case 140:
                cmp(r1, 1);
                if (beq(null, 176)) return;
            case 144:
                cmp(r1, 2);
                if (bne(null, 154)) return;
            case 148:
                r6 = ldr(r0 + 20);
                r6 = adds(r6, 1);
                str(r0 + 20, r6);
            case 154:
                r6 = ldr(r0 + 24);
                cmp(r6, r1);
                if (bhs(null, 162)) return;
            case 160:
                str(r0 + 24, r1);
            case 162:
                cmp(r5, r2);
                if (beq(null, 184)) return;
            case 166:
                cmp(r3, 1);
                if (beq(null, 250)) return;
            case 170:
                r3 = lsrs(r2, 2);
                r10 = mov(r3);
                b(null, 76);
                return;
            case 176:
                r6 = ldr(r0 + 16);
                r6 = adds(r6, 1);
                str(r0 + 16, r6);
                b(null, 154);
                return;
            case 184:
                cmp(r12, r9);
                if (bls(null, 196)) return;
            case 188:
                r3 = mov(r12);
                str(r0 + 12, r3);
                cmp(r5, r2);
                if (bne(null, 260)) return;
            case 196:
                r3 = ldr(sp + 4);
                r6 = lsls(r3, 4);
                r3 = mov(r8);
                r3 = lsls(r3, 4);
                str(r0 + 4, r6);
                str(r0 + 8, r3);
                sp = add(sp, 12);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 222:
                r1 = movs(r1, 1);
                r10 = mov(r1);
                r8 = add(r8, r10);
                r1 = mov(r8);
                r12 = add(r12, r10);
                str(r0 + 8, r1);
                r1 = movs(r1, 0);
                b(null, 112);
                return;
            case 238:
                r1 = ldr(sp + 4);
                r1 = adds(r1, 1);
                str(sp + 4, r1);
                str(r0 + 4, r1);
                r1 = movs(r1, 1);
                b(null, 112);
                return;
            case 250:
                cmp(r9, r12);
                if (blo(null, 188)) return;
            case 254:
                r3 = movs(r3, 0);
                r12 = mov(r3);
                b(null, 170);
                return;
            case 260:
                r3 = movs(r3, 0);
                r12 = mov(r3);
                r3 = lsrs(r2, 2);
                r10 = mov(r3);
                r3 = ldr(r0 + 12);
                r9 = mov(r3);
                b(null, 76);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134219744, size=460, name='gc_alloc', path='build/py/gc.o', has_indirect=False)
    protected void gc_alloc(int offset) throws Exception
    {
        pc = gc_alloc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                lr = mov(r11);
                r7 = mov(r10);
                r6 = mov(r9);
                r5 = mov(r8);
                push(true, r5, r6, r7);
                r0 = adds(r0, 15);
                sp = sub(sp, 12);
                str(sp + 4, r1);
                r4 = lsrs(r0, 4);
                if (beq(null, 214)) return;
            case 22:
                r3 = movs(r3, 196);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldrh(r2 + r3);
                cmp(r3, 0);
                if (bne(null, 214)) return;
            case 34:
                r3 = 0x00000312;
                r3 = ldrh(r2 + r3);
                r1 = rsbs(r3, 0);
                r1 = adcs(r1, r3);
                r10 = mov(r1);
                cmp(r3, 0);
                if (bne(null, 220)) return;
            case 48:
                r3 = movs(r3, 199);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r1 = ldr(r2 + r3);
                r3 = subs(r3, 33);
                r3 = subs(r3, 255);
                r5 = ldr(r2 + r3);
                cmp(r5, r1);
                if (bls(null, 180)) return;
            case 66:
                r3 = movs(r3, 252);
                r3 = lsls(r3, 1);
                r0 = ldr(r2 + r3);
                r2 = movs(r2, 3);
                r12 = mov(r2);
                r2 = adds(r2, 9);
                r8 = mov(r2);
                r2 = adds(r2, 36);
                r3 = movs(r3, 0);
                r9 = mov(r2);
                r7 = movs(r7, 63);
                b(null, 142);
                return;
            case 90:
                r3 = adds(r3, 1);
                cmp(r4, r3);
                if (bls(null, 240)) return;
            case 96:
                r6 = mov(r8);
                tst(r6, r2);
                if (bne(null, 158)) return;
            case 102:
                r3 = adds(r3, 1);
                cmp(r4, r3);
                if (bhi(null, 110)) return;
            case 108:
                b(null, 434);
                return;
            case 110:
                r6 = mov(r9);
                tst(r6, r2);
                if (bne(null, 166)) return;
            case 116:
                r3 = adds(r3, 1);
                cmp(r4, r3);
                if (bhi(null, 124)) return;
            case 122:
                b(null, 440);
                return;
            case 124:
                r2 = bics(r2, r7);
                if (bne(null, 172)) return;
            case 128:
                r3 = adds(r3, 1);
                cmp(r4, r3);
                if (bhi(null, 136)) return;
            case 134:
                b(null, 446);
                return;
            case 136:
                r1 = adds(r1, 1);
                cmp(r1, r5);
                if (bhs(null, 180)) return;
            case 142:
                r6 = mov(r12);
                r2 = ldrb(r0 + r1);
                tst(r6, r2);
                if (beq(null, 90)) return;
            case 150:
                r6 = mov(r8);
                r3 = movs(r3, 0);
                tst(r6, r2);
                if (beq(null, 102)) return;
            case 158:
                r6 = mov(r9);
                r3 = movs(r3, 0);
                tst(r6, r2);
                if (beq(null, 116)) return;
            case 166:
                r3 = movs(r3, 0);
                r2 = bics(r2, r7);
                if (beq(null, 128)) return;
            case 172:
                r1 = adds(r1, 1);
                r3 = movs(r3, 0);
                cmp(r1, r5);
                if (blo(null, 142)) return;
            case 180:
                r3 = mov(r10);
                cmp(r3, 0);
                if (bne(null, 214)) return;
            case 186:
                lr = gc_alloc + 190 | 1;
                bl(this::gc_collect, 190);
                return;
            case 190:
                r3 = movs(r3, 199);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r1 = ldr(r2 + r3);
                r3 = subs(r3, 33);
                r3 = subs(r3, 255);
                r5 = ldr(r2 + r3);
                r3 = subs(r3, 252);
                r3 = subs(r3, 255);
                r10 = mov(r3);
                cmp(r5, r1);
                if (bhi(null, 66)) return;
            case 214:
                r3 = movs(r3, 0);
                r9 = mov(r3);
                b(null, 418);
                return;
            case 220:
                r3 = movs(r3, 197);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r1 = mp_state_ctx;
                r2 = ldr(r2 + r3);
                r3 = adds(r3, 4);
                r3 = ldr(r1 + r3);
                cmp(r2, r3);
                if (blo(null, 48)) return;
            case 238:
                b(null, 186);
                return;
            case 240:
                r1 = lsls(r1, 2);
            case 242:
                r7 = subs(r1, r3);
                r2 = adds(r1, 1);
                r5 = adds(r7, 1);
                r8 = mov(r2);
                cmp(r3, 1);
                if (bne(null, 264)) return;
            case 254:
                r3 = movs(r3, 199);
                r6 = mp_state_ctx;
                r2 = lsrs(r2, 2);
                r3 = lsls(r3, 2);
                str(r6 + r3, r2);
            case 264:
                r3 = lsrs(r5, 2);
                r0 = adds(r0, r3);
                r3 = movs(r3, 3);
                r2 = movs(r2, 1);
                r3 = ands(r3, r5);
                r3 = lsls(r3, 1);
                r2 = lsls(r2, r3);
                r3 = ldrb(r0);
                r2 = orrs(r2, r3);
                r3 = adds(r7, 2);
                strb(r0, r2);
                cmp(r1, r3);
                if (blo(null, 340)) return;
            case 290:
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r10 = mov(r2);
                r2 = subs(r2, 246);
                r2 = subs(r2, 255);
                r9 = mov(r2);
                r7 = movs(r7, 2);
            case 304:
                r0 = mov(r10);
                r6 = mp_state_ctx;
                r2 = lsrs(r3, 2);
                r0 = ldr(r6 + r0);
                r6 = movs(r6, r7);
                r12 = mov(r0);
                r0 = mov(r9);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r6 = lsls(r6, r0);
                r0 = movs(r0, r6);
                r2 = add(r2, r12);
                r6 = ldrb(r2);
                r3 = adds(r3, 1);
                r0 = orrs(r0, r6);
                strb(r2, r0);
                cmp(r1, r3);
                if (bhs(null, 304)) return;
            case 340:
                r2 = movs(r2, 129);
                r1 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r2 = ldr(r1 + r2);
                r3 = lsls(r5, 4);
                r9 = mov(r2);
                r9 = add(r9, r3);
                r3 = movs(r3, 197);
                r3 = lsls(r3, 2);
                r2 = ldr(r1 + r3);
                r0 = mov(r9);
                r12 = mov(r2);
                r4 = add(r4, r12);
                str(r1 + r3, r4);
                r3 = mov(r8);
                r2 = subs(r3, r5);
                r2 = lsls(r2, 4);
                r1 = movs(r1, 0);
                lr = gc_alloc + 380 | 1;
                bl(this::memset, 380);
                return;
            case 380:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (beq(null, 418)) return;
            case 386:
                r3 = movs(r3, 0);
                r2 = mov(r9);
                str(r2, r3);
                r2 = movs(r2, 128);
                r1 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r2 = ldr(r1 + r2);
                r3 = lsrs(r5, 3);
                r2 = adds(r2, r3);
                r3 = movs(r3, 7);
                r5 = ands(r5, r3);
                r3 = subs(r3, 6);
                r3 = lsls(r3, r5);
                r1 = ldrb(r2);
                r3 = orrs(r3, r1);
                strb(r2, r3);
            case 418:
                r0 = mov(r9);
                sp = add(sp, 12);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 434:
                r1 = lsls(r1, 2);
                r1 = adds(r1, 1);
                b(null, 242);
                return;
            case 440:
                r1 = lsls(r1, 2);
                r1 = adds(r1, 2);
                b(null, 242);
                return;
            case 446:
                r1 = lsls(r1, 2);
                r1 = adds(r1, 3);
                b(null, 242);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134220204, size=132, name='gc_free', path='build/py/gc.o', has_indirect=False)
    protected void gc_free(int offset) throws Exception
    {
        pc = gc_free + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 196);
                push(true, r4, r5, r6, r7);
                r6 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldrh(r6 + r3);
                cmp(r3, 0);
                if (bne(null, 120)) return;
            case 14:
                cmp(r0, 0);
                if (beq(null, 120)) return;
            case 18:
                r3 = movs(r3, 129);
                r2 = movs(r2, 128);
                r3 = lsls(r3, 2);
                r3 = ldr(r6 + r3);
                r2 = lsls(r2, 2);
                r0 = subs(r0, r3);
                r2 = ldr(r6 + r2);
                r1 = lsrs(r0, 7);
                r2 = adds(r2, r1);
                r1 = movs(r1, 7);
                r4 = movs(r4, 1);
                r3 = lsrs(r0, 4);
                r1 = ands(r1, r3);
                r4 = lsls(r4, r1);
                r1 = ldrb(r2);
                r0 = lsrs(r0, 6);
                r1 = bics(r1, r4);
                strb(r2, r1);
                r2 = movs(r2, 199);
                r2 = lsls(r2, 2);
                r1 = ldr(r6 + r2);
                cmp(r0, r1);
                if (blo(null, 122)) return;
            case 64:
                r7 = movs(r7, 252);
                r7 = lsls(r7, 1);
                r1 = movs(r1, 3);
                r12 = mov(r7);
                r4 = ldr(r6 + r7);
                r5 = lsrs(r3, 2);
                r2 = ldrb(r4 + r0);
            case 78:
                r0 = movs(r0, r1);
                r7 = movs(r7, r1);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r7 = lsls(r7, r0);
                r2 = bics(r2, r7);
                strb(r4 + r5, r2);
                r2 = mov(r12);
                r3 = adds(r3, 1);
                r4 = ldr(r6 + r2);
                r5 = lsrs(r3, 2);
                r2 = ldrb(r4 + r5);
                r0 = movs(r0, r1);
                r7 = movs(r7, r2);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r7 = asrs(r7, r0);
                r0 = movs(r0, r7);
                r0 = ands(r0, r1);
                cmp(r0, 2);
                if (beq(null, 78)) return;
            case 120:
                pop(true, R4, R5, R6, R7);
                return;
            case 122:
                str(r6 + r2, r0);
                b(null, 64);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134220336, size=108, name='gc_nbytes', path='build/py/gc.o', has_indirect=False)
    protected void gc_nbytes(int offset) throws Exception
    {
        pc = gc_nbytes + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 15);
                push(true, r4, r5);
                r3 = ands(r3, r0);
                r2 = movs(r2, 0);
                cmp(r3, 0);
                if (bne(null, 98)) return;
            case 12:
                r2 = movs(r2, 129);
                r1 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r4 = ldr(r1 + r2);
                r2 = movs(r2, r3);
                cmp(r4, r0);
                if (bhi(null, 98)) return;
            case 26:
                r2 = movs(r2, 130);
                r2 = lsls(r2, 2);
                r5 = ldr(r1 + r2);
                r2 = movs(r2, r3);
                cmp(r5, r0);
                if (bls(null, 98)) return;
            case 38:
                r2 = adds(r2, 249);
                r2 = adds(r2, 255);
                r0 = subs(r0, r4);
                r5 = ldr(r1 + r2);
                r2 = subs(r2, 246);
                r2 = subs(r2, 255);
                r4 = lsrs(r0, 4);
                r0 = lsrs(r0, 6);
                r1 = ldrb(r5 + r0);
                r0 = movs(r0, r2);
                r0 = ands(r0, r4);
                r0 = lsls(r0, 1);
                r1 = asrs(r1, r0);
                r1 = ands(r1, r2);
                r2 = movs(r2, r3);
                cmp(r1, 1);
                if (bne(null, 98)) return;
            case 72:
                r0 = movs(r0, 3);
            case 74:
                r2 = adds(r2, 1);
                r3 = adds(r4, r2);
                r1 = lsrs(r3, 2);
                r1 = ldrb(r5 + r1);
                r3 = ands(r3, r0);
                r3 = lsls(r3, 1);
                r1 = asrs(r1, r3);
                r3 = movs(r3, r1);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (beq(null, 74)) return;
            case 96:
                r2 = lsls(r2, 4);
            case 98:
                r0 = movs(r0, r2);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134220444, size=680, name='gc_realloc', path='build/py/gc.o', has_indirect=False)
    protected void gc_realloc(int offset) throws Exception
    {
        pc = gc_realloc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = mov(r8);
                lr = mov(r11);
                r7 = mov(r10);
                r6 = mov(r9);
                push(true, r5, r6, r7);
                r12 = mov(r1);
                sp = sub(sp, 12);
                r5 = subs(r0, 0);
                if (bne(null, 22)) return;
            case 20:
                b(null, 470);
                return;
            case 22:
                r3 = movs(r3, 196);
                r1 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldrh(r1 + r3);
                r1 = mov(r12);
                cmp(r1, 0);
                if (beq(null, 240)) return;
            case 36:
                cmp(r3, 0);
                if (bne(null, 244)) return;
            case 40:
                r3 = movs(r3, 129);
                r1 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldr(r1 + r3);
                r1 = mov(r12);
                r3 = subs(r0, r3);
                r7 = lsrs(r3, 4);
                str(sp + 4, r3);
                r3 = movs(r3, 254);
                r0 = mp_state_ctx;
                r3 = lsls(r3, 1);
                r3 = ldr(r0 + r3);
                r1 = adds(r1, 15);
                r3 = lsls(r3, 2);
                r6 = adds(r7, 1);
                r1 = lsrs(r1, 4);
                r10 = mov(r3);
                cmp(r3, r6);
                if (bhi(null, 80)) return;
            case 78:
                b(null, 664);
                return;
            case 80:
                r3 = movs(r3, 252);
                r3 = lsls(r3, 1);
                r3 = ldr(r0 + r3);
                str(sp, r3);
                r3 = movs(r3, 1);
                r8 = mov(r3);
                r3 = movs(r3, 0);
                r9 = mov(r3);
                r3 = adds(r3, 3);
                r11 = mov(r3);
                r0 = mov(r9);
            case 102:
                r4 = ldr(sp);
                r3 = lsrs(r6, 2);
                r3 = ldrb(r4 + r3);
                r4 = mov(r11);
                r4 = ands(r4, r6);
                r4 = lsls(r4, 1);
                r3 = asrs(r3, r4);
                r4 = mov(r11);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (beq(null, 262)) return;
            case 124:
                cmp(r3, 0);
                if (bne(null, 138)) return;
            case 128:
                r3 = mov(r8);
                r0 = adds(r0, 1);
                r3 = adds(r3, r0);
                cmp(r3, r1);
                if (blo(null, 268)) return;
            case 138:
                r9 = mov(r0);
            case 140:
                cmp(r1, r8);
                if (beq(null, 236)) return;
            case 144:
                if (bhs(null, 148)) return;
            case 146:
                b(null, 390);
                return;
            case 148:
                r3 = mov(r9);
                r3 = add(r3, r8);
                cmp(r3, r1);
                if (bhs(null, 158)) return;
            case 156:
                b(null, 482);
                return;
            case 158:
                r3 = mov(r8);
                r2 = adds(r7, r3);
                r7 = adds(r7, r1);
                cmp(r7, r2);
                if (bls(null, 220)) return;
            case 168:
                r3 = movs(r3, 252);
                r3 = lsls(r3, 1);
                r10 = mov(r3);
                r3 = subs(r3, 246);
                r3 = subs(r3, 255);
                r9 = mov(r3);
                r3 = subs(r3, 1);
                r12 = mov(r3);
            case 184:
                r0 = mov(r10);
                r4 = mp_state_ctx;
                r3 = lsrs(r2, 2);
                r0 = ldr(r4 + r0);
                r4 = mov(r12);
                r11 = mov(r0);
                r0 = mov(r9);
                r0 = ands(r0, r2);
                r0 = lsls(r0, 1);
                r4 = lsls(r4, r0);
                r0 = movs(r0, r4);
                r3 = add(r3, r11);
                r6 = ldrb(r3);
                r2 = adds(r2, 1);
                r0 = orrs(r0, r6);
                strb(r3, r0);
                cmp(r7, r2);
                if (bne(null, 184)) return;
            case 220:
                r3 = mov(r8);
                r2 = subs(r1, r3);
                r0 = lsls(r3, 4);
                r2 = lsls(r2, 4);
                r0 = adds(r5, r0);
                r1 = movs(r1, 0);
                lr = gc_realloc + 236 | 1;
                bl(this::memset, 236);
                return;
            case 236:
                r7 = movs(r7, r5);
                b(null, 246);
                return;
            case 240:
                cmp(r3, 0);
                if (beq(null, 276)) return;
            case 244:
                r7 = movs(r7, 0);
            case 246:
                r0 = movs(r0, r7);
                sp = add(sp, 12);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 262:
                r3 = subs(r3, 1);
                r9 = mov(r3);
                r8 = add(r8, r9);
            case 268:
                r6 = adds(r6, 1);
                cmp(r10, r6);
                if (bne(null, 102)) return;
            case 274:
                b(null, 138);
                return;
            case 276:
                r3 = movs(r3, 129);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldr(r2 + r3);
                r2 = movs(r2, 128);
                r5 = subs(r0, r3);
                r0 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r2 = ldr(r0 + r2);
                r1 = lsrs(r5, 7);
                r2 = adds(r2, r1);
                r1 = movs(r1, 7);
                r0 = movs(r0, 1);
                r3 = lsrs(r5, 4);
                r1 = ands(r1, r3);
                r0 = lsls(r0, r1);
                r1 = ldrb(r2);
                r5 = lsrs(r5, 6);
                r1 = bics(r1, r0);
                strb(r2, r1);
                r2 = movs(r2, 199);
                r1 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r1 = ldr(r1 + r2);
                cmp(r5, r1);
                if (bhs(null, 332)) return;
            case 328:
                r1 = mp_state_ctx;
                str(r1 + r2, r5);
            case 332:
                r7 = movs(r7, 252);
                r1 = movs(r1, 3);
                r2 = mp_state_ctx;
                r7 = lsls(r7, 1);
                r6 = ldr(r2 + r7);
                r2 = ldrb(r6 + r5);
                r5 = lsrs(r3, 2);
            case 346:
                r0 = movs(r0, r1);
                r4 = movs(r4, r1);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r4 = lsls(r4, r0);
                r2 = bics(r2, r4);
                strb(r6 + r5, r2);
                r2 = mp_state_ctx;
                r3 = adds(r3, 1);
                r6 = ldr(r2 + r7);
                r5 = lsrs(r3, 2);
                r2 = ldrb(r6 + r5);
                r0 = movs(r0, r1);
                r4 = movs(r4, r2);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r4 = asrs(r4, r0);
                r0 = movs(r0, r4);
                r0 = ands(r0, r1);
                cmp(r0, 2);
                if (beq(null, 346)) return;
            case 388:
                b(null, 244);
                return;
            case 390:
                r12 = mov(r1);
                r3 = movs(r3, r5);
                r8 = add(r8, r7);
                r12 = add(r12, r7);
                r7 = movs(r7, 252);
                r5 = mov(r8);
                r6 = mov(r12);
                r2 = movs(r2, 3);
                r8 = mov(r3);
                r7 = lsls(r7, 1);
            case 410:
                r1 = mp_state_ctx;
                r0 = movs(r0, r2);
                r1 = ldr(r1 + r7);
                r3 = lsrs(r6, 2);
                r9 = mov(r1);
                r1 = movs(r1, r2);
                r1 = ands(r1, r6);
                r1 = lsls(r1, 1);
                r0 = lsls(r0, r1);
                r3 = add(r3, r9);
                r1 = ldrb(r3);
                r6 = adds(r6, 1);
                r1 = bics(r1, r0);
                strb(r3, r1);
                cmp(r6, r5);
                if (bne(null, 410)) return;
            case 442:
                r3 = mov(r12);
                r1 = lsrs(r3, 2);
                r3 = movs(r3, 199);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r2 = ldr(r2 + r3);
                r5 = mov(r8);
                cmp(r1, r2);
                if (blo(null, 462)) return;
            case 460:
                b(null, 236);
                return;
            case 462:
                r2 = mp_state_ctx;
                r7 = mov(r8);
                str(r2 + r3, r1);
                b(null, 246);
                return;
            case 470:
                r1 = movs(r1, 0);
                r0 = mov(r12);
                lr = gc_realloc + 478 | 1;
                bl(this::gc_alloc, 478);
                return;
            case 478:
                r7 = movs(r7, r0);
                b(null, 246);
                return;
            case 482:
                r1 = movs(r1, 128);
                r6 = movs(r6, 7);
                r0 = mp_state_ctx;
                r1 = lsls(r1, 2);
                r3 = ldr(sp + 4);
                r9 = mov(r1);
                r1 = ldr(r0 + r1);
                r3 = lsrs(r3, 7);
                r1 = ldrb(r1 + r3);
                r7 = ands(r7, r6);
                r3 = movs(r3, 1);
                r1 = asrs(r1, r7);
                r10 = mov(r3);
                r1 = ands(r1, r3);
                cmp(r2, 0);
                if (bne(null, 516)) return;
            case 514:
                b(null, 244);
                return;
            case 516:
                r0 = mov(r12);
                lr = gc_realloc + 522 | 1;
                bl(this::gc_alloc, 522);
                return;
            case 522:
                r7 = subs(r0, 0);
                if (bne(null, 528)) return;
            case 526:
                b(null, 244);
                return;
            case 528:
                r3 = mov(r8);
                r1 = movs(r1, r5);
                r2 = lsls(r3, 4);
                lr = gc_realloc + 538 | 1;
                bl(this::memcpy, 538);
                return;
            case 538:
                r3 = movs(r3, 196);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldrh(r2 + r3);
                cmp(r3, 0);
                if (beq(null, 552)) return;
            case 550:
                b(null, 246);
                return;
            case 552:
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r3 = ldr(r2 + r3);
                r0 = movs(r0, r2);
                r2 = mov(r9);
                r2 = ldr(r0 + r2);
                r0 = mov(r10);
                r5 = subs(r5, r3);
                r3 = lsrs(r5, 4);
                r6 = ands(r6, r3);
                r0 = lsls(r0, r6);
                r1 = lsrs(r5, 7);
                r2 = adds(r2, r1);
                r1 = ldrb(r2);
                r5 = lsrs(r5, 6);
                r1 = bics(r1, r0);
                strb(r2, r1);
                r2 = movs(r2, 199);
                r1 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r1 = ldr(r1 + r2);
                cmp(r5, r1);
                if (bhs(null, 602)) return;
            case 598:
                r1 = mp_state_ctx;
                str(r1 + r2, r5);
            case 602:
                r0 = movs(r0, 252);
                r0 = lsls(r0, 1);
                r1 = movs(r1, 3);
                r12 = mov(r0);
                r2 = mp_state_ctx;
                r6 = ldr(r2 + r0);
                r2 = ldrb(r6 + r5);
                r5 = lsrs(r3, 2);
            case 618:
                r0 = movs(r0, r1);
                r4 = movs(r4, r1);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r4 = lsls(r4, r0);
                r2 = bics(r2, r4);
                strb(r6 + r5, r2);
                r2 = mov(r12);
                r0 = mp_state_ctx;
                r3 = adds(r3, 1);
                r6 = ldr(r0 + r2);
                r5 = lsrs(r3, 2);
                r2 = ldrb(r6 + r5);
                r0 = movs(r0, r1);
                r4 = movs(r4, r2);
                r0 = ands(r0, r3);
                r0 = lsls(r0, 1);
                r4 = asrs(r4, r0);
                r0 = movs(r0, r4);
                r0 = ands(r0, r1);
                cmp(r0, 2);
                if (beq(null, 618)) return;
            case 662:
                b(null, 246);
                return;
            case 664:
                r3 = movs(r3, 1);
                r8 = mov(r3);
                r3 = movs(r3, 0);
                r9 = mov(r3);
                b(null, 140);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134221124, size=316, name='gc_dump_info', path='build/py/gc.o', has_indirect=False)
    protected void gc_dump_info(int offset) throws Exception
    {
        pc = gc_dump_info + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = mov(r10);
                r6 = mov(r9);
                r5 = mov(r8);
                lr = mov(r11);
                r2 = movs(r2, 130);
                push(true, r5, r6, r7);
                r3 = mp_state_ctx;
                r2 = lsls(r2, 2);
                r1 = ldr(r3 + r2);
                r2 = subs(r2, 4);
                r2 = ldr(r3 + r2);
                sp = sub(sp, 28);
                r2 = subs(r1, r2);
                str(sp + 20, r2);
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r2 = ldr(r3 + r2);
                r6 = movs(r6, 0);
                r10 = mov(r2);
                r2 = movs(r2, 254);
                r2 = lsls(r2, 1);
                r7 = ldr(r3 + r2);
                r3 = movs(r3, 0);
                r5 = movs(r5, 0);
                r11 = mov(r3);
                r9 = mov(r3);
                r0 = movs(r0, 0);
                r8 = mov(r3);
                r1 = movs(r1, 0);
                r4 = movs(r4, 3);
                r7 = lsls(r7, 2);
                str(sp + 16, r3);
                str(sp + 12, r3);
                str(sp + 8, r6);
            case 70:
                r2 = mov(r10);
                r2 = ldrb(r2 + r3);
                r3 = movs(r3, r4);
                r3 = ands(r3, r1);
                r3 = lsls(r3, 1);
                r2 = asrs(r2, r3);
                r2 = ands(r2, r4);
                cmp(r2, 1);
                if (beq(null, 276)) return;
            case 88:
                cmp(r2, 0);
                if (beq(null, 260)) return;
            case 92:
                cmp(r2, 2);
                if (bne(null, 104)) return;
            case 96:
                r3 = movs(r3, 1);
                r12 = mov(r3);
                r0 = adds(r0, 1);
                r9 = add(r9, r12);
            case 104:
                r1 = adds(r1, 1);
                cmp(r1, r7);
                if (beq(null, 132)) return;
            case 110:
                r2 = mov(r10);
                r6 = movs(r6, r4);
                r3 = lsrs(r1, 2);
                r2 = ldrb(r2 + r3);
                r6 = ands(r6, r1);
                r6 = lsls(r6, 1);
                r2 = asrs(r2, r6);
                r2 = ands(r2, r4);
                if (beq(null, 132)) return;
            case 128:
                cmp(r2, 1);
                if (bne(null, 70)) return;
            case 132:
                cmp(r0, 1);
                if (beq(null, 252)) return;
            case 136:
                r3 = subs(r0, 2);
                r6 = rsbs(r3, 0);
                r6 = adcs(r6, r3);
                r3 = movs(r3, r6);
                r6 = ldr(sp + 8);
                r12 = mov(r6);
                r12 = add(r12, r3);
                r3 = mov(r12);
                str(sp + 8, r3);
            case 154:
                cmp(r5, r0);
                if (bhs(null, 160)) return;
            case 158:
                r5 = movs(r5, r0);
            case 160:
                cmp(r1, r7);
                if (beq(null, 186)) return;
            case 164:
                cmp(r2, 1);
                if (beq(null, 172)) return;
            case 168:
                r3 = lsrs(r1, 2);
                b(null, 70);
                return;
            case 172:
                r3 = ldr(sp + 16);
                cmp(r3, r8);
                if (blo(null, 286)) return;
            case 178:
                r3 = movs(r3, 0);
                r8 = mov(r3);
                r3 = lsrs(r1, 2);
                b(null, 70);
                return;
            case 186:
                r4 = mov(r8);
                r3 = ldr(sp + 16);
                r6 = ldr(sp + 8);
                cmp(r4, r3);
                if (bhs(null, 198)) return;
            case 196:
                r4 = movs(r4, r3);
            case 198:
                r2 = mp_plat_print;
                r3 = mov(r9);
                r8 = mov(r2);
                r2 = ldr(sp + 12);
                r3 = lsls(r3, 4);
                r2 = lsls(r2, 4);
                str(sp, r2);
                r1 = gc_dump_info_str1_4;
                r2 = ldr(sp + 20);
                r0 = mov(r8);
                lr = gc_dump_info + 222 | 1;
                bl(this::mp_printf, 222);
                return;
            case 222:
                str(sp + 4, r4);
                str(sp, r5);
                r3 = movs(r3, r6);
                r2 = mov(r11);
                r1 = 0x0801f8c0;
                r0 = mov(r8);
                lr = gc_dump_info + 238 | 1;
                bl(this::mp_printf, 238);
                return;
            case 238:
                sp = add(sp, 28);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 252:
                r3 = mov(r11);
                r3 = adds(r3, 1);
                r11 = mov(r3);
                b(null, 154);
                return;
            case 260:
                r3 = ldr(sp + 12);
                r0 = movs(r0, 0);
                r3 = adds(r3, 1);
                str(sp + 12, r3);
                r3 = movs(r3, 1);
                r12 = mov(r3);
                r8 = add(r8, r12);
                b(null, 104);
                return;
            case 276:
                r3 = movs(r3, 1);
                r12 = mov(r3);
                r0 = movs(r0, 1);
                r9 = add(r9, r12);
                b(null, 104);
                return;
            case 286:
                r3 = mov(r8);
                str(sp + 16, r3);
                r3 = movs(r3, 0);
                r8 = mov(r3);
                r3 = lsrs(r1, 2);
                b(null, 70);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134221440, size=452, name='gc_dump_alloc_table', path='build/py/gc.o', has_indirect=False)
    protected void gc_dump_alloc_table(int offset) throws Exception
    {
        pc = gc_dump_alloc_table + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                lr = mov(r11);
                r7 = mov(r10);
                r6 = mov(r9);
                r5 = mov(r8);
                r3 = movs(r3, 129);
                push(true, r5, r6, r7);
                r7 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r2 = ldr(r7 + r3);
                r3 = mp_plat_print;
                sp = sub(sp, 12);
                r0 = movs(r0, r3);
                r1 = gc_dump_alloc_table_str1_4;
                r9 = mov(r3);
                lr = gc_dump_alloc_table + 34 | 1;
                bl(this::mp_printf, 34);
                return;
            case 34:
                r3 = movs(r3, 254);
                r3 = lsls(r3, 1);
                r5 = ldr(r7 + r3);
                r5 = lsls(r5, 2);
                if (bne(null, 46)) return;
            case 44:
                b(null, 328);
                return;
            case 46:
                r3 = 0x0801f88c;
                r4 = movs(r4, 0);
                r10 = mov(r3);
                r3 = mp_type_tuple;
                r11 = mov(r3);
                b(null, 110);
                return;
            case 58:
                r3 = movs(r3, 252);
                r2 = mov(r8);
                r3 = lsls(r3, 1);
                r3 = ldr(r7 + r3);
                r2 = ldrb(r3 + r2);
                r3 = movs(r3, 3);
                r2 = asrs(r2, r6);
                r3 = ands(r3, r2);
                cmp(r3, 2);
                if (beq(null, 318)) return;
            case 78:
                cmp(r3, 3);
                if (beq(null, 314)) return;
            case 82:
                cmp(r3, 1);
                if (beq(null, 234)) return;
            case 86:
                r2 = movs(r2, 46);
            case 88:
                r1 = 0x0801f894;
                r0 = mov(r9);
                lr = gc_dump_alloc_table + 96 | 1;
                bl(this::mp_printf, 96);
                return;
            case 96:
                r3 = movs(r3, 254);
                r3 = lsls(r3, 1);
                r5 = ldr(r7 + r3);
                r4 = adds(r4, 1);
                r5 = lsls(r5, 2);
                cmp(r5, r4);
                if (bls(null, 328)) return;
            case 110:
                r3 = movs(r3, 3);
                r6 = movs(r6, r3);
                r2 = lsrs(r4, 2);
                r6 = ands(r6, r4);
                r6 = lsls(r6, 1);
                r8 = mov(r2);
                r2 = lsls(r4, 26);
                if (bne(null, 58)) return;
            case 126:
                cmp(r4, r5);
                if (bhs(null, 218)) return;
            case 130:
                r2 = movs(r2, 252);
                r2 = lsls(r2, 1);
                r0 = ldr(r7 + r2);
                r2 = mov(r8);
                r2 = ldrb(r0 + r2);
                r2 = asrs(r2, r6);
                tst(r3, r2);
                if (bne(null, 218)) return;
            case 146:
                r3 = movs(r3, r4);
                r1 = movs(r1, 3);
                str(sp + 4, r4);
                b(null, 170);
                return;
            case 154:
                r4 = movs(r4, r1);
                r2 = lsrs(r3, 2);
                r2 = ldrb(r0 + r2);
                r4 = ands(r4, r3);
                r4 = lsls(r4, 1);
                r2 = asrs(r2, r4);
                tst(r1, r2);
                if (bne(null, 322)) return;
            case 170:
                r3 = adds(r3, 1);
                cmp(r3, r5);
                if (bne(null, 154)) return;
            case 176:
                r4 = ldr(sp + 4);
            case 178:
                r2 = subs(r5, r4);
                cmp(r2, 127);
                if (bls(null, 218)) return;
            case 184:
                r2 = lsrs(r2, 6);
                r1 = 0x0801f870;
                r0 = mov(r9);
                lr = gc_dump_alloc_table + 194 | 1;
                bl(this::mp_printf, 194);
                return;
            case 194:
                r4 = movs(r4, r5);
                r3 = movs(r3, 63);
                r4 = bics(r4, r3);
                r3 = adds(r3, 190);
                r3 = adds(r3, 255);
                r3 = ldr(r7 + r3);
                r3 = lsls(r3, 2);
                cmp(r3, r4);
                if (bls(null, 328)) return;
            case 212:
                r3 = lsrs(r4, 2);
                r8 = mov(r3);
                r6 = movs(r6, 0);
            case 218:
                r3 = 0x000ffff0;
                r2 = lsls(r4, 4);
                r2 = ands(r2, r3);
                r1 = mov(r10);
                r0 = mov(r9);
                lr = gc_dump_alloc_table + 232 | 1;
                bl(this::mp_printf, 232);
                return;
            case 232:
                b(null, 58);
                return;
            case 234:
                r3 = movs(r3, 129);
                r3 = lsls(r3, 2);
                r3 = ldr(r7 + r3);
                r2 = lsls(r4, 4);
                r3 = ldr(r2 + r3);
                cmp(r3, r11);
                if (beq(null, 350)) return;
            case 248:
                r2 = mp_type_list;
                cmp(r3, r2);
                if (beq(null, 358)) return;
            case 254:
                r2 = mp_type_dict;
                cmp(r3, r2);
                if (beq(null, 362)) return;
            case 260:
                r2 = mp_type_str;
                cmp(r3, r2);
                if (beq(null, 354)) return;
            case 266:
                r2 = mp_type_bytes;
                cmp(r3, r2);
                if (beq(null, 354)) return;
            case 272:
                r2 = mp_type_bytearray;
                cmp(r3, r2);
                if (beq(null, 366)) return;
            case 278:
                r2 = mp_type_array;
                cmp(r3, r2);
                if (beq(null, 366)) return;
            case 284:
                r2 = mp_type_float;
                cmp(r3, r2);
                if (beq(null, 370)) return;
            case 290:
                r2 = mp_type_fun_bc;
                cmp(r3, r2);
                if (beq(null, 374)) return;
            case 296:
                r2 = mp_type_module;
                r3 = subs(r3, r2);
                r2 = subs(r3, 1);
                r3 = sbcs(r3, r2);
                r2 = movs(r2, 27);
                r3 = rsbs(r3, 0);
                r2 = ands(r2, r3);
                r2 = adds(r2, 77);
                b(null, 88);
                return;
            case 314:
                r2 = movs(r2, 109);
                b(null, 88);
                return;
            case 318:
                r2 = movs(r2, 61);
                b(null, 88);
                return;
            case 322:
                r4 = ldr(sp + 4);
                r5 = movs(r5, r3);
                b(null, 178);
                return;
            case 328:
                r1 = 0x0801f898;
                r0 = mov(r9);
                lr = gc_dump_alloc_table + 336 | 1;
                bl(this::mp_print_str, 336);
                return;
            case 336:
                sp = add(sp, 12);
                pop(false, R2, R3, R4, R5);
                r8 = mov(r2);
                r9 = mov(r3);
                r10 = mov(r4);
                r11 = mov(r5);
                pop(true, R4, R5, R6, R7);
                return;
            case 350:
                r2 = movs(r2, 84);
                b(null, 88);
                return;
            case 354:
                r2 = movs(r2, 83);
                b(null, 88);
                return;
            case 358:
                r2 = movs(r2, 76);
                b(null, 88);
                return;
            case 362:
                r2 = movs(r2, 68);
                b(null, 88);
                return;
            case 366:
                r2 = movs(r2, 65);
                b(null, 88);
                return;
            case 370:
                r2 = movs(r2, 70);
                b(null, 88);
                return;
            case 374:
                r2 = movs(r2, 66);
                b(null, 88);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134221956, size=28, name='find_qstr', path='build/py/qstr.o', has_indirect=False)
    protected void find_qstr(int offset) throws Exception
    {
        pc = find_qstr + offset;
        switch (offset)
        {
            case 0:
                r3 = mp_state_ctx;
                r3 = ldr(r3 + 32);
            case 4:
                r2 = ldr(r3 + 4);
                cmp(r2, r0);
                if (bhi(null, 20)) return;
            case 10:
                r0 = subs(r0, r2);
                r0 = adds(r0, 4);
                r0 = lsls(r0, 2);
                r0 = ldr(r0 + r3);
                bx(lr);
                return;
            case 20:
                r3 = ldr(r3);
                b(null, 4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134221984, size=36, name='qstr_compute_hash', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_compute_hash(int offset) throws Exception
    {
        pc = qstr_compute_hash + offset;
        switch (offset)
        {
            case 0:
                r3 = 0x00001505;
                r1 = adds(r0, r1);
            case 4:
                cmp(r0, r1);
                if (blo(null, 18)) return;
            case 8:
                r0 = uxth(r3);
                cmp(r0, 0);
                if (bne(null, 16)) return;
            case 14:
                r0 = adds(r0, 1);
            case 16:
                bx(lr);
                return;
            case 18:
                r2 = lsls(r3, 5);
                r3 = adds(r2, r3);
                r2 = ldrb(r0);
                r0 = adds(r0, 1);
                r3 = eors(r3, r2);
                b(null, 4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222020, size=24, name='qstr_init', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_init(int offset) throws Exception
    {
        assert offset == 0;
        pc = qstr_init + offset;
        r3 = mp_state_ctx;
        r2 = mp_qstr_frozen_const_pool;
        r1 = movs(r1, 0);
        str(r3 + 32, r2);
        r2 = movs(r2, 236);
        r2 = lsls(r2, 1);
        str(r3 + r2, r1);
        bx(lr);
    }

    // function: Function(address=134222044, size=108, name='qstr_find_strn', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_find_strn(int offset) throws Exception
    {
        pc = qstr_find_strn + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 20);
                str(sp + 4, r0);
                r6 = movs(r6, r1);
                lr = qstr_find_strn + 12 | 1;
                bl(this::qstr_compute_hash, 12);
                return;
            case 12:
                r3 = mp_state_ctx;
                str(sp + 8, r0);
                r4 = ldr(r3 + 32);
            case 18:
                cmp(r4, 0);
                if (bne(null, 26)) return;
            case 22:
                r0 = movs(r0, r4);
                b(null, 94);
                return;
            case 26:
                r7 = movs(r7, r4);
                r7 = adds(r7, 16);
                r5 = movs(r5, r7);
                r3 = ldr(r4 + 12);
                r3 = lsls(r3, 2);
                r3 = adds(r7, r3);
                str(sp + 12, r3);
            case 40:
                r3 = ldr(sp + 12);
                cmp(r5, r3);
                if (blo(null, 50)) return;
            case 46:
                r4 = ldr(r4);
                b(null, 18);
                return;
            case 50:
                r0 = ldr(r5);
                r3 = ldrb(r0 + 1);
                r2 = ldrb(r0);
                r3 = lsls(r3, 8);
                r3 = orrs(r3, r2);
                r2 = ldr(sp + 8);
                cmp(r3, r2);
                if (bne(null, 98)) return;
            case 66:
                r3 = ldrb(r0 + 2);
                cmp(r3, r6);
                if (bne(null, 98)) return;
            case 72:
                r0 = adds(r0, 3);
                r2 = movs(r2, r6);
                r1 = ldr(sp + 4);
                lr = qstr_find_strn + 82 | 1;
                bl(this::memcmp, 82);
                return;
            case 82:
                cmp(r0, 0);
                if (bne(null, 98)) return;
            case 86:
                r5 = subs(r5, r7);
                r0 = ldr(r4 + 4);
                r5 = asrs(r5, 2);
                r0 = adds(r5, r0);
            case 94:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 98:
                r5 = adds(r5, 4);
                b(null, 40);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222152, size=296, name='qstr_from_strn', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_from_strn(int offset) throws Exception
    {
        pc = qstr_from_strn + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 20);
                str(sp + 8, r0);
                str(sp + 4, r1);
                lr = qstr_from_strn + 12 | 1;
                bl(this::qstr_find_strn, 12);
                return;
            case 12:
                r3 = subs(r0, 0);
                if (beq(null, 18)) return;
            case 16:
                b(null, 286);
                return;
            case 18:
                r2 = ldr(sp + 4);
                r4 = mp_state_ctx;
                r7 = adds(r2, 4);
                r2 = movs(r2, 236);
                r2 = lsls(r2, 1);
                r0 = ldr(r4 + r2);
                cmp(r0, 0);
                if (beq(null, 86)) return;
            case 34:
                r6 = movs(r6, 238);
                r2 = adds(r2, 8);
                r2 = ldr(r4 + r2);
                r6 = lsls(r6, 1);
                r1 = ldr(r4 + r6);
                str(sp + 12, r2);
                r2 = adds(r7, r2);
                cmp(r2, r1);
                if (bls(null, 86)) return;
            case 52:
                r2 = adds(r7, r1);
                lr = qstr_from_strn + 58 | 1;
                bl(this::m_realloc_maybe, 58);
                return;
            case 58:
                r5 = subs(r0, 0);
                if (bne(null, 142)) return;
            case 62:
                r3 = movs(r3, r0);
                r0 = movs(r0, 236);
                r2 = movs(r2, 240);
                r0 = lsls(r0, 1);
                r1 = ldr(r4 + r6);
                r6 = movs(r6, r0);
                r2 = lsls(r2, 1);
                r2 = ldr(r4 + r2);
                r0 = ldr(r4 + r0);
                lr = qstr_from_strn + 84 | 1;
                bl(this::m_realloc_maybe, 84);
                return;
            case 84:
                str(r4 + r6, r5);
            case 86:
                r5 = movs(r5, 236);
                r3 = mp_state_ctx;
                r5 = lsls(r5, 1);
                r3 = ldr(r3 + r5);
                cmp(r3, 0);
                if (bne(null, 162)) return;
            case 98:
                r6 = movs(r6, r7);
                cmp(r7, 128);
                if (bhs(null, 106)) return;
            case 104:
                r6 = movs(r6, 128);
            case 106:
                r0 = movs(r0, r6);
                lr = qstr_from_strn + 112 | 1;
                bl(this::m_malloc_maybe, 112);
                return;
            case 112:
                r3 = mp_state_ctx;
                str(r3 + r5, r0);
                cmp(r0, 0);
                if (bne(null, 150)) return;
            case 120:
                r0 = movs(r0, r7);
                lr = qstr_from_strn + 126 | 1;
                bl(this::m_malloc_maybe, 126);
                return;
            case 126:
                r3 = mp_state_ctx;
                r6 = movs(r6, r7);
                str(r3 + r5, r0);
                cmp(r0, 0);
                if (bne(null, 150)) return;
            case 136:
                r0 = movs(r0, r7);
            case 138:
                lr = qstr_from_strn + 142 | 1;
                bl(this::m_malloc_fail, 142);
                return;
            case 142:
                r3 = ldr(r4 + r6);
                r3 = adds(r3, r7);
                str(r4 + r6, r3);
                b(null, 86);
                return;
            case 150:
                r3 = movs(r3, 238);
                r2 = movs(r2, 0);
                r3 = lsls(r3, 1);
                str(r4 + r3, r6);
                r3 = adds(r3, 4);
                str(r4 + r3, r2);
            case 162:
                r2 = movs(r2, 240);
                r1 = movs(r1, 236);
                r2 = lsls(r2, 1);
                r1 = lsls(r1, 1);
                r3 = ldr(r4 + r2);
                r5 = ldr(r4 + r1);
                r0 = ldr(sp + 8);
                r5 = adds(r5, r3);
                r1 = ldr(sp + 4);
                r3 = adds(r7, r3);
                str(r4 + r2, r3);
                lr = qstr_from_strn + 188 | 1;
                bl(this::qstr_compute_hash, 188);
                return;
            case 188:
                r6 = movs(r6, 0);
                r3 = ldr(sp + 4);
                strb(r5, r0);
                r0 = lsrs(r0, 8);
                strb(r5 + 1, r0);
                strb(r5 + 2, r3);
                r2 = movs(r2, r3);
                r0 = adds(r5, 3);
                r1 = ldr(sp + 8);
                lr = qstr_from_strn + 210 | 1;
                bl(this::memcpy, 210);
                return;
            case 210:
                r3 = ldr(sp + 4);
                r3 = adds(r5, r3);
                strb(r3 + 3, r6);
                r3 = ldr(r4 + 32);
                r0 = ldr(r3 + 8);
                r3 = ldr(r3 + 12);
                cmp(r3, r0);
                if (blo(null, 266)) return;
            case 226:
                r0 = adds(r0, 2);
                r0 = lsls(r0, 3);
                lr = qstr_from_strn + 234 | 1;
                bl(this::m_malloc_maybe, 234);
                return;
            case 234:
                r3 = ldr(r4 + 32);
                cmp(r0, r6);
                if (bne(null, 246)) return;
            case 240:
                r0 = ldr(r3 + 8);
                r0 = lsls(r0, 1);
                b(null, 138);
                return;
            case 246:
                r2 = ldr(r3 + 4);
                r1 = ldr(r3 + 12);
                str(r0, r3);
                r3 = ldr(r3 + 8);
                r2 = adds(r2, r1);
                r3 = lsls(r3, 1);
                str(r0 + 4, r2);
                str(r0 + 8, r3);
                str(r0 + 12, r6);
                str(r4 + 32, r0);
            case 266:
                r1 = ldr(r4 + 32);
                r2 = ldr(r1 + 12);
                r3 = ldr(r1 + 4);
                r0 = adds(r2, 1);
                r2 = adds(r2, 4);
                r2 = lsls(r2, 2);
                r3 = subs(r3, 1);
                str(r1 + 12, r0);
                r3 = adds(r3, r0);
                str(r2 + r1, r5);
            case 286:
                r0 = movs(r0, r3);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222448, size=18, name='qstr_from_str', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_from_str(int offset) throws Exception
    {
        pc = qstr_from_str + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = qstr_from_str + 8 | 1;
                bl(this::strlen, 8);
                return;
            case 8:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = qstr_from_str + 16 | 1;
                bl(this::qstr_from_strn, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222466, size=16, name='qstr_hash', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_hash(int offset) throws Exception
    {
        pc = qstr_hash + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = qstr_hash + 6 | 1;
                bl(this::find_qstr, 6);
                return;
            case 6:
                r3 = ldrb(r0);
                r0 = ldrb(r0 + 1);
                r0 = lsls(r0, 8);
                r0 = orrs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222482, size=10, name='qstr_len', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_len(int offset) throws Exception
    {
        pc = qstr_len + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = qstr_len + 6 | 1;
                bl(this::find_qstr, 6);
                return;
            case 6:
                r0 = ldrb(r0 + 2);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222492, size=10, name='qstr_str', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_str(int offset) throws Exception
    {
        pc = qstr_str + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = qstr_str + 6 | 1;
                bl(this::find_qstr, 6);
                return;
            case 6:
                r0 = adds(r0, 3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222502, size=16, name='qstr_data', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_data(int offset) throws Exception
    {
        pc = qstr_data + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                lr = qstr_data + 8 | 1;
                bl(this::find_qstr, 8);
                return;
            case 8:
                r3 = ldrb(r0 + 2);
                r0 = adds(r0, 3);
                str(r4, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222520, size=120, name='qstr_pool_info', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_pool_info(int offset) throws Exception
    {
        pc = qstr_pool_info + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r3);
                r6 = movs(r6, r2);
                r3 = movs(r3, 0);
                r7 = movs(r7, r0);
                str(r0, r3);
                str(r1, r3);
                str(r6, r3);
                str(r5, r3);
                r3 = mp_state_ctx;
                str(sp, r1);
                r4 = ldr(r3 + 32);
            case 24:
                cmp(r4, 0);
                if (beq(null, 34)) return;
            case 28:
                r3 = mp_qstr_frozen_const_pool;
                cmp(r4, r3);
                if (bne(null, 44)) return;
            case 34:
                r3 = ldr(r6);
                r2 = ldr(r5);
                r3 = adds(r2, r3);
                str(r5, r3);
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 44:
                r3 = ldr(r7);
                r3 = adds(r3, 1);
                str(r7, r3);
                r2 = ldr(r4 + 12);
                r3 = ldr(sp);
                r12 = mov(r2);
                r3 = ldr(r3);
                r2 = ldr(sp);
                str(sp + 4, r3);
                r3 = add(r3, r12);
                str(r2, r3);
                r2 = movs(r2, r4);
                r3 = ldr(r4 + 12);
                r2 = adds(r2, 16);
                r3 = lsls(r3, 2);
                r3 = adds(r2, r3);
            case 76:
                cmp(r2, r3);
                if (blo(null, 96)) return;
            case 80:
                r0 = movs(r0, r4);
                lr = qstr_pool_info + 86 | 1;
                bl(this::gc_nbytes, 86);
                return;
            case 86:
                r3 = ldr(r5);
                r4 = ldr(r4);
                r0 = adds(r3, r0);
                str(r5, r0);
                b(null, 24);
                return;
            case 96:
                r2 = ldm(r2, R1);
                r0 = ldr(r6);
                r1 = ldrb(r1 + 2);
                r0 = adds(r0, 4);
                r1 = adds(r1, r0);
                str(r6, r1);
                b(null, 76);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222640, size=68, name='qstr_dump_data', path='build/py/qstr.o', has_indirect=False)
    protected void qstr_dump_data(int offset) throws Exception
    {
        pc = qstr_dump_data + offset;
        switch (offset)
        {
            case 0:
                r3 = mp_state_ctx;
                push(true, r4, r5, r6);
                r4 = ldr(r3 + 32);
            case 6:
                cmp(r4, 0);
                if (beq(null, 16)) return;
            case 10:
                r3 = mp_qstr_frozen_const_pool;
                cmp(r4, r3);
                if (bne(null, 18)) return;
            case 16:
                pop(true, R4, R5, R6);
                return;
            case 18:
                r6 = movs(r6, r4);
                r3 = ldr(r4 + 12);
                r6 = adds(r6, 16);
                r5 = lsls(r3, 2);
                r5 = adds(r6, r5);
            case 28:
                cmp(r6, r5);
                if (blo(null, 36)) return;
            case 32:
                r4 = ldr(r4);
                b(null, 6);
                return;
            case 36:
                r6 = ldm(r6, R2);
                r1 = qstr_dump_data_str1_1;
                r2 = adds(r2, 3);
                r0 = mp_plat_print;
                lr = qstr_dump_data + 48 | 1;
                bl(this::mp_printf, 48);
                return;
            case 48:
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222708, size=56, name='vstr_ensure_extra', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_ensure_extra(int offset) throws Exception
    {
        pc = vstr_ensure_extra + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 4);
                push(true, r4, r5, r6);
                r4 = adds(r1, r3);
                r1 = ldr(r0);
                r5 = movs(r5, r0);
                cmp(r4, r1);
                if (bls(null, 48)) return;
            case 14:
                r3 = ldrb(r0 + 12);
                r3 = lsls(r3, 31);
                if (bpl(null, 28)) return;
            case 20:
                r1 = movs(r1, 0);
                r0 = mp_type_RuntimeError;
                lr = vstr_ensure_extra + 28 | 1;
                bl(this::mp_raise_msg, 28);
                return;
            case 28:
                r3 = movs(r3, 7);
                r4 = adds(r4, 16);
                r4 = bics(r4, r3);
                r4 = adds(r4, 8);
                r2 = movs(r2, r4);
                r0 = ldr(r0 + 8);
                lr = vstr_ensure_extra + 44 | 1;
                bl(this::m_realloc, 44);
                return;
            case 44:
                str(r5, r4);
                str(r5 + 8, r0);
            case 48:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222764, size=36, name='vstr_add_strn', path='build/py/vstr.o', has_indirect=True)
    protected void vstr_add_strn(int offset) throws Exception
    {
        pc = vstr_add_strn + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r6 = movs(r6, r1);
                r5 = movs(r5, r2);
                r1 = movs(r1, r2);
                lr = vstr_add_strn + 14 | 1;
                bl(this::vstr_ensure_extra, 14);
                return;
            case 14:
                r3 = ldr(r4 + 8);
                r2 = ldr(r4 + 4);
                r1 = movs(r1, r6);
                r0 = adds(r3, r2);
                r2 = movs(r2, r5);
                lr = vstr_add_strn + 28 | 1;
                bl(this::memmove, 28);
                return;
            case 28:
                r3 = ldr(r4 + 4);
                r5 = adds(r3, r5);
                str(r4 + 4, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222800, size=48, name='vstr_ins_blank_bytes_constprop_2', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_ins_blank_bytes_constprop_2(int offset) throws Exception
    {
        pc = vstr_ins_blank_bytes_constprop_2 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = ldr(r0 + 4);
                r4 = movs(r4, r0);
                r5 = movs(r5, r6);
                cmp(r6, r1);
                if (bls(null, 14)) return;
            case 12:
                r5 = movs(r5, r1);
            case 14:
                r0 = movs(r0, r4);
                r1 = movs(r1, 1);
                lr = vstr_ins_blank_bytes_constprop_2 + 22 | 1;
                bl(this::vstr_ensure_extra, 22);
                return;
            case 22:
                r0 = ldr(r4 + 8);
                r3 = adds(r5, 1);
                r2 = subs(r6, r5);
                r1 = adds(r0, r5);
                r0 = adds(r0, r3);
                lr = vstr_ins_blank_bytes_constprop_2 + 36 | 1;
                bl(this::memmove, 36);
                return;
            case 36:
                r3 = ldr(r4 + 4);
                r0 = ldr(r4 + 8);
                r3 = adds(r3, 1);
                r0 = adds(r0, r5);
                str(r4 + 4, r3);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222848, size=34, name='vstr_init', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_init(int offset) throws Exception
    {
        pc = vstr_init + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                cmp(r1, 0);
                if (bne(null, 10)) return;
            case 8:
                r1 = adds(r1, 1);
            case 10:
                r3 = movs(r3, 0);
                str(r4, r1);
                str(r4 + 4, r3);
                r0 = movs(r0, r1);
                lr = vstr_init + 22 | 1;
                bl(this::m_malloc, 22);
                return;
            case 22:
                r2 = movs(r2, 1);
                r3 = ldrb(r4 + 12);
                str(r4 + 8, r0);
                r3 = bics(r3, r2);
                strb(r4 + 12, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222882, size=16, name='vstr_init_len', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_init_len(int offset) throws Exception
    {
        pc = vstr_init_len + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                r1 = adds(r1, 1);
                lr = vstr_init_len + 12 | 1;
                bl(this::vstr_init, 12);
                return;
            case 12:
                str(r4 + 4, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222898, size=18, name='vstr_init_fixed_buf', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_init_fixed_buf(int offset) throws Exception
    {
        assert offset == 0;
        pc = vstr_init_fixed_buf + offset;
        r3 = movs(r3, 0);
        str(r0 + 8, r2);
        r2 = ldrb(r0 + 12);
        str(r0 + 4, r3);
        r3 = adds(r3, 1);
        r3 = orrs(r3, r2);
        str(r0, r1);
        strb(r0 + 12, r3);
        bx(lr);
    }

    // function: Function(address=134222916, size=24, name='vstr_init_print', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_init_print(int offset) throws Exception
    {
        pc = vstr_init_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r4 = movs(r4, r2);
                lr = vstr_init_print + 10 | 1;
                bl(this::vstr_init, 10);
                return;
            case 10:
                r3 = vstr_add_strn | 1;
                hint(vstr_add_strn | 1, this::vstr_add_strn);
                str(r4, r5);
                str(r4 + 4, r3);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222940, size=24, name='vstr_clear', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_clear(int offset) throws Exception
    {
        pc = vstr_clear + offset;
        switch (offset)
        {
            case 0:
                r3 = ldrb(r0 + 12);
                push(true, r4);
                r4 = movs(r4, r0);
                r3 = lsls(r3, 31);
                if (bmi(null, 18)) return;
            case 10:
                r1 = ldr(r0);
                r0 = ldr(r0 + 8);
                lr = vstr_clear + 18 | 1;
                bl(this::m_free, 18);
                return;
            case 18:
                r3 = movs(r3, 0);
                str(r4 + 8, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222964, size=22, name='vstr_new', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_new(int offset) throws Exception
    {
        pc = vstr_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, 16);
                lr = vstr_new + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r4 = movs(r4, r0);
                r1 = movs(r1, r5);
                lr = vstr_new + 18 | 1;
                bl(this::vstr_init, 18);
                return;
            case 18:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134222986, size=30, name='vstr_free', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_free(int offset) throws Exception
    {
        pc = vstr_free + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = subs(r0, 0);
                if (beq(null, 28)) return;
            case 6:
                r3 = ldrb(r0 + 12);
                r3 = lsls(r3, 31);
                if (bmi(null, 20)) return;
            case 12:
                r1 = ldr(r0);
                r0 = ldr(r0 + 8);
                lr = vstr_free + 20 | 1;
                bl(this::m_free, 20);
                return;
            case 20:
                r1 = movs(r1, 16);
                r0 = movs(r0, r4);
                lr = vstr_free + 28 | 1;
                bl(this::m_free, 28);
                return;
            case 28:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223016, size=48, name='vstr_extend', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_extend(int offset) throws Exception
    {
        pc = vstr_extend + offset;
        switch (offset)
        {
            case 0:
                r3 = ldrb(r0 + 12);
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r3 = lsls(r3, 31);
                if (bpl(null, 20)) return;
            case 12:
                r1 = movs(r1, 0);
                r0 = mp_type_RuntimeError;
                lr = vstr_extend + 20 | 1;
                bl(this::mp_raise_msg, 20);
                return;
            case 20:
                r3 = ldr(r0);
                r0 = ldr(r0 + 8);
                r2 = adds(r3, r1);
                r1 = movs(r1, r3);
                lr = vstr_extend + 32 | 1;
                bl(this::m_realloc, 32);
                return;
            case 32:
                r3 = ldr(r4);
                str(r4 + 8, r0);
                r5 = adds(r3, r5);
                str(r4, r5);
                r0 = adds(r0, r3);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223064, size=22, name='vstr_add_len', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_add_len(int offset) throws Exception
    {
        pc = vstr_add_len + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                lr = vstr_add_len + 10 | 1;
                bl(this::vstr_ensure_extra, 10);
                return;
            case 10:
                r1 = ldr(r4 + 4);
                r3 = ldr(r4 + 8);
                r0 = adds(r3, r1);
                r1 = adds(r1, r5);
                str(r4 + 4, r1);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223086, size=30, name='vstr_null_terminated_str', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_null_terminated_str(int offset) throws Exception
    {
        pc = vstr_null_terminated_str + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0);
                r2 = ldr(r0 + 4);
                push(true, r4);
                r4 = movs(r4, r0);
                cmp(r3, r2);
                if (bne(null, 18)) return;
            case 12:
                r1 = movs(r1, 1);
                lr = vstr_null_terminated_str + 18 | 1;
                bl(this::vstr_extend, 18);
                return;
            case 18:
                r3 = movs(r3, 0);
                r2 = ldr(r4 + 8);
                r1 = ldr(r4 + 4);
                strb(r2 + r1, r3);
                r0 = ldr(r4 + 8);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223116, size=14, name='vstr_add_byte', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_add_byte(int offset) throws Exception
    {
        pc = vstr_add_byte + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                r1 = movs(r1, 1);
                lr = vstr_add_byte + 10 | 1;
                bl(this::vstr_add_len, 10);
                return;
            case 10:
                strb(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223132, size=152, name='vstr_add_char', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_add_char(int offset) throws Exception
    {
        pc = vstr_add_char + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                r4 = uxtb(r1);
                cmp(r1, 127);
                if (bhi(null, 20)) return;
            case 10:
                r1 = movs(r1, 1);
                lr = vstr_add_char + 16 | 1;
                bl(this::vstr_add_len, 16);
                return;
            case 16:
                strb(r0, r4);
            case 18:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 20:
                r7 = movs(r7, 63);
                r6 = movs(r6, 128);
                r3 = lsrs(r1, 6);
                r3 = uxtb(r3);
                str(sp, r3);
                r4 = ands(r4, r7);
                r6 = rsbs(r6, 0);
                r3 = 0x000007ff;
                r4 = orrs(r4, r6);
                r4 = uxtb(r4);
                cmp(r1, r3);
                if (bhi(null, 64)) return;
            case 44:
                r1 = movs(r1, 2);
                lr = vstr_add_char + 50 | 1;
                bl(this::vstr_add_len, 50);
                return;
            case 50:
                r3 = movs(r3, 64);
                r2 = ldr(sp);
                r3 = rsbs(r3, 0);
                r3 = orrs(r3, r2);
                strb(r0, r3);
                strb(r0 + 1, r4);
                b(null, 18);
                return;
            case 64:
                r3 = lsrs(r1, 12);
                r3 = uxtb(r3);
                str(sp + 4, r3);
                r3 = ldr(sp);
                r3 = ands(r3, r7);
                r3 = orrs(r3, r6);
                r3 = uxtb(r3);
                str(sp, r3);
                r3 = 0x0000ffff;
                cmp(r1, r3);
                if (bhi(null, 110)) return;
            case 86:
                r7 = movs(r7, 32);
                r1 = movs(r1, 3);
                lr = vstr_add_char + 94 | 1;
                bl(this::vstr_add_len, 94);
                return;
            case 94:
                r3 = ldr(sp + 4);
                r7 = rsbs(r7, 0);
                r7 = orrs(r7, r3);
                r3 = ldr(sp);
                strb(r0, r7);
                strb(r0 + 1, r3);
                strb(r0 + 2, r4);
                b(null, 18);
                return;
            case 110:
                r1 = movs(r1, 4);
                lr = vstr_add_char + 116 | 1;
                bl(this::vstr_add_len, 116);
                return;
            case 116:
                r3 = movs(r3, 16);
                r5 = lsrs(r5, 18);
                r3 = rsbs(r3, 0);
                r5 = orrs(r5, r3);
                r3 = ldr(sp + 4);
                strb(r0, r5);
                r3 = ands(r3, r7);
                r6 = orrs(r6, r3);
                r3 = ldr(sp);
                strb(r0 + 1, r6);
                strb(r0 + 2, r3);
                strb(r0 + 3, r4);
                b(null, 18);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223284, size=24, name='vstr_add_str', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_add_str(int offset) throws Exception
    {
        pc = vstr_add_str + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r4 = movs(r4, r1);
                lr = vstr_add_str + 12 | 1;
                bl(this::strlen, 12);
                return;
            case 12:
                r1 = movs(r1, r4);
                r2 = movs(r2, r0);
                r0 = movs(r0, r5);
                lr = vstr_add_str + 22 | 1;
                bl(this::vstr_add_strn, 22);
                return;
            case 22:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223308, size=12, name='vstr_ins_byte', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_ins_byte(int offset) throws Exception
    {
        pc = vstr_ins_byte + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r2);
                lr = vstr_ins_byte + 8 | 1;
                bl(this::vstr_ins_blank_bytes_constprop_2, 8);
                return;
            case 8:
                strb(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223320, size=12, name='vstr_ins_char', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_ins_char(int offset) throws Exception
    {
        pc = vstr_ins_char + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r2);
                lr = vstr_ins_char + 8 | 1;
                bl(this::vstr_ins_blank_bytes_constprop_2, 8);
                return;
            case 8:
                strb(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223332, size=16, name='vstr_cut_tail_bytes', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_cut_tail_bytes(int offset) throws Exception
    {
        pc = vstr_cut_tail_bytes + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 4);
                cmp(r3, r1);
                if (bhs(null, 12)) return;
            case 6:
                r3 = movs(r3, 0);
            case 8:
                str(r0 + 4, r3);
                bx(lr);
                return;
            case 12:
                r3 = subs(r3, r1);
                b(null, 8);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223348, size=46, name='vstr_cut_out_bytes', path='build/py/vstr.o', has_indirect=False)
    protected void vstr_cut_out_bytes(int offset) throws Exception
    {
        pc = vstr_cut_out_bytes + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r2);
                r2 = ldr(r4 + 4);
                r0 = movs(r0, r1);
                cmp(r2, r1);
                if (bls(null, 22)) return;
            case 14:
                r1 = adds(r1, r5);
                cmp(r2, r1);
                if (bhi(null, 24)) return;
            case 20:
                str(r4 + 4, r0);
            case 22:
                pop(true, R4, R5, R6);
                return;
            case 24:
                r3 = ldr(r4 + 8);
                r2 = subs(r2, r0);
                r2 = subs(r2, r5);
                r1 = adds(r3, r1);
                r0 = adds(r3, r0);
                lr = vstr_cut_out_bytes + 38 | 1;
                bl(this::memmove, 38);
                return;
            case 38:
                r3 = ldr(r4 + 4);
                r5 = subs(r3, r5);
                str(r4 + 4, r5);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134223394, size=12, name='plat_print_strn', path='build/py/mpprint.o', has_indirect=False)
    protected void plat_print_strn(int offset) throws Exception
    {
        pc = plat_print_strn + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                lr = plat_print_strn + 10 | 1;
                bl(this::mp_hal_stdout_tx_strn_cooked, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225250, size=54, name='utf8_get_char', path='build/py/unicode.o', has_indirect=False)
    protected void utf8_get_char(int offset) throws Exception
    {
        pc = utf8_get_char + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r0);
                r2 = sxtb(r3);
                cmp(r2, 0);
                if (bge(null, 34)) return;
            case 10:
                r2 = movs(r2, 127);
                r3 = ands(r3, r2);
                r2 = subs(r2, 63);
            case 16:
                tst(r2, r3);
                if (bne(null, 38)) return;
            case 20:
                r1 = movs(r1, 63);
                r0 = adds(r0, 1);
            case 24:
                r2 = ldrb(r0);
                r4 = movs(r4, r2);
                r4 = bics(r4, r1);
                cmp(r4, 128);
                if (beq(null, 44)) return;
            case 34:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            case 38:
                r3 = bics(r3, r2);
                r2 = lsrs(r2, 1);
                b(null, 16);
                return;
            case 44:
                r3 = lsls(r3, 6);
                r2 = ands(r2, r1);
                r0 = adds(r0, 1);
                r3 = orrs(r3, r2);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225304, size=18, name='utf8_next_char', path='build/py/unicode.o', has_indirect=False)
    protected void utf8_next_char(int offset) throws Exception
    {
        pc = utf8_next_char + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 63);
                r0 = adds(r0, 1);
            case 4:
                r3 = ldrb(r0);
                r3 = bics(r3, r2);
                cmp(r3, 128);
                if (beq(null, 14)) return;
            case 12:
                bx(lr);
                return;
            case 14:
                r0 = adds(r0, 1);
                b(null, 4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225322, size=30, name='utf8_ptr_to_index', path='build/py/unicode.o', has_indirect=False)
    protected void utf8_ptr_to_index(int offset) throws Exception
    {
        pc = utf8_ptr_to_index + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r2 = movs(r2, 0);
                r4 = movs(r4, 63);
            case 6:
                cmp(r1, r0);
                if (bhi(null, 14)) return;
            case 10:
                r0 = movs(r0, r2);
                pop(true, R4, R5);
                return;
            case 14:
                r1 = subs(r1, 1);
                r3 = ldrb(r1);
                r3 = bics(r3, r4);
                r3 = subs(r3, 128);
                r5 = subs(r3, 1);
                r3 = sbcs(r3, r5);
                r2 = adds(r2, r3);
                b(null, 6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225352, size=32, name='utf8_charlen', path='build/py/unicode.o', has_indirect=False)
    protected void utf8_charlen(int offset) throws Exception
    {
        pc = utf8_charlen + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r2 = movs(r2, r0);
                r1 = adds(r0, r1);
                r4 = movs(r4, 63);
                r0 = movs(r0, 0);
            case 10:
                cmp(r2, r1);
                if (blo(null, 16)) return;
            case 14:
                pop(true, R4, R5);
                return;
            case 16:
                r3 = ldrb(r2);
                r2 = adds(r2, 1);
                r3 = bics(r3, r4);
                r3 = subs(r3, 128);
                r5 = subs(r3, 1);
                r3 = sbcs(r3, r5);
                r0 = adds(r0, r3);
                b(null, 10);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225384, size=24, name='unichar_isspace', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_isspace(int offset) throws Exception
    {
        pc = unichar_isspace + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 30);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225408, size=24, name='unichar_isalpha', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_isalpha(int offset) throws Exception
    {
        pc = unichar_isalpha + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 28);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225432, size=24, name='unichar_isdigit', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_isdigit(int offset) throws Exception
    {
        pc = unichar_isdigit + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 29);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225456, size=24, name='unichar_isxdigit', path='build/py/unicode.o', has_indirect=False)
    protected void unichar_isxdigit(int offset) throws Exception
    {
        pc = unichar_isxdigit + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 25);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225480, size=32, name='unichar_isident', path='build/py/unicode.o', has_indirect=False)
    protected void unichar_isident(int offset) throws Exception
    {
        pc = unichar_isident + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 0);
                cmp(r0, 127);
                if (bhi(null, 24)) return;
            case 6:
                r3 = rodata_attr;
                r2 = adds(r2, 1);
                r1 = ldrb(r3 + r0);
                r3 = movs(r3, 12);
                tst(r1, r3);
                if (bne(null, 24)) return;
            case 18:
                r0 = subs(r0, 95);
                r2 = rsbs(r0, 0);
                r2 = adcs(r2, r0);
            case 24:
                r0 = movs(r0, r2);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225512, size=24, name='unichar_isupper', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_isupper(int offset) throws Exception
    {
        pc = unichar_isupper + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 27);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225536, size=24, name='unichar_islower', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_islower(int offset) throws Exception
    {
        pc = unichar_islower + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                cmp(r0, 127);
                if (bhi(null, 14)) return;
            case 6:
                r3 = rodata_attr;
                r3 = ldrb(r3 + r0);
                r3 = lsls(r3, 26);
                r3 = lsrs(r3, 31);
            case 14:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225560, size=18, name='unichar_tolower', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_tolower(int offset) throws Exception
    {
        pc = unichar_tolower + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = unichar_tolower + 8 | 1;
                bl(this::unichar_isupper, 8);
                return;
            case 8:
                cmp(r0, 0);
                if (beq(null, 14)) return;
            case 12:
                r4 = adds(r4, 32);
            case 14:
                r0 = movs(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225578, size=18, name='unichar_toupper', path='build/py/unicode.o', has_indirect=True)
    protected void unichar_toupper(int offset) throws Exception
    {
        pc = unichar_toupper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = unichar_toupper + 8 | 1;
                bl(this::unichar_islower, 8);
                return;
            case 8:
                cmp(r0, 0);
                if (beq(null, 14)) return;
            case 12:
                r4 = subs(r4, 32);
            case 14:
                r0 = movs(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225596, size=14, name='unichar_xdigit_value', path='build/py/unicode.o', has_indirect=False)
    protected void unichar_xdigit_value(int offset) throws Exception
    {
        pc = unichar_xdigit_value + offset;
        switch (offset)
        {
            case 0:
                r0 = subs(r0, 48);
                cmp(r0, 9);
                if (bls(null, 12)) return;
            case 6:
                r3 = movs(r3, 32);
                r0 = bics(r0, r3);
                r0 = subs(r0, 7);
            case 12:
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225610, size=78, name='utf8_check', path='build/py/unicode.o', has_indirect=False)
    protected void utf8_check(int offset) throws Exception
    {
        pc = utf8_check + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = movs(r3, 0);
                r4 = movs(r4, 6);
                r5 = movs(r5, 229);
                r6 = movs(r6, 3);
                r1 = adds(r0, r1);
            case 12:
                cmp(r0, r1);
                if (blo(null, 24)) return;
            case 16:
                r0 = rsbs(r3, 0);
                r3 = adcs(r3, r0);
                r0 = uxtb(r3);
            case 22:
                pop(true, R4, R5, R6);
                return;
            case 24:
                r2 = ldrb(r0);
                cmp(r3, 0);
                if (beq(null, 44)) return;
            case 30:
                r2 = sxtb(r2);
                cmp(r2, 0);
                if (bge(null, 74)) return;
            case 36:
                r3 = subs(r3, 1);
                r3 = uxtb(r3);
            case 40:
                r0 = adds(r0, 1);
                b(null, 12);
                return;
            case 44:
                cmp(r2, 191);
                if (bls(null, 64)) return;
            case 48:
                cmp(r2, 247);
                if (bhi(null, 74)) return;
            case 52:
                r3 = movs(r3, r5);
                r2 = lsrs(r2, 3);
                r2 = ands(r2, r4);
                r3 = asrs(r3, r2);
                r3 = ands(r3, r6);
                b(null, 40);
                return;
            case 64:
                r2 = sxtb(r2);
                cmp(r2, 0);
                if (bge(null, 40)) return;
            case 70:
                r0 = movs(r0, r3);
                b(null, 22);
                return;
            case 74:
                r0 = movs(r0, 0);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225708, size=62, name='text_mpn_shr', path='build/py/mpz.o', has_indirect=False)
    protected void text_mpn_shr(int offset) throws Exception
    {
        pc = text_mpn_shr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = lsrs(r3, 4);
                r4 = movs(r4, 0);
                cmp(r5, r2);
                if (bhs(null, 58)) return;
            case 10:
                r4 = lsls(r5, 1);
                r1 = adds(r1, r4);
                r4 = subs(r2, r5);
                r2 = movs(r2, 15);
                r5 = movs(r5, r4);
                r3 = ands(r3, r2);
            case 22:
                r6 = ldrh(r1);
                r2 = movs(r2, r6);
                cmp(r5, 1);
                if (beq(null, 36)) return;
            case 30:
                r2 = ldrh(r1 + 2);
                r2 = lsls(r2, 16);
                r2 = orrs(r2, r6);
            case 36:
                r2 = lsrs(r2, r3);
                r5 = subs(r5, 1);
                r2 = uxth(r2);
                strh(r0, r2);
                r1 = adds(r1, 2);
                r0 = adds(r0, 2);
                cmp(r5, 0);
                if (bne(null, 22)) return;
            case 52:
                r3 = rsbs(r2, 0);
                r2 = adcs(r2, r3);
                r4 = subs(r4, r2);
            case 58:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225770, size=88, name='text_mpn_add', path='build/py/mpz.o', has_indirect=False)
    protected void text_mpn_add(int offset) throws Exception
    {
        pc = text_mpn_add + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = ldr(sp + 20);
                r2 = subs(r2, r4);
                r12 = mov(r2);
                r2 = movs(r2, 0);
                r7 = movs(r7, r4);
                r4 = movs(r4, r2);
            case 14:
                cmp(r7, 0);
                if (bne(null, 54)) return;
            case 18:
                r3 = ldr(sp + 20);
                r5 = lsls(r3, 1);
                r2 = adds(r0, r5);
                r1 = adds(r1, r5);
                r6 = movs(r6, r2);
                r5 = mov(r12);
            case 30:
                cmp(r5, 0);
                if (bne(null, 72)) return;
            case 34:
                r3 = mov(r12);
                r3 = lsls(r3, 1);
                r2 = adds(r2, r3);
                cmp(r4, 0);
                if (beq(null, 48)) return;
            case 44:
                strh(r2, r4);
                r2 = adds(r2, 2);
            case 48:
                r0 = subs(r2, r0);
                r0 = asrs(r0, 1);
                pop(true, R4, R5, R6, R7);
                return;
            case 54:
                r6 = ldrh(r1 + r2);
                r5 = ldrh(r3 + r2);
                r7 = subs(r7, 1);
                r6 = adds(r6, r5);
                r4 = adds(r6, r4);
                strh(r0 + r2, r4);
                r4 = lsrs(r4, 16);
                r2 = adds(r2, 2);
                b(null, 14);
                return;
            case 72:
                r3 = ldrh(r1);
                r5 = subs(r5, 1);
                r4 = adds(r3, r4);
                strh(r6, r4);
                r1 = adds(r1, 2);
                r4 = lsrs(r4, 16);
                r6 = adds(r6, 2);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134225858, size=80, name='text_mpn_sub', path='build/py/mpz.o', has_indirect=False)
    protected void text_mpn_sub(int offset) throws Exception
    {
        pc = text_mpn_sub + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, 0);
                r4 = ldr(sp + 32);
                r6 = movs(r6, r5);
                r7 = movs(r7, r4);
                str(sp + 4, r3);
                r2 = subs(r2, r4);
            case 14:
                cmp(r7, 0);
                if (bne(null, 42)) return;
            case 18:
                r4 = lsls(r4, 1);
                r3 = adds(r0, r4);
                r5 = movs(r5, r2);
                r7 = movs(r7, r3);
                r1 = adds(r1, r4);
            case 28:
                cmp(r5, 0);
                if (bne(null, 64)) return;
            case 32:
                r2 = lsls(r2, 1);
                r1 = adds(r3, r2);
                lr = text_mpn_sub + 40 | 1;
                bl(this::mpn_remove_trailing_zeros, 40);
                return;
            case 40:
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 42:
                r3 = ldrh(r1 + r5);
                r7 = subs(r7, 1);
                r12 = mov(r3);
                r3 = ldr(sp + 4);
                r6 = add(r6, r12);
                r3 = ldrh(r3 + r5);
                r6 = subs(r6, r3);
                strh(r0 + r5, r6);
                r6 = asrs(r6, 16);
                r5 = adds(r5, 2);
                b(null, 14);
                return;
            case 64:
                r4 = ldrh(r1);
                r5 = subs(r5, 1);
                r6 = adds(r4, r6);
                strh(r7, r6);
                r1 = adds(r1, 2);
                r6 = asrs(r6, 16);
                r7 = adds(r7, 2);
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134230676, size=80, name='is_string_or_bytes', path='build/py/lexer.o', has_indirect=False)
    protected void is_string_or_bytes(int offset) throws Exception
    {
        pc = is_string_or_bytes + offset;
        switch (offset)
        {
            case 0:
                r2 = ldr(r0 + 16);
                r3 = movs(r3, 1);
                cmp(r2, 39);
                if (beq(null, 76)) return;
            case 8:
                cmp(r2, 34);
                if (beq(null, 76)) return;
            case 12:
                cmp(r2, 117);
                if (beq(null, 26)) return;
            case 16:
                r1 = movs(r1, r2);
                r3 = adds(r3, 15);
                r1 = bics(r1, r3);
                cmp(r1, 98);
                if (bne(null, 64)) return;
            case 26:
                r1 = ldr(r0 + 20);
                r3 = movs(r3, 1);
                cmp(r1, 39);
                if (beq(null, 76)) return;
            case 34:
                cmp(r1, 34);
                if (beq(null, 76)) return;
            case 38:
                cmp(r2, 114);
                if (bne(null, 64)) return;
            case 42:
                r3 = movs(r3, 0);
                cmp(r1, 98);
                if (bne(null, 76)) return;
            case 48:
                r0 = ldr(r0 + 24);
                r3 = movs(r3, 1);
                cmp(r0, 39);
                if (beq(null, 76)) return;
            case 56:
                r0 = subs(r0, 34);
                r3 = rsbs(r0, 0);
                r3 = adcs(r3, r0);
                b(null, 76);
                return;
            case 64:
                r3 = movs(r3, 0);
                cmp(r2, 98);
                if (bne(null, 76)) return;
            case 70:
                r2 = ldr(r0 + 20);
                cmp(r2, 114);
                if (beq(null, 48)) return;
            case 76:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134230756, size=96, name='next_char', path='build/py/lexer.o', has_indirect=False)
    protected void next_char(int offset) throws Exception
    {
        pc = next_char + offset;
        switch (offset)
        {
            case 0:
                r2 = ldr(r0 + 16);
                push(true, r4);
                r4 = movs(r4, r0);
                cmp(r2, 10);
                if (bne(null, 80)) return;
            case 10:
                r3 = ldr(r0 + 28);
                r3 = adds(r3, 1);
                str(r0 + 28, r3);
                r3 = movs(r3, 1);
            case 18:
                str(r4 + 32, r3);
                r3 = ldr(r4 + 20);
                r0 = ldr(r4 + 4);
                str(r4 + 16, r3);
                r3 = ldr(r4 + 24);
                str(r4 + 20, r3);
                r3 = ldr(r4 + 8);
                blx(r3, 34);
                return;
            case 34:
                r3 = ldr(r4 + 20);
                str(r4 + 24, r0);
                cmp(r3, 13);
                if (bne(null, 58)) return;
            case 42:
                r3 = subs(r3, 3);
                str(r4 + 20, r3);
                cmp(r0, r3);
                if (bne(null, 58)) return;
            case 50:
                r0 = ldr(r4 + 4);
                r3 = ldr(r4 + 8);
                blx(r3, 56);
                return;
            case 56:
                str(r4 + 24, r0);
            case 58:
                r3 = ldr(r4 + 24);
                r3 = adds(r3, 1);
                if (bne(null, 78)) return;
            case 64:
                r3 = ldr(r4 + 20);
                r2 = adds(r3, 1);
                if (beq(null, 78)) return;
            case 70:
                cmp(r3, 10);
                if (beq(null, 78)) return;
            case 74:
                r3 = movs(r3, 10);
                str(r4 + 24, r3);
            case 78:
                pop(true, R4);
                return;
            case 80:
                r3 = ldr(r0 + 32);
                cmp(r2, 9);
                if (bne(null, 92)) return;
            case 86:
                r3 = adds(r3, 7);
                r2 = subs(r2, 2);
                r3 = bics(r3, r2);
            case 92:
                r3 = adds(r3, 1);
                b(null, 18);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134230852, size=102, name='skip_whitespace', path='build/py/lexer.o', has_indirect=False)
    protected void skip_whitespace(int offset) throws Exception
    {
        pc = skip_whitespace + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r6 = movs(r6, r1);
                r5 = movs(r5, 0);
                r7 = movs(r7, 1);
            case 10:
                r0 = ldr(r4 + 16);
                r3 = adds(r0, 1);
                if (bne(null, 20)) return;
            case 16:
                r0 = movs(r0, r5);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 20:
                cmp(r0, 10);
                if (bne(null, 44)) return;
            case 24:
                cmp(r6, 0);
                if (beq(null, 34)) return;
            case 28:
                r3 = ldr(r4 + 40);
                cmp(r3, 0);
                if (beq(null, 16)) return;
            case 34:
                r0 = movs(r0, r4);
                lr = skip_whitespace + 40 | 1;
                bl(this::next_char, 40);
                return;
            case 40:
                r5 = movs(r5, r7);
                b(null, 10);
                return;
            case 44:
                lr = skip_whitespace + 48 | 1;
                bl(this::unichar_isspace, 48);
                return;
            case 48:
                cmp(r0, 0);
                if (beq(null, 60)) return;
            case 52:
                r0 = movs(r0, r4);
                lr = skip_whitespace + 58 | 1;
                bl(this::next_char, 58);
                return;
            case 58:
                b(null, 10);
                return;
            case 60:
                r3 = ldr(r4 + 16);
                cmp(r3, 35);
                if (bne(null, 84)) return;
            case 66:
                r0 = movs(r0, r4);
                lr = skip_whitespace + 72 | 1;
                bl(this::next_char, 72);
                return;
            case 72:
                r3 = ldr(r4 + 16);
                r2 = adds(r3, 1);
                if (beq(null, 10)) return;
            case 78:
                cmp(r3, 10);
                if (bne(null, 66)) return;
            case 82:
                b(null, 10);
                return;
            case 84:
                cmp(r3, 92);
                if (bne(null, 16)) return;
            case 88:
                r3 = ldr(r4 + 20);
                cmp(r3, 10);
                if (bne(null, 16)) return;
            case 94:
                r0 = movs(r0, r4);
                lr = skip_whitespace + 100 | 1;
                bl(this::next_char, 100);
                return;
            case 100:
                b(null, 52);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134232596, size=14, name='pop_result', path='build/py/parse.o', has_indirect=False)
    protected void pop_result(int offset) throws Exception
    {
        assert offset == 0;
        pc = pop_result + offset;
        r3 = ldr(r0 + 16);
        r2 = ldr(r0 + 20);
        r3 = subs(r3, 1);
        str(r0 + 16, r3);
        r3 = lsls(r3, 2);
        r0 = ldr(r3 + r2);
        bx(lr);
    }

    // function: Function(address=134232612, size=20, name='peek_result', path='build/py/parse.o', has_indirect=False)
    protected void peek_result(int offset) throws Exception
    {
        assert offset == 0;
        pc = peek_result + offset;
        r3 = 0x3fffffff;
        r1 = subs(r3, r1);
        r3 = ldr(r0 + 16);
        r1 = adds(r1, r3);
        r3 = ldr(r0 + 20);
        r1 = lsls(r1, 2);
        r0 = ldr(r1 + r3);
        bx(lr);
    }

    // function: Function(address=134232632, size=112, name='parser_alloc', path='build/py/parse.o', has_indirect=False)
    protected void parser_alloc(int offset) throws Exception
    {
        pc = parser_alloc + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r4 = ldr(r0 + 36);
                r6 = movs(r6, r0);
                r5 = movs(r5, r1);
                cmp(r4, 0);
                if (beq(null, 66)) return;
            case 12:
                r3 = ldr(r4 + 4);
                r1 = ldr(r4);
                r3 = adds(r5, r3);
                cmp(r3, r1);
                if (bls(null, 98)) return;
            case 22:
                r2 = movs(r2, r5);
                r2 = adds(r2, 8);
                r2 = adds(r2, r1);
                r3 = movs(r3, 0);
                r1 = adds(r1, 8);
                r0 = movs(r0, r4);
                lr = parser_alloc + 38 | 1;
                bl(this::m_realloc_maybe, 38);
                return;
            case 38:
                r1 = ldr(r4);
                r3 = subs(r0, 0);
                if (bne(null, 94)) return;
            case 44:
                r2 = ldr(r4 + 4);
                r1 = adds(r1, 8);
                r2 = adds(r2, 8);
                r0 = movs(r0, r4);
                lr = parser_alloc + 56 | 1;
                bl(this::m_realloc_maybe, 56);
                return;
            case 56:
                r3 = ldr(r4 + 4);
                str(r4, r3);
                r3 = ldr(r6 + 32);
                str(r4 + 4, r3);
                str(r6 + 32, r4);
            case 66:
                r7 = movs(r7, r5);
                cmp(r5, 128);
                if (bhs(null, 74)) return;
            case 72:
                r7 = movs(r7, 128);
            case 74:
                r0 = movs(r0, r7);
                r0 = adds(r0, 8);
                lr = parser_alloc + 82 | 1;
                bl(this::m_malloc, 82);
                return;
            case 82:
                r3 = movs(r3, 0);
                str(r0, r7);
                str(r0 + 4, r3);
                r4 = movs(r4, r0);
                str(r6 + 36, r0);
                b(null, 98);
                return;
            case 94:
                r1 = adds(r1, r5);
                str(r4, r1);
            case 98:
                r0 = movs(r0, r4);
                r3 = ldr(r4 + 4);
                r0 = adds(r0, 8);
                r5 = adds(r3, r5);
                str(r4 + 4, r5);
                r0 = adds(r0, r3);
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134232744, size=48, name='push_result_node', path='build/py/parse.o', has_indirect=False)
    protected void push_result_node(int offset) throws Exception
    {
        pc = push_result_node + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldr(r0 + 16);
                r5 = movs(r5, r1);
                r1 = ldr(r0 + 12);
                r4 = movs(r4, r0);
                cmp(r3, r1);
                if (blo(null, 34)) return;
            case 14:
                r1 = lsls(r1, 2);
                r2 = movs(r2, r1);
                r0 = ldr(r0 + 20);
                r2 = adds(r2, 64);
                lr = push_result_node + 26 | 1;
                bl(this::m_realloc, 26);
                return;
            case 26:
                r3 = ldr(r4 + 12);
                str(r4 + 20, r0);
                r3 = adds(r3, 16);
                str(r4 + 12, r3);
            case 34:
                r3 = ldr(r4 + 16);
                r2 = ldr(r4 + 20);
                r1 = adds(r3, 1);
                r3 = lsls(r3, 2);
                str(r4 + 16, r1);
                str(r3 + r2, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134232792, size=70, name='push_rule', path='build/py/parse.o', has_indirect=False)
    protected void push_rule(int offset) throws Exception
    {
        pc = push_rule + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r7 = movs(r7, r1);
                r5 = movs(r5, r3);
                r1 = ldr(r0);
                r3 = ldr(r0 + 4);
                r4 = movs(r4, r0);
                r6 = movs(r6, r2);
                cmp(r3, r1);
                if (blo(null, 38)) return;
            case 18:
                r1 = lsls(r1, 3);
                r2 = movs(r2, r1);
                r0 = ldr(r0 + 8);
                r2 = adds(r2, 128);
                lr = push_rule + 30 | 1;
                bl(this::m_realloc, 30);
                return;
            case 30:
                r3 = ldr(r4);
                str(r4 + 8, r0);
                r3 = adds(r3, 16);
                str(r4, r3);
            case 38:
                r2 = ldr(r4 + 4);
                r3 = ldr(r4 + 8);
                r1 = adds(r2, 1);
                r2 = lsls(r2, 3);
                str(r4 + 4, r1);
                r3 = adds(r3, r2);
                r2 = ldr(r3);
                r7 = lsls(r7, 8);
                r1 = lsrs(r2, 24);
                r7 = lsrs(r7, 8);
                r1 = lsls(r1, 24);
                r1 = orrs(r1, r7);
                str(r3, r1);
                str(r3 + 4, r5);
                strb(r3 + 3, r6);
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134232862, size=16, name='push_rule_from_arg', path='build/py/parse.o', has_indirect=False)
    protected void push_rule_from_arg(int offset) throws Exception
    {
        pc = push_rule_from_arg + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = uxtb(r1);
                r1 = ldr(r0 + 24);
                r3 = movs(r3, 0);
                r1 = ldr(r1 + 56);
                lr = push_rule_from_arg + 14 | 1;
                bl(this::push_rule, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134232880, size=224, name='push_result_token', path='build/py/parse.o', has_indirect=False)
    protected void push_result_token(int offset) throws Exception
    {
        pc = push_result_token + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = ldr(r0 + 24);
                r7 = movs(r7, r1);
                r6 = movs(r6, r5);
                r6 = adds(r6, 64);
                r1 = ldrb(r6);
                r4 = movs(r4, r0);
                cmp(r1, 7);
                if (bne(null, 82)) return;
            case 18:
                r1 = ldr(r5 + 72);
                r0 = ldr(r5 + 76);
                lr = push_result_token + 26 | 1;
                bl(this::qstr_from_strn, 26);
                return;
            case 26:
                r6 = movs(r6, r0);
                cmp(r7, 142);
                if (bne(null, 68)) return;
            case 32:
                r3 = lsls(r0, 2);
                r1 = movs(r1, 2);
                r0 = movs(r0, r4);
                r1 = orrs(r1, r3);
                r2 = movs(r2, 0);
                r0 = adds(r0, 40);
                lr = push_result_token + 48 | 1;
                bl(this::mp_map_lookup, 48);
                return;
            case 48:
                cmp(r0, 0);
                if (beq(null, 68)) return;
            case 52:
                r6 = ldr(r0 + 4);
            case 54:
                r0 = movs(r0, 1);
                tst(r6, r0);
                if (beq(null, 122)) return;
            case 60:
                r1 = asrs(r6, 1);
                r1 = lsls(r1, r0);
            case 64:
                r1 = orrs(r1, r0);
                b(null, 74);
                return;
            case 68:
                r1 = movs(r1, 2);
                r6 = lsls(r6, 4);
                r1 = orrs(r1, r6);
            case 74:
                r0 = movs(r0, r4);
                lr = push_result_token + 80 | 1;
                bl(this::push_result_node, 80);
                return;
            case 80:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 82:
                cmp(r1, 8);
                if (bne(null, 102)) return;
            case 86:
                r3 = movs(r3, r5);
                r2 = movs(r2, 0);
                r1 = ldr(r5 + 72);
                r0 = ldr(r5 + 76);
                lr = push_result_token + 98 | 1;
                bl(this::mp_parse_num_integer, 98);
                return;
            case 98:
                r6 = movs(r6, r0);
                b(null, 54);
                return;
            case 102:
                cmp(r1, 9);
                if (bne(null, 146)) return;
            case 106:
                str(sp, r5);
                r3 = movs(r3, 0);
                r2 = movs(r2, 1);
                r1 = ldr(r5 + 72);
                r0 = ldr(r5 + 76);
                lr = push_result_token + 120 | 1;
                bl(this::mp_parse_num_decimal, 120);
                return;
            case 120:
                r6 = movs(r6, r0);
            case 122:
                r1 = movs(r1, 12);
                r0 = movs(r0, r4);
                r5 = ldr(r5 + 56);
                lr = push_result_token + 132 | 1;
                bl(this::parser_alloc, 132);
                return;
            case 132:
                r3 = movs(r3, 58);
                r3 = adds(r3, 255);
                str(r0, r5);
                str(r0 + 4, r3);
                str(r0 + 8, r6);
                r1 = movs(r1, r0);
                b(null, 74);
                return;
            case 146:
                r3 = movs(r3, r1);
                r3 = subs(r3, 10);
                cmp(r3, 1);
                if (bhi(null, 208)) return;
            case 154:
                r1 = ldr(r5 + 72);
                r0 = ldr(r5 + 76);
                cmp(r1, 10);
                if (bhi(null, 184)) return;
            case 162:
                lr = push_result_token + 166 | 1;
                bl(this::qstr_from_strn, 166);
                return;
            case 166:
                r3 = ldrb(r6);
                cmp(r0, 0);
                if (beq(null, 190)) return;
            case 172:
                r1 = movs(r1, 10);
                cmp(r3, r1);
                if (bne(null, 180)) return;
            case 178:
                r1 = subs(r1, 4);
            case 180:
                r0 = lsls(r0, 4);
                b(null, 64);
                return;
            case 184:
                lr = push_result_token + 188 | 1;
                bl(this::qstr_find_strn, 188);
                return;
            case 188:
                b(null, 166);
                return;
            case 190:
                r0 = mp_type_bytes;
                cmp(r3, 10);
                if (bne(null, 198)) return;
            case 196:
                r0 = mp_type_str;
            case 198:
                r2 = ldr(r5 + 72);
                r1 = ldr(r5 + 76);
                lr = push_result_token + 206 | 1;
                bl(this::mp_obj_new_str_copy, 206);
                return;
            case 206:
                b(null, 120);
                return;
            case 208:
                r1 = lsls(r1, 4);
                r0 = movs(r0, 14);
                b(null, 64);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134233236, size=972, name='push_result_rule', path='build/py/parse.o', has_indirect=False)
    protected void push_result_rule(int offset) throws Exception
    {
        pc = push_result_rule + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r4 = movs(r4, r0);
                str(sp + 20, r1);
                str(sp + 4, r2);
                r7 = movs(r7, r3);
                cmp(r2, 44);
                if (bne(null, 42)) return;
            case 16:
                r1 = movs(r1, 0);
                lr = push_result_rule + 22 | 1;
                bl(this::peek_result, 22);
                return;
            case 22:
                cmp(r0, 0);
                if (beq(null, 42)) return;
            case 26:
                r3 = lsls(r0, 30);
                if (beq(null, 32)) return;
            case 30:
                b(null, 772);
                return;
            case 32:
                r3 = ldr(r0 + 4);
                r3 = uxtb(r3);
                cmp(r3, 144);
                if (beq(null, 42)) return;
            case 40:
                b(null, 772);
                return;
            case 42:
                r3 = ldr(sp + 4);
                r3 = subs(r3, 29);
                cmp(r3, 1);
                if (bhi(null, 242)) return;
            case 50:
                r5 = movs(r5, r7);
                r6 = movs(r6, r7);
                b(null, 86);
                return;
            case 56:
                r3 = ldr(sp + 4);
                r0 = ldr(sp + 8);
                cmp(r3, 29);
                if (bne(null, 216)) return;
            case 64:
                lr = push_result_rule + 68 | 1;
                bl(this::mp_parse_node_is_const_true, 68);
                return;
            case 68:
                cmp(r0, 0);
                if (bne(null, 120)) return;
            case 72:
                r0 = ldr(sp + 8);
                lr = push_result_rule + 78 | 1;
                bl(this::mp_parse_node_is_const_false, 78);
                return;
            case 78:
                cmp(r0, 0);
                if (beq(null, 84)) return;
            case 82:
                str(sp + 12, r6);
            case 84:
                r6 = ldr(sp + 12);
            case 86:
                r3 = subs(r6, 1);
                str(sp + 12, r3);
                cmp(r5, 0);
                if (beq(null, 120)) return;
            case 94:
                r5 = subs(r5, 1);
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = push_result_rule + 104 | 1;
                bl(this::peek_result, 104);
                return;
            case 104:
                r3 = ldr(r4 + 16);
                r2 = ldr(r4 + 20);
                r3 = subs(r3, r6);
                r3 = lsls(r3, 2);
                str(sp + 8, r0);
                str(r3 + r2, r0);
                cmp(r5, 0);
                if (bne(null, 56)) return;
            case 120:
                r5 = movs(r5, 0);
            case 122:
                r3 = ldr(sp + 12);
                cmp(r5, r3);
                if (bne(null, 232)) return;
            case 128:
                r7 = subs(r7, r5);
                cmp(r7, 1);
                if (bne(null, 136)) return;
            case 134:
                b(null, 772);
                return;
            case 136:
                r3 = ldr(sp + 4);
                r3 = subs(r3, 34);
                cmp(r3, 2);
                if (bhi(null, 326)) return;
            case 144:
                r1 = subs(r7, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 152 | 1;
                bl(this::peek_result, 152);
                return;
            case 152:
                r1 = add(sp, 28);
                lr = push_result_rule + 158 | 1;
                bl(this::mp_parse_node_get_int_maybe, 158);
                return;
            case 158:
                cmp(r0, 0);
                if (beq(null, 354)) return;
            case 162:
                r3 = ldr(sp + 4);
                r5 = movs(r5, 21);
                cmp(r3, 34);
                if (beq(null, 180)) return;
            case 170:
                r5 = movs(r5, r3);
                r5 = subs(r5, 35);
                r3 = subs(r5, 1);
                r5 = sbcs(r5, r3);
                r5 = adds(r5, 22);
            case 180:
                r6 = subs(r7, 2);
            case 182:
                cmp(r6, 0);
                if (bge(null, 292)) return;
            case 186:
                cmp(r7, 0);
                if (beq(null, 192)) return;
            case 190:
                b(null, 920);
                return;
            case 192:
                r1 = movs(r1, 1);
                r5 = ldr(sp + 28);
                tst(r5, r1);
                if (bne(null, 202)) return;
            case 200:
                b(null, 930);
                return;
            case 202:
                r5 = asrs(r5, r1);
                r5 = lsls(r5, r1);
                r1 = orrs(r1, r5);
            case 208:
                r0 = movs(r0, r4);
                lr = push_result_rule + 214 | 1;
                bl(this::push_result_node, 214);
                return;
            case 214:
                b(null, 772);
                return;
            case 216:
                lr = push_result_rule + 220 | 1;
                bl(this::mp_parse_node_is_const_false, 220);
                return;
            case 220:
                cmp(r0, 0);
                if (bne(null, 120)) return;
            case 224:
                r0 = ldr(sp + 8);
                lr = push_result_rule + 230 | 1;
                bl(this::mp_parse_node_is_const_true, 230);
                return;
            case 230:
                b(null, 78);
                return;
            case 232:
                r0 = movs(r0, r4);
                lr = push_result_rule + 238 | 1;
                bl(this::pop_result, 238);
                return;
            case 238:
                r5 = adds(r5, 1);
                b(null, 122);
                return;
            case 242:
                r3 = ldr(sp + 4);
                cmp(r3, 31);
                if (bne(null, 136)) return;
            case 248:
                r1 = movs(r1, 0);
                r0 = movs(r0, r4);
                lr = push_result_rule + 256 | 1;
                bl(this::peek_result, 256);
                return;
            case 256:
                r5 = movs(r5, r0);
                lr = push_result_rule + 262 | 1;
                bl(this::mp_parse_node_is_const_false, 262);
                return;
            case 262:
                cmp(r0, 0);
                if (bne(null, 288)) return;
            case 266:
                r0 = movs(r0, r5);
                lr = push_result_rule + 272 | 1;
                bl(this::mp_parse_node_is_const_true, 272);
                return;
            case 272:
                r5 = movs(r5, 222);
                cmp(r0, 0);
                if (beq(null, 136)) return;
            case 278:
                r0 = movs(r0, r4);
                lr = push_result_rule + 284 | 1;
                bl(this::pop_result, 284);
                return;
            case 284:
                r1 = movs(r1, r5);
                b(null, 208);
                return;
            case 288:
                r5 = movs(r5, 254);
                b(null, 278);
                return;
            case 292:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = push_result_rule + 300 | 1;
                bl(this::peek_result, 300);
                return;
            case 300:
                r1 = add(sp, 32);
                lr = push_result_rule + 306 | 1;
                bl(this::mp_parse_node_get_int_maybe, 306);
                return;
            case 306:
                cmp(r0, 0);
                if (beq(null, 354)) return;
            case 310:
                r2 = ldr(sp + 32);
                r1 = ldr(sp + 28);
                r0 = movs(r0, r5);
                lr = push_result_rule + 320 | 1;
                bl(this::mp_binary_op, 320);
                return;
            case 320:
                r6 = subs(r6, 1);
                str(sp + 28, r0);
                b(null, 182);
                return;
            case 326:
                r3 = ldr(sp + 4);
                r3 = subs(r3, 37);
                cmp(r3, 2);
                if (bhi(null, 486)) return;
            case 334:
                r1 = subs(r7, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 342 | 1;
                bl(this::peek_result, 342);
                return;
            case 342:
                r1 = add(sp, 28);
                lr = push_result_rule + 348 | 1;
                bl(this::mp_parse_node_get_int_maybe, 348);
                return;
            case 348:
                r5 = subs(r7, 2);
                cmp(r0, 0);
                if (bne(null, 470)) return;
            case 354:
                r1 = adds(r7, 2);
                r1 = lsls(r1, 2);
                r0 = movs(r0, r4);
                lr = push_result_rule + 364 | 1;
                bl(this::parser_alloc, 364);
                return;
            case 364:
                r5 = movs(r5, r0);
                r3 = ldr(sp + 20);
                r2 = ldr(sp + 4);
                str(r0, r3);
                r3 = lsls(r7, 8);
                r3 = orrs(r3, r2);
                str(r0 + 4, r3);
            case 378:
                cmp(r7, 0);
                if (beq(null, 284)) return;
            case 382:
                r0 = movs(r0, r4);
                lr = push_result_rule + 388 | 1;
                bl(this::pop_result, 388);
                return;
            case 388:
                r7 = subs(r7, 1);
                r3 = lsls(r7, 2);
                r3 = adds(r5, r3);
                str(r3 + 8, r0);
                b(null, 378);
                return;
            case 398:
                r1 = subs(r5, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 406 | 1;
                bl(this::peek_result, 406);
                return;
            case 406:
                r1 = add(sp, 32);
                lr = push_result_rule + 412 | 1;
                bl(this::mp_parse_node_get_int_maybe, 412);
                return;
            case 412:
                cmp(r0, 0);
                if (beq(null, 354)) return;
            case 416:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = push_result_rule + 424 | 1;
                bl(this::peek_result, 424);
                return;
            case 424:
                r3 = movs(r3, 255);
                r0 = lsrs(r0, 4);
                r3 = ands(r3, r0);
                r0 = token_to_op_8357;
                r0 = adds(r0, r3);
                r0 = subs(r0, 49);
                r6 = ldrb(r0);
                cmp(r6, 255);
                if (beq(null, 354)) return;
            case 442:
                r0 = ldr(sp + 32);
                lr = push_result_rule + 448 | 1;
                bl(this::mp_obj_int_sign, 448);
                return;
            case 448:
                cmp(r6, 25);
                if (bhi(null, 476)) return;
            case 452:
                cmp(r0, 0);
                if (blt(null, 354)) return;
            case 456:
                r2 = ldr(sp + 32);
                r1 = ldr(sp + 28);
                r0 = movs(r0, r6);
                lr = push_result_rule + 466 | 1;
                bl(this::mp_binary_op, 466);
                return;
            case 466:
                r5 = subs(r5, 2);
                str(sp + 28, r0);
            case 470:
                cmp(r5, 0);
                if (bgt(null, 398)) return;
            case 474:
                b(null, 186);
                return;
            case 476:
                cmp(r6, 28);
                if (bls(null, 456)) return;
            case 480:
                cmp(r0, 0);
                if (bne(null, 456)) return;
            case 484:
                b(null, 354);
                return;
            case 486:
                r3 = ldr(sp + 4);
                cmp(r3, 40);
                if (bne(null, 548)) return;
            case 492:
                r1 = movs(r1, 0);
                r0 = movs(r0, r4);
                lr = push_result_rule + 500 | 1;
                bl(this::peek_result, 500);
                return;
            case 500:
                r1 = add(sp, 28);
                lr = push_result_rule + 506 | 1;
                bl(this::mp_parse_node_get_int_maybe, 506);
                return;
            case 506:
                cmp(r0, 0);
                if (beq(null, 354)) return;
            case 510:
                r1 = movs(r1, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 518 | 1;
                bl(this::peek_result, 518);
                return;
            case 518:
                r0 = lsrs(r0, 4);
                r3 = uxtb(r0);
                r0 = movs(r0, 0);
                cmp(r3, 49);
                if (beq(null, 538)) return;
            case 528:
                r3 = subs(r3, 50);
                r0 = movs(r0, r3);
                r3 = subs(r0, 1);
                r0 = sbcs(r0, r3);
                r0 = adds(r0, 1);
            case 538:
                r1 = ldr(sp + 28);
                lr = push_result_rule + 544 | 1;
                bl(this::mp_unary_op, 544);
                return;
            case 544:
                str(sp + 28, r0);
                b(null, 186);
                return;
            case 548:
                r3 = ldr(sp + 4);
                cmp(r3, 5);
                if (beq(null, 556)) return;
            case 554:
                b(null, 790);
                return;
            case 556:
                r1 = movs(r1, 0);
                r0 = movs(r0, r4);
                lr = push_result_rule + 564 | 1;
                bl(this::peek_result, 564);
                return;
            case 564:
                r5 = subs(r0, 0);
                if (beq(null, 354)) return;
            case 568:
                r3 = movs(r3, 3);
                r3 = ands(r3, r0);
                str(sp + 8, r3);
                if (bne(null, 586)) return;
            case 576:
                r3 = ldr(r0 + 4);
                r3 = uxtb(r3);
                r3 = subs(r3, 86);
                cmp(r3, 1);
                if (bls(null, 354)) return;
            case 586:
                r1 = movs(r1, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 594 | 1;
                bl(this::peek_result, 594);
                return;
            case 594:
                r1 = movs(r1, 15);
                r3 = movs(r3, r0);
                r3 = ands(r3, r1);
                cmp(r3, 2);
                if (bne(null, 354)) return;
            case 604:
                r3 = ldr(sp + 8);
                cmp(r3, 0);
                if (beq(null, 612)) return;
            case 610:
                b(null, 354);
                return;
            case 612:
                r2 = movs(r2, 255);
                r3 = ldr(r5 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 43);
                if (beq(null, 624)) return;
            case 622:
                b(null, 354);
                return;
            case 624:
                r3 = ldr(r5 + 8);
                r1 = ands(r1, r3);
                str(sp + 16, r1);
                cmp(r1, 2);
                if (beq(null, 636)) return;
            case 634:
                b(null, 354);
                return;
            case 636:
                r3 = lsrs(r3, 4);
                cmp(r3, 249);
                if (beq(null, 644)) return;
            case 642:
                b(null, 354);
                return;
            case 644:
                r3 = ldr(r5 + 12);
                cmp(r3, 0);
                if (bne(null, 652)) return;
            case 650:
                b(null, 354);
                return;
            case 652:
                r1 = lsls(r3, 30);
                if (beq(null, 658)) return;
            case 656:
                b(null, 354);
                return;
            case 658:
                r1 = ldr(r3 + 4);
                r2 = ands(r2, r1);
                cmp(r2, 47);
                if (beq(null, 668)) return;
            case 666:
                b(null, 354);
                return;
            case 668:
                r3 = ldr(r3 + 8);
                r6 = lsrs(r0, 4);
                r1 = add(sp, 32);
                r0 = movs(r0, r3);
                str(sp + 12, r3);
                lr = push_result_rule + 682 | 1;
                bl(this::mp_parse_node_get_int_maybe, 682);
                return;
            case 682:
                cmp(r0, 0);
                if (bne(null, 714)) return;
            case 686:
                r1 = push_result_rule_str1_1;
                r0 = mp_type_SyntaxError;
                lr = push_result_rule + 694 | 1;
                bl(this::mp_obj_new_exception_msg, 694);
                return;
            case 694:
                r6 = movs(r6, r0);
                r1 = ldr(r4 + 24);
                r3 = ldr(sp + 8);
                r2 = ldr(r5);
                r1 = ldr(r1);
                lr = push_result_rule + 708 | 1;
                bl(this::mp_obj_exception_add_traceback, 708);
                return;
            case 708:
                r0 = movs(r0, r6);
                lr = push_result_rule + 714 | 1;
                bl(this::nlr_jump, 714);
                return;
            case 714:
                r0 = movs(r0, r4);
                r3 = ldr(sp + 16);
                r1 = lsls(r6, 2);
                r3 = orrs(r3, r1);
                r1 = movs(r1, r3);
                r2 = movs(r2, 1);
                r0 = adds(r0, 40);
                lr = push_result_rule + 732 | 1;
                bl(this::mp_map_lookup, 732);
                return;
            case 732:
                r3 = ldr(sp + 32);
                str(r0 + 4, r3);
                r0 = movs(r0, r6);
                lr = push_result_rule + 742 | 1;
                bl(this::qstr_str, 742);
                return;
            case 742:
                r3 = ldrb(r0);
                r0 = movs(r0, r4);
                cmp(r3, 95);
                if (bne(null, 776)) return;
            case 750:
                lr = push_result_rule + 754 | 1;
                bl(this::pop_result, 754);
                return;
            case 754:
                r0 = movs(r0, r4);
                lr = push_result_rule + 760 | 1;
                bl(this::pop_result, 760);
                return;
            case 760:
                r3 = movs(r3, 0);
                r2 = movs(r2, 8);
                r1 = movs(r1, r3);
                r0 = movs(r0, r4);
                lr = push_result_rule + 772 | 1;
                bl(null, 0, 772);
                return;
            case 772:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 776:
                lr = push_result_rule + 780 | 1;
                bl(this::pop_result, 780);
                return;
            case 780:
                r1 = ldr(sp + 12);
                r0 = movs(r0, r4);
                lr = push_result_rule + 788 | 1;
                bl(this::push_result_node, 788);
                return;
            case 788:
                b(null, 354);
                return;
            case 790:
                r3 = ldr(sp + 4);
                cmp(r3, 43);
                if (beq(null, 798)) return;
            case 796:
                b(null, 354);
                return;
            case 798:
                r1 = movs(r1, 1);
                r0 = movs(r0, r4);
                lr = push_result_rule + 806 | 1;
                bl(this::peek_result, 806);
                return;
            case 806:
                r1 = movs(r1, 0);
                r5 = movs(r5, r0);
                r0 = movs(r0, r4);
                lr = push_result_rule + 816 | 1;
                bl(this::peek_result, 816);
                return;
            case 816:
                r1 = movs(r1, 15);
                r1 = ands(r1, r5);
                cmp(r1, 2);
                if (beq(null, 826)) return;
            case 824:
                b(null, 354);
                return;
            case 826:
                cmp(r0, 0);
                if (bne(null, 832)) return;
            case 830:
                b(null, 354);
                return;
            case 832:
                r2 = movs(r2, 3);
                r2 = ands(r2, r0);
                if (beq(null, 840)) return;
            case 838:
                b(null, 354);
                return;
            case 840:
                r3 = ldr(r0 + 4);
                r3 = uxtb(r3);
                cmp(r3, 49);
                if (beq(null, 850)) return;
            case 848:
                b(null, 354);
                return;
            case 850:
                r5 = lsrs(r5, 4);
                r5 = lsls(r5, 2);
                r6 = ldr(r0 + 8);
                r1 = orrs(r1, r5);
                r0 = mp_constants_map;
                lr = push_result_rule + 864 | 1;
                bl(this::mp_map_lookup, 864);
                return;
            case 864:
                cmp(r0, 0);
                if (bne(null, 870)) return;
            case 868:
                b(null, 354);
                return;
            case 870:
                r1 = lsrs(r6, 4);
                r2 = add(sp, 32);
                r0 = ldr(r0 + 4);
                lr = push_result_rule + 880 | 1;
                bl(this::mp_load_method_maybe, 880);
                return;
            case 880:
                r3 = ldr(sp + 32);
                cmp(r3, 0);
                if (bne(null, 888)) return;
            case 886:
                b(null, 354);
                return;
            case 888:
                r2 = lsls(r3, 31);
                if (bmi(null, 908)) return;
            case 892:
                r2 = lsls(r3, 30);
                if (beq(null, 898)) return;
            case 896:
                b(null, 354);
                return;
            case 898:
                r2 = mp_type_int;
                r1 = ldr(r3);
                cmp(r1, r2);
                if (beq(null, 908)) return;
            case 906:
                b(null, 354);
                return;
            case 908:
                r2 = ldr(sp + 36);
                cmp(r2, 0);
                if (beq(null, 916)) return;
            case 914:
                b(null, 354);
                return;
            case 916:
                str(sp + 28, r3);
                b(null, 186);
                return;
            case 920:
                r0 = movs(r0, r4);
                lr = push_result_rule + 926 | 1;
                bl(this::pop_result, 926);
                return;
            case 926:
                r7 = subs(r7, 1);
                b(null, 186);
                return;
            case 930:
                r1 = movs(r1, 12);
                r0 = movs(r0, r4);
                lr = push_result_rule + 938 | 1;
                bl(this::parser_alloc, 938);
                return;
            case 938:
                r3 = movs(r3, 58);
                r3 = adds(r3, 255);
                r1 = movs(r1, r0);
                str(r0, r7);
                str(r0 + 4, r3);
                str(r0 + 8, r5);
                b(null, 208);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235144, size=76, name='scope_new', path='build/py/scope.o', has_indirect=False)
    protected void scope_new(int offset) throws Exception
    {
        pc = scope_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r0 = movs(r0, 48);
                r6 = movs(r6, r1);
                r7 = movs(r7, r2);
                str(sp + 4, r3);
                lr = scope_new + 16 | 1;
                bl(this::m_malloc0, 16);
                return;
            case 16:
                r4 = movs(r4, r0);
                strb(r0, r5);
                str(r0 + 12, r6);
                strh(r0 + 16, r7);
                cmp(r5, 7);
                if (beq(null, 32)) return;
            case 28:
                cmp(r5, 1);
                if (bne(null, 64)) return;
            case 32:
                r3 = ldr(r6 + 8);
                r3 = lsrs(r3, 4);
            case 36:
                strh(r4 + 18, r3);
                lr = scope_new + 42 | 1;
                bl(this::mp_emit_glue_new_raw_code, 42);
                return;
            case 42:
                r3 = ldr(sp + 4);
                str(r4 + 20, r0);
                strb(r4 + 25, r3);
                r3 = movs(r3, 4);
                r0 = movs(r0, 32);
                strh(r4 + 38, r3);
                lr = scope_new + 58 | 1;
                bl(this::m_malloc, 58);
                return;
            case 58:
                str(r4 + 44, r0);
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 64:
                r3 = scope_simple_name_table;
                r3 = ldrb(r3 + r5);
                b(null, 36);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235220, size=24, name='scope_free', path='build/py/scope.o', has_indirect=False)
    protected void scope_free(int offset) throws Exception
    {
        pc = scope_free + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r1 = ldrh(r0 + 38);
                r0 = ldr(r0 + 44);
                r1 = lsls(r1, 3);
                lr = scope_free + 14 | 1;
                bl(this::m_free, 14);
                return;
            case 14:
                r1 = movs(r1, 48);
                r0 = movs(r0, r4);
                lr = scope_free + 22 | 1;
                bl(this::m_free, 22);
                return;
            case 22:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235244, size=32, name='scope_find', path='build/py/scope.o', has_indirect=False)
    protected void scope_find(int offset) throws Exception
    {
        pc = scope_find + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r3 = movs(r3, 0);
                r4 = movs(r4, r0);
                r5 = ldrh(r0 + 40);
            case 8:
                cmp(r5, r3);
                if (bhi(null, 16)) return;
            case 12:
                r0 = movs(r0, 0);
            case 14:
                pop(true, R4, R5);
                return;
            case 16:
                r0 = ldr(r4 + 44);
                r2 = lsls(r3, 3);
                r0 = adds(r0, r2);
                r2 = ldr(r0 + 4);
                cmp(r2, r1);
                if (beq(null, 14)) return;
            case 28:
                r3 = adds(r3, 1);
                b(null, 8);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235276, size=70, name='scope_find_or_add_id', path='build/py/scope.o', has_indirect=False)
    protected void scope_find_or_add_id(int offset) throws Exception
    {
        pc = scope_find_or_add_id + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r6 = movs(r6, r1);
                r5 = movs(r5, r2);
                lr = scope_find_or_add_id + 12 | 1;
                bl(this::scope_find, 12);
                return;
            case 12:
                r3 = movs(r3, 0);
                cmp(r0, 0);
                if (bne(null, 66)) return;
            case 18:
                r1 = ldrh(r4 + 38);
                r3 = ldrh(r4 + 40);
                cmp(r3, r1);
                if (blo(null, 46)) return;
            case 26:
                r2 = adds(r1, 6);
                r2 = lsls(r2, 3);
                r1 = lsls(r1, 3);
                r0 = ldr(r4 + 44);
                lr = scope_find_or_add_id + 38 | 1;
                bl(this::m_realloc, 38);
                return;
            case 38:
                r3 = ldrh(r4 + 38);
                str(r4 + 44, r0);
                r3 = adds(r3, 6);
                strh(r4 + 38, r3);
            case 46:
                r3 = ldrh(r4 + 40);
                r0 = ldr(r4 + 44);
                r2 = adds(r3, 1);
                r3 = lsls(r3, 3);
                r0 = adds(r0, r3);
                r3 = movs(r3, 0);
                strh(r4 + 40, r2);
                str(r0, r3);
                str(r0 + 4, r6);
                r3 = adds(r3, 1);
            case 66:
                strb(r5, r3);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235346, size=18, name='scope_find_global', path='build/py/scope.o', has_indirect=False)
    protected void scope_find_global(int offset) throws Exception
    {
        pc = scope_find_global + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
            case 2:
                r3 = ldr(r0 + 4);
                cmp(r3, 0);
                if (bne(null, 14)) return;
            case 8:
                lr = scope_find_global + 12 | 1;
                bl(this::scope_find, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            case 14:
                r0 = movs(r0, r3);
                b(null, 2);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235364, size=88, name='scope_find_local_and_close_over', path='build/py/scope.o', has_indirect=False)
    protected void scope_find_local_and_close_over(int offset) throws Exception
    {
        pc = scope_find_local_and_close_over + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = ldr(r0 + 4);
                r6 = movs(r6, r1);
                r7 = movs(r7, r2);
                r3 = subs(r4, 0);
                if (bne(null, 30)) return;
            case 12:
                r3 = movs(r3, 0);
                strb(r6, r3);
                b(null, 28);
                return;
            case 18:
                r3 = ldrb(r0);
                cmp(r3, 2);
                if (bne(null, 28)) return;
            case 24:
                r3 = adds(r3, 1);
                strb(r0, r3);
            case 28:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 30:
                r5 = ldr(r3 + 4);
                cmp(r5, 0);
                if (beq(null, 12)) return;
            case 36:
                r0 = movs(r0, r3);
                r1 = movs(r1, r7);
                lr = scope_find_local_and_close_over + 44 | 1;
                bl(this::scope_find, 44);
                return;
            case 44:
                r3 = movs(r3, r5);
                cmp(r0, 0);
                if (beq(null, 30)) return;
            case 50:
                r3 = ldrb(r0);
                r3 = subs(r3, 2);
                cmp(r3, 2);
                if (bhi(null, 12)) return;
            case 58:
                r5 = movs(r5, 4);
                strb(r6, r5);
            case 62:
                r3 = mov(sp);
                r6 = adds(r3, 7);
                r2 = movs(r2, r6);
                r1 = movs(r1, r7);
                r0 = movs(r0, r4);
                lr = scope_find_local_and_close_over + 76 | 1;
                bl(this::scope_find_or_add_id, 76);
                return;
            case 76:
                r3 = ldrb(r6);
                cmp(r3, 0);
                if (beq(null, 18)) return;
            case 82:
                strb(r0, r5);
                r4 = ldr(r4 + 4);
                b(null, 62);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235452, size=20, name='compile_increase_except_level', path='build/py/compile.o', has_indirect=False)
    protected void compile_increase_except_level(int offset) throws Exception
    {
        pc = compile_increase_except_level + offset;
        switch (offset)
        {
            case 0:
                r3 = ldrh(r0 + 28);
                r2 = ldr(r0 + 36);
                r3 = adds(r3, 1);
                r3 = uxth(r3);
                strh(r0 + 28, r3);
                r1 = ldrh(r2 + 36);
                cmp(r1, r3);
                if (bhs(null, 18)) return;
            case 16:
                strh(r2 + 36, r3);
            case 18:
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235472, size=60, name='apply_to_single_or_list', path='build/py/compile.o', has_indirect=False)
    protected void apply_to_single_or_list(int offset) throws Exception
    {
        pc = apply_to_single_or_list + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                r5 = movs(r5, r1);
                r6 = movs(r6, r3);
                cmp(r1, 0);
                if (beq(null, 36)) return;
            case 12:
                r4 = movs(r4, 3);
                r4 = ands(r4, r1);
                if (bne(null, 52)) return;
            case 18:
                r3 = ldr(r1 + 4);
                r1 = uxtb(r3);
                cmp(r1, r2);
                if (bne(null, 52)) return;
            case 26:
                r3 = lsrs(r3, 8);
                str(sp + 4, r3);
            case 30:
                r3 = ldr(sp + 4);
                cmp(r4, r3);
                if (blt(null, 38)) return;
            case 36:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 38:
                r3 = lsls(r4, 2);
                r3 = adds(r5, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r7);
                blx(r6, 48);
                return;
            case 48:
                r4 = adds(r4, 1);
                b(null, 30);
                return;
            case 52:
                r1 = movs(r1, r5);
                r0 = movs(r0, r7);
                blx(r6, 58);
                return;
            case 58:
                b(null, 36);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235532, size=20, name='compile_del_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_del_stmt(int offset) throws Exception
    {
        pc = compile_del_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = c_del_stmt | 1;
                hint(c_del_stmt | 1, this::c_del_stmt);
                r2 = movs(r2, 155);
                r1 = ldr(r1 + 8);
                lr = compile_del_stmt + 12 | 1;
                bl(this::apply_to_single_or_list, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235552, size=20, name='compile_import_name', path='build/py/compile.o', has_indirect=False)
    protected void compile_import_name(int offset) throws Exception
    {
        pc = compile_import_name + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = compile_dotted_as_name | 1;
                hint(compile_dotted_as_name | 1, this::compile_dotted_as_name);
                r2 = movs(r2, 106);
                r1 = ldr(r1 + 8);
                lr = compile_import_name + 12 | 1;
                bl(this::apply_to_single_or_list, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235572, size=44, name='scope_new_and_link', path='build/py/compile.o', has_indirect=False)
    protected void scope_new_and_link(int offset) throws Exception
    {
        pc = scope_new_and_link + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = ldr(r4);
                lr = scope_new_and_link + 14 | 1;
                bl(this::scope_new, 14);
                return;
            case 14:
                r3 = ldr(r4 + 36);
                str(r0 + 4, r3);
                r3 = movs(r3, 0);
                str(r0 + 8, r3);
                r3 = ldr(r4 + 32);
                cmp(r3, 0);
                if (bne(null, 34)) return;
            case 28:
                str(r4 + 32, r0);
            case 30:
                pop(true, R4);
                return;
            case 32:
                r3 = movs(r3, r2);
            case 34:
                r2 = ldr(r3 + 8);
                cmp(r2, 0);
                if (bne(null, 32)) return;
            case 40:
                str(r3 + 8, r0);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235616, size=16, name='compile_trailer_period', path='build/py/compile.o', has_indirect=False)
    protected void compile_trailer_period(int offset) throws Exception
    {
        pc = compile_trailer_period + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = ldr(r1 + 8);
                r2 = movs(r2, 0);
                r1 = lsrs(r1, 4);
                r0 = ldr(r0 + 40);
                lr = compile_trailer_period + 14 | 1;
                bl(this::mp_emit_bc_attr, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235632, size=12, name='compile_const_object', path='build/py/compile.o', has_indirect=False)
    protected void compile_const_object(int offset) throws Exception
    {
        pc = compile_const_object + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = ldr(r1 + 8);
                r0 = ldr(r0 + 40);
                lr = compile_const_object + 10 | 1;
                bl(this::mp_emit_bc_load_const_obj, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235644, size=160, name='close_over_variables_etc', path='build/py/compile.o', has_indirect=False)
    protected void close_over_variables_etc(int offset) throws Exception
    {
        pc = close_over_variables_etc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 28);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                str(sp + 16, r2);
                str(sp + 20, r3);
                cmp(r3, 0);
                if (beq(null, 24)) return;
            case 16:
                r3 = movs(r3, 8);
                r2 = ldrb(r1 + 24);
                r3 = orrs(r3, r2);
                strb(r1 + 24, r3);
            case 24:
                r3 = ldr(sp + 16);
                strh(r4 + 30, r3);
                r3 = ldr(r5 + 36);
                r3 = ldrb(r3);
                cmp(r3, 0);
                if (bne(null, 154)) return;
            case 36:
                r3 = ldr(sp + 20);
                r2 = ldr(sp + 16);
                r1 = movs(r1, r4);
                r0 = ldr(r5 + 40);
                lr = close_over_variables_etc + 48 | 1;
                bl(this::mp_emit_bc_make_function, 48);
                return;
            case 48:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 52:
                r2 = ldr(r2 + 44);
                r3 = lsls(r6, 3);
                r3 = adds(r2, r3);
                str(sp + 12, r3);
                r3 = ldrb(r3);
                r3 = subs(r3, 3);
                cmp(r3, 1);
                if (bhi(null, 122)) return;
            case 68:
                r3 = movs(r3, 0);
                b(null, 112);
                return;
            case 72:
                r3 = ldr(sp + 8);
                r2 = ldr(r4 + 44);
                r3 = lsls(r3, 3);
                r3 = adds(r2, r3);
                r2 = ldrb(r3);
                cmp(r2, 4);
                if (bne(null, 108)) return;
            case 86:
                r2 = ldr(sp + 12);
                r3 = ldr(r3 + 4);
                r1 = ldr(r2 + 4);
                cmp(r1, r3);
                if (bne(null, 108)) return;
            case 96:
                r2 = ldrh(r2 + 2);
                r3 = movs(r3, 0);
                r0 = ldr(r5 + 40);
                lr = close_over_variables_etc + 106 | 1;
                bl(this::mp_emit_bc_load_local, 106);
                return;
            case 106:
                r7 = adds(r7, 1);
            case 108:
                r3 = ldr(sp + 8);
                r3 = adds(r3, 1);
            case 112:
                str(sp + 8, r3);
                r2 = ldr(sp + 8);
                r3 = ldrh(r4 + 40);
                cmp(r3, r2);
                if (bgt(null, 72)) return;
            case 122:
                r6 = adds(r6, 1);
            case 124:
                r2 = ldr(r5 + 36);
                r3 = ldrh(r2 + 40);
                cmp(r3, r6);
                if (bgt(null, 52)) return;
            case 132:
                cmp(r7, 0);
                if (beq(null, 36)) return;
            case 136:
                r3 = ldr(sp + 20);
                r2 = movs(r2, r7);
                str(sp, r3);
                r1 = movs(r1, r4);
                r3 = ldr(sp + 16);
                r0 = ldr(r5 + 40);
                lr = close_over_variables_etc + 152 | 1;
                bl(this::mp_emit_bc_make_closure, 152);
                return;
            case 152:
                b(null, 48);
                return;
            case 154:
                r6 = movs(r6, 0);
                r7 = movs(r7, r6);
                b(null, 124);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235804, size=92, name='compile_funcdef_lambdef', path='build/py/compile.o', has_indirect=False)
    protected void compile_funcdef_lambdef(int offset) throws Exception
    {
        pc = compile_funcdef_lambdef + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r7 = movs(r7, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                r3 = ldrh(r0 + 22);
                r5 = ldrb(r0 + 6);
                r6 = ldrh(r0 + 20);
                str(sp + 4, r3);
                r3 = movs(r3, 0);
                r4 = movs(r4, r0);
                strb(r0 + 6, r3);
                str(r0 + 20, r3);
                r3 = compile_funcdef_lambdef_param | 1;
                hint(compile_funcdef_lambdef_param | 1, this::compile_funcdef_lambdef_param);
                lr = compile_funcdef_lambdef + 30 | 1;
                bl(this::apply_to_single_or_list, 30);
                return;
            case 30:
                r3 = ldr(r4 + 8);
                cmp(r3, 0);
                if (bne(null, 84)) return;
            case 36:
                r1 = ldrh(r4 + 22);
                cmp(r1, 0);
                if (beq(null, 60)) return;
            case 42:
                r2 = ldrh(r4 + 20);
                cmp(r2, 0);
                if (bne(null, 60)) return;
            case 48:
                r0 = ldr(r4 + 40);
                lr = compile_funcdef_lambdef + 54 | 1;
                bl(this::mp_emit_bc_build, 54);
                return;
            case 54:
                r0 = ldr(r4 + 40);
                lr = compile_funcdef_lambdef + 60 | 1;
                bl(this::mp_emit_bc_load_null, 60);
                return;
            case 60:
                r3 = ldrh(r4 + 20);
                r2 = ldrh(r4 + 22);
                r1 = movs(r1, r7);
                r0 = movs(r0, r4);
                lr = compile_funcdef_lambdef + 72 | 1;
                bl(this::close_over_variables_etc, 72);
                return;
            case 72:
                r3 = subs(r5, 1);
                r5 = sbcs(r5, r3);
                r3 = ldr(sp + 4);
                strb(r4 + 6, r5);
                strh(r4 + 20, r6);
                strh(r4 + 22, r3);
            case 84:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235896, size=40, name='compile_lambdef', path='build/py/compile.o', has_indirect=False)
    protected void compile_lambdef(int offset) throws Exception
    {
        pc = compile_lambdef + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldrb(r0 + 5);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                cmp(r3, 1);
                if (bne(null, 26)) return;
            case 12:
                r3 = ldr(r0 + 36);
                r2 = movs(r2, r1);
                r3 = ldrb(r3 + 25);
                r1 = movs(r1, 2);
                lr = compile_lambdef + 24 | 1;
                bl(this::scope_new_and_link, 24);
                return;
            case 24:
                str(r5 + 16, r0);
            case 26:
                r2 = ldr(r5 + 8);
                r1 = ldr(r5 + 16);
                r3 = movs(r3, 75);
                r0 = movs(r0, r4);
                lr = compile_lambdef + 38 | 1;
                bl(this::compile_funcdef_lambdef, 38);
                return;
            case 38:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235936, size=42, name='compile_funcdef_helper', path='build/py/compile.o', has_indirect=False)
    protected void compile_funcdef_helper(int offset) throws Exception
    {
        pc = compile_funcdef_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = movs(r3, r2);
                r2 = ldrb(r0 + 5);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                cmp(r2, 1);
                if (bne(null, 24)) return;
            case 14:
                r2 = movs(r2, r1);
                r1 = movs(r1, 7);
                lr = compile_funcdef_helper + 22 | 1;
                bl(this::scope_new_and_link, 22);
                return;
            case 22:
                str(r4 + 24, r0);
            case 24:
                r6 = ldr(r4 + 24);
                r0 = movs(r0, r5);
                r1 = movs(r1, r6);
                r3 = movs(r3, 67);
                r2 = ldr(r4 + 12);
                lr = compile_funcdef_helper + 38 | 1;
                bl(this::compile_funcdef_lambdef, 38);
                return;
            case 38:
                r0 = ldrh(r6 + 18);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134235978, size=20, name='compile_error_set_line_isra_0', path='build/py/compile.o', has_indirect=False)
    protected void compile_error_set_line_isra_0(int offset) throws Exception
    {
        pc = compile_error_set_line_isra_0 + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0);
                cmp(r3, 0);
                if (bne(null, 18)) return;
            case 6:
                cmp(r1, 0);
                if (beq(null, 18)) return;
            case 10:
                r3 = lsls(r1, 30);
                if (bne(null, 18)) return;
            case 14:
                r3 = ldr(r1);
                str(r0, r3);
            case 18:
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236000, size=40, name='compile_syntax_error', path='build/py/compile.o', has_indirect=False)
    protected void compile_syntax_error(int offset) throws Exception
    {
        pc = compile_syntax_error + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 8);
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                cmp(r3, 0);
                if (bne(null, 32)) return;
            case 12:
                r1 = movs(r1, r2);
                r0 = mp_type_SyntaxError;
                lr = compile_syntax_error + 20 | 1;
                bl(this::mp_obj_new_exception_msg, 20);
                return;
            case 20:
                str(r4 + 8, r0);
                r0 = movs(r0, r4);
                r1 = movs(r1, r5);
                r0 = adds(r0, 12);
                lr = compile_syntax_error + 32 | 1;
                bl(this::compile_error_set_line_isra_0, 32);
                return;
            case 32:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236040, size=16, name='compile_star_expr', path='build/py/compile.o', has_indirect=False)
    protected void compile_star_expr(int offset) throws Exception
    {
        pc = compile_star_expr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = compile_star_expr_str1_1;
                lr = compile_star_expr + 8 | 1;
                bl(this::compile_syntax_error, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236056, size=64, name='compile_break_cont_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_break_cont_stmt(int offset) throws Exception
    {
        pc = compile_break_cont_stmt + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r1 + 4);
                push(true, r4, r5, r6);
                r3 = uxtb(r3);
                r4 = movs(r4, r0);
                cmp(r3, 9);
                if (bne(null, 44)) return;
            case 12:
                r5 = ldrh(r0 + 24);
                r2 = compile_break_cont_stmt_str1_1;
            case 16:
                r3 = 0x0000ffff;
                cmp(r5, r3);
                if (bne(null, 28)) return;
            case 22:
                r0 = movs(r0, r4);
                lr = compile_break_cont_stmt + 28 | 1;
                bl(this::compile_syntax_error, 28);
                return;
            case 28:
                r2 = ldrh(r4 + 28);
                r3 = ldrh(r4 + 30);
                r1 = movs(r1, r5);
                r2 = subs(r2, r3);
                r0 = ldr(r4 + 40);
                lr = compile_break_cont_stmt + 42 | 1;
                bl(this::mp_emit_bc_unwind_jump, 42);
                return;
            case 42:
                pop(true, R4, R5, R6);
                return;
            case 44:
                r5 = ldrh(r0 + 26);
                r2 = 0x08022326;
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236120, size=168, name='compile_scope_func_lambda_param_isra_5', path='build/py/compile.o', has_indirect=False)
    protected void compile_scope_func_lambda_param_isra_5(int offset) throws Exception
    {
        pc = compile_scope_func_lambda_param_isra_5 + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, 2);
                r6 = movs(r6, r0);
                r0 = ldr(r0 + 36);
                r12 = mov(r2);
                r2 = ldrb(r0 + 24);
                r4 = movs(r4, r1);
                tst(r2, r5);
                if (beq(null, 30)) return;
            case 18:
                r2 = 0x08021d22;
            case 20:
                r1 = movs(r1, r4);
                r0 = movs(r0, r6);
                lr = compile_scope_func_lambda_param_isra_5 + 28 | 1;
                bl(this::compile_syntax_error, 28);
                return;
            case 28:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 30:
                r7 = movs(r7, 15);
                r1 = ands(r1, r7);
                cmp(r1, 2);
                if (bne(null, 86)) return;
            case 38:
                r1 = lsrs(r4, 4);
            case 40:
                r3 = ldrb(r6 + 6);
                cmp(r3, 0);
                if (beq(null, 54)) return;
            case 46:
                r3 = ldrh(r0 + 28);
                r3 = adds(r3, 1);
                strh(r0 + 28, r3);
                b(null, 60);
                return;
            case 54:
                r3 = ldrh(r0 + 26);
                r3 = adds(r3, 1);
                strh(r0 + 26, r3);
            case 60:
                r5 = movs(r5, 1);
            case 62:
                cmp(r1, 0);
                if (beq(null, 28)) return;
            case 66:
                r3 = mov(sp);
                r7 = adds(r3, 7);
                r2 = movs(r2, r7);
                lr = compile_scope_func_lambda_param_isra_5 + 76 | 1;
                bl(this::scope_find_or_add_id, 76);
                return;
            case 76:
                r3 = ldrb(r7);
                cmp(r3, 0);
                if (bne(null, 152)) return;
            case 82:
                r2 = compile_scope_func_lambda_param_isra_5_str1_1;
                b(null, 20);
                return;
            case 86:
                r1 = ldr(r4 + 4);
                r1 = uxtb(r1);
                cmp(r1, r12);
                if (bne(null, 100)) return;
            case 94:
                r3 = ldr(r4 + 8);
                r1 = lsrs(r3, 4);
                b(null, 40);
                return;
            case 100:
                cmp(r1, r3);
                if (bne(null, 140)) return;
            case 104:
                r3 = ldrb(r6 + 6);
                cmp(r3, 0);
                if (bne(null, 18)) return;
            case 110:
                r3 = adds(r3, 1);
                strb(r6 + 6, r3);
                r1 = ldr(r4 + 8);
                cmp(r1, 0);
                if (beq(null, 28)) return;
            case 120:
                r3 = orrs(r3, r2);
                r7 = ands(r7, r1);
                strb(r0 + 24, r3);
                cmp(r7, 2);
                if (bne(null, 136)) return;
            case 130:
                r1 = lsrs(r1, 4);
                r5 = movs(r5, 3);
                b(null, 62);
                return;
            case 136:
                r1 = ldr(r1 + 8);
                b(null, 130);
                return;
            case 140:
                r3 = ldr(r4 + 8);
                r5 = orrs(r5, r2);
                strb(r0 + 24, r5);
                r1 = lsrs(r3, 4);
                r5 = movs(r5, 5);
                b(null, 62);
                return;
            case 152:
                r3 = movs(r3, 2);
                strb(r0 + 1, r5);
                strb(r0, r3);
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236288, size=12, name='compile_scope_lambda_param', path='build/py/compile.o', has_indirect=True)
    protected void compile_scope_lambda_param(int offset) throws Exception
    {
        pc = compile_scope_lambda_param + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, 78);
                r2 = movs(r2, 77);
                lr = compile_scope_lambda_param + 10 | 1;
                bl(this::compile_scope_func_lambda_param_isra_5, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236300, size=12, name='compile_scope_func_param', path='build/py/compile.o', has_indirect=True)
    protected void compile_scope_func_param(int offset) throws Exception
    {
        pc = compile_scope_func_param + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, 70);
                r2 = movs(r2, 69);
                lr = compile_scope_func_param + 10 | 1;
                bl(this::compile_scope_func_lambda_param_isra_5, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236312, size=30, name='compile_yield_from_isra_6', path='build/py/compile.o', has_indirect=False)
    protected void compile_yield_from_isra_6(int offset) throws Exception
    {
        pc = compile_yield_from_isra_6 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r1 = movs(r1, 0);
                r0 = ldr(r0);
                lr = compile_yield_from_isra_6 + 12 | 1;
                bl(this::mp_emit_bc_get_iter, 12);
                return;
            case 12:
                r0 = ldr(r4);
                r1 = movs(r1, 14);
                lr = compile_yield_from_isra_6 + 20 | 1;
                bl(this::mp_emit_bc_load_const_tok, 20);
                return;
            case 20:
                r1 = movs(r1, 1);
                r0 = ldr(r4);
                lr = compile_yield_from_isra_6 + 28 | 1;
                bl(this::mp_emit_bc_yield, 28);
                return;
            case 28:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236342, size=34, name='compile_await_object_method', path='build/py/compile.o', has_indirect=False)
    protected void compile_await_object_method(int offset) throws Exception
    {
        pc = compile_await_object_method + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                r4 = movs(r4, r0);
                r0 = ldr(r0 + 40);
                lr = compile_await_object_method + 12 | 1;
                bl(this::mp_emit_bc_load_method, 12);
                return;
            case 12:
                r3 = movs(r3, 0);
                r0 = ldr(r4 + 40);
                r2 = movs(r2, r3);
                r1 = movs(r1, r3);
                lr = compile_await_object_method + 24 | 1;
                bl(this::mp_emit_bc_call_method, 24);
                return;
            case 24:
                r0 = movs(r0, r4);
                r0 = adds(r0, 40);
                lr = compile_await_object_method + 32 | 1;
                bl(this::compile_yield_from_isra_6, 32);
                return;
            case 32:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236376, size=36, name='compile_load_id', path='build/py/compile.o', has_indirect=False)
    protected void compile_load_id(int offset) throws Exception
    {
        pc = compile_load_id + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r0 + 5);
                r2 = ldr(r0 + 36);
                cmp(r3, 1);
                if (bne(null, 18)) return;
            case 10:
                r0 = movs(r0, r2);
                lr = compile_load_id + 16 | 1;
                bl(this::mp_emit_common_get_id_for_load, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            case 18:
                r3 = movs(r3, r1);
                r0 = ldr(r0 + 40);
                r1 = mp_emit_bc_method_table_load_id_ops;
                lr = compile_load_id + 28 | 1;
                bl(this::mp_emit_common_id_op, 28);
                return;
            case 28:
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236412, size=36, name='compile_store_id', path='build/py/compile.o', has_indirect=False)
    protected void compile_store_id(int offset) throws Exception
    {
        pc = compile_store_id + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r0 + 5);
                r2 = ldr(r0 + 36);
                cmp(r3, 1);
                if (bne(null, 18)) return;
            case 10:
                r0 = movs(r0, r2);
                lr = compile_store_id + 16 | 1;
                bl(this::mp_emit_common_get_id_for_modification, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            case 18:
                r3 = movs(r3, r1);
                r0 = ldr(r0 + 40);
                r1 = mp_emit_bc_method_table_store_id_ops;
                lr = compile_store_id + 28 | 1;
                bl(this::mp_emit_common_id_op, 28);
                return;
            case 28:
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236448, size=22, name='compile_funcdef', path='build/py/compile.o', has_indirect=False)
    protected void compile_funcdef(int offset) throws Exception
    {
        pc = compile_funcdef + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldr(r0 + 36);
                r4 = movs(r4, r0);
                r2 = ldrb(r3 + 25);
                lr = compile_funcdef + 12 | 1;
                bl(this::compile_funcdef_helper, 12);
                return;
            case 12:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = compile_funcdef + 20 | 1;
                bl(this::compile_store_id, 20);
                return;
            case 20:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236472, size=36, name='compile_delete_id', path='build/py/compile.o', has_indirect=False)
    protected void compile_delete_id(int offset) throws Exception
    {
        pc = compile_delete_id + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r0 + 5);
                r2 = ldr(r0 + 36);
                cmp(r3, 1);
                if (bne(null, 18)) return;
            case 10:
                r0 = movs(r0, r2);
                lr = compile_delete_id + 16 | 1;
                bl(this::mp_emit_common_get_id_for_modification, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            case 18:
                r3 = movs(r3, r1);
                r0 = ldr(r0 + 40);
                r1 = mp_emit_bc_method_table_delete_id_ops;
                lr = compile_delete_id + 28 | 1;
                bl(this::mp_emit_common_id_op, 28);
                return;
            case 28:
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236508, size=200, name='compile_node', path='build/py/compile.o', has_indirect=False)
    protected void compile_node(int offset) throws Exception
    {
        pc = compile_node + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4, r5, r6);
                r5 = movs(r5, r0);
                r4 = subs(r1, 0);
                if (beq(null, 46)) return;
            case 8:
                r3 = movs(r3, 1);
                tst(r1, r3);
                if (beq(null, 72)) return;
            case 14:
                r2 = mp_dynamic_compiler;
                r0 = asrs(r1, 1);
                r2 = ldrb(r2);
                r6 = ldr(r5 + 40);
                r2 = subs(r2, 1);
                r3 = lsls(r3, r2);
                r3 = rsbs(r3, 0);
                r2 = movs(r2, r3);
                r2 = ands(r2, r0);
                if (beq(null, 38)) return;
            case 34:
                cmp(r2, r3);
                if (bne(null, 48)) return;
            case 38:
                r1 = movs(r1, r0);
                r0 = movs(r0, r6);
                lr = compile_node + 46 | 1;
                bl(this::mp_emit_bc_load_const_small_int, 46);
                return;
            case 46:
                pop(true, R0, R1, R4, R5, R6);
                return;
            case 48:
                r3 = ldrb(r5 + 5);
                r1 = mp_const_none_obj;
                cmp(r3, 4);
                if (bne(null, 64)) return;
            case 56:
                r1 = asrs(r4, 31);
                lr = compile_node + 62 | 1;
                bl(this::mp_obj_new_int_from_ll, 62);
                return;
            case 62:
                r1 = movs(r1, r0);
            case 64:
                r0 = movs(r0, r6);
            case 66:
                lr = compile_node + 70 | 1;
                bl(this::mp_emit_bc_load_const_obj, 70);
                return;
            case 70:
                b(null, 46);
                return;
            case 72:
                r3 = lsls(r1, 30);
                if (beq(null, 160)) return;
            case 76:
                r0 = lsrs(r1, 4);
                r1 = movs(r1, 15);
                r4 = ands(r4, r1);
                cmp(r4, 6);
                if (beq(null, 104)) return;
            case 86:
                cmp(r4, 10);
                if (beq(null, 114)) return;
            case 90:
                cmp(r4, 2);
                if (bne(null, 146)) return;
            case 94:
                r1 = movs(r1, r0);
                r0 = movs(r0, r5);
                lr = compile_node + 102 | 1;
                bl(this::compile_load_id, 102);
                return;
            case 102:
                b(null, 46);
                return;
            case 104:
                r1 = movs(r1, r0);
                r0 = ldr(r5 + 40);
                lr = compile_node + 112 | 1;
                bl(this::mp_emit_bc_load_const_str, 112);
                return;
            case 112:
                b(null, 46);
                return;
            case 114:
                r3 = ldrb(r5 + 5);
                cmp(r3, 4);
                if (beq(null, 126)) return;
            case 120:
                r1 = mp_const_none_obj;
                r0 = ldr(r5 + 40);
                b(null, 66);
                return;
            case 126:
                r1 = add(sp, 4);
                lr = compile_node + 132 | 1;
                bl(this::qstr_data, 132);
                return;
            case 132:
                r1 = ldr(sp + 4);
                r4 = ldr(r5 + 40);
                lr = compile_node + 140 | 1;
                bl(this::mp_obj_new_bytes, 140);
                return;
            case 140:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                b(null, 66);
                return;
            case 146:
                cmp(r0, 4);
                if (beq(null, 46)) return;
            case 150:
                r1 = uxtb(r0);
                r0 = ldr(r5 + 40);
                lr = compile_node + 158 | 1;
                bl(this::mp_emit_bc_load_const_tok, 158);
                return;
            case 158:
                b(null, 46);
                return;
            case 160:
                r1 = ldr(r1);
                r0 = ldr(r0 + 40);
                lr = compile_node + 168 | 1;
                bl(this::mp_emit_bc_set_source_line, 168);
                return;
            case 168:
                r3 = ldr(r4 + 4);
                r2 = compile_function;
                r3 = uxtb(r3);
                r3 = lsls(r3, 2);
                r3 = ldr(r3 + r2);
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                blx(r3, 184);
                return;
            case 184:
                b(null, 46);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134236708, size=388, name='c_assign', path='build/py/compile.o', has_indirect=False)
    protected void c_assign(int offset) throws Exception
    {
        pc = c_assign + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r0 = movs(r0, 3);
                r5 = movs(r5, r1);
                r6 = movs(r6, r2);
                tst(r1, r0);
                if (beq(null, 46)) return;
            case 14:
                r3 = movs(r3, 15);
                r3 = ands(r3, r1);
                cmp(r3, 2);
                if (bne(null, 68)) return;
            case 22:
                r1 = lsrs(r1, 4);
                r0 = movs(r0, r4);
                cmp(r2, 0);
                if (beq(null, 34)) return;
            case 30:
                cmp(r2, 2);
                if (bne(null, 40)) return;
            case 34:
                lr = c_assign + 38 | 1;
                bl(this::compile_store_id, 38);
                return;
            case 38:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 40:
                lr = c_assign + 44 | 1;
                bl(this::compile_load_id, 44);
                return;
            case 44:
                b(null, 38);
                return;
            case 46:
                r2 = ldr(r1 + 4);
                r7 = movs(r7, 255);
                r3 = movs(r3, r2);
                r3 = ands(r3, r7);
                cmp(r3, 44);
                if (beq(null, 280)) return;
            case 58:
                if (bhi(null, 80)) return;
            case 60:
                cmp(r3, 6);
                if (beq(null, 88)) return;
            case 64:
                cmp(r3, 43);
                if (beq(null, 102)) return;
            case 68:
                r2 = c_assign_str1_1;
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = c_assign + 78 | 1;
                bl(this::compile_syntax_error, 78);
                return;
            case 78:
                b(null, 38);
                return;
            case 80:
                cmp(r3, 45);
                if (beq(null, 316)) return;
            case 84:
                cmp(r3, 155);
                if (bne(null, 68)) return;
            case 88:
                cmp(r6, 0);
                if (bne(null, 68)) return;
            case 92:
                r3 = movs(r3, r5);
                r2 = lsrs(r2, 8);
                r3 = adds(r3, 8);
            case 98:
                r1 = movs(r1, 0);
                b(null, 332);
                return;
            case 102:
                cmp(r6, 2);
                if (beq(null, 114)) return;
            case 106:
                r1 = ldr(r1 + 8);
                r0 = movs(r0, r4);
                lr = c_assign + 114 | 1;
                bl(this::compile_node, 114);
                return;
            case 114:
                r3 = ldr(r5 + 12);
                str(sp, r3);
                cmp(r3, 0);
                if (beq(null, 68)) return;
            case 122:
                r3 = movs(r3, 3);
                r2 = ldr(sp);
                r3 = ands(r3, r2);
                if (bne(null, 68)) return;
            case 130:
                r7 = movs(r7, r2);
                r2 = ldr(r2 + 4);
                r1 = uxtb(r2);
                cmp(r1, 140);
                if (bne(null, 160)) return;
            case 140:
                r2 = lsrs(r2, 8);
                str(sp + 4, r2);
                r7 = movs(r7, r3);
                cmp(r6, 2);
                if (bne(null, 198)) return;
            case 150:
                r3 = ldr(sp + 4);
                r2 = ldr(sp);
                r3 = adds(r3, 1);
                r3 = lsls(r3, 2);
                r7 = ldr(r3 + r2);
            case 160:
                r3 = ldr(r7 + 4);
                r3 = uxtb(r3);
                cmp(r3, 48);
                if (bne(null, 236)) return;
            case 168:
                cmp(r6, 2);
                if (bne(null, 208)) return;
            case 172:
                r0 = ldr(r4 + 40);
                lr = c_assign + 178 | 1;
                bl(this::mp_emit_bc_rot_three, 178);
                return;
            case 178:
                r1 = movs(r1, 1);
                b(null, 228);
                return;
            case 182:
                r2 = ldr(sp);
                r3 = lsls(r7, 2);
                r3 = adds(r2, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r4);
                lr = c_assign + 196 | 1;
                bl(this::compile_node, 196);
                return;
            case 196:
                r7 = adds(r7, 1);
            case 198:
                r3 = ldr(sp + 4);
                r3 = subs(r3, 1);
                cmp(r7, r3);
                if (blt(null, 182)) return;
            case 206:
                b(null, 150);
                return;
            case 208:
                r1 = ldr(r7 + 8);
                r0 = movs(r0, r4);
                lr = c_assign + 216 | 1;
                bl(this::compile_node, 216);
                return;
            case 216:
                cmp(r6, 1);
                if (bne(null, 178)) return;
            case 220:
                r0 = ldr(r4 + 40);
                lr = c_assign + 226 | 1;
                bl(this::mp_emit_bc_dup_top_two, 226);
                return;
            case 226:
                r1 = movs(r1, 0);
            case 228:
                r0 = ldr(r4 + 40);
                lr = c_assign + 234 | 1;
                bl(this::mp_emit_bc_subscr, 234);
                return;
            case 234:
                b(null, 38);
                return;
            case 236:
                cmp(r3, 49);
                if (bne(null, 68)) return;
            case 240:
                r0 = ldr(r4 + 40);
                cmp(r6, 1);
                if (bne(null, 264)) return;
            case 246:
                lr = c_assign + 250 | 1;
                bl(this::mp_emit_bc_dup_top, 250);
                return;
            case 250:
                r2 = movs(r2, 0);
                r1 = ldr(r7 + 8);
                r1 = lsrs(r1, 4);
            case 256:
                r0 = ldr(r4 + 40);
                lr = c_assign + 262 | 1;
                bl(this::mp_emit_bc_attr, 262);
                return;
            case 262:
                b(null, 38);
                return;
            case 264:
                cmp(r6, 2);
                if (bne(null, 272)) return;
            case 268:
                lr = c_assign + 272 | 1;
                bl(this::mp_emit_bc_rot_two, 272);
                return;
            case 272:
                r1 = ldr(r7 + 8);
                r2 = movs(r2, 1);
                r1 = lsrs(r1, 4);
                b(null, 256);
                return;
            case 280:
                r0 = ldr(r1 + 8);
                cmp(r0, 0);
                if (beq(null, 68)) return;
            case 286:
                cmp(r6, 0);
                if (bne(null, 68)) return;
            case 290:
                r3 = ldr(r0 + 12);
                cmp(r3, 0);
                if (beq(null, 376)) return;
            case 296:
                r2 = movs(r2, 3);
                r2 = ands(r2, r3);
                if (bne(null, 376)) return;
            case 302:
                r1 = ldr(r3 + 4);
                r6 = uxtb(r1);
                cmp(r6, 147);
                if (bne(null, 360)) return;
            case 310:
                r3 = movs(r3, r2);
            case 312:
                r1 = ldr(r0 + 8);
                b(null, 332);
                return;
            case 316:
                cmp(r6, 0);
                if (beq(null, 322)) return;
            case 320:
                b(null, 68);
                return;
            case 322:
                r1 = ldr(r1 + 8);
                cmp(r1, 0);
                if (bne(null, 340)) return;
            case 328:
                r3 = movs(r3, r1);
                r2 = movs(r2, r1);
            case 332:
                r0 = movs(r0, r4);
                lr = c_assign + 338 | 1;
                bl(this::c_assign_tuple, 338);
                return;
            case 338:
                b(null, 38);
                return;
            case 340:
                tst(r1, r0);
                if (bne(null, 354)) return;
            case 344:
                r3 = ldr(r1 + 4);
                r0 = movs(r0, r1);
                r7 = ands(r7, r3);
                cmp(r7, 144);
                if (beq(null, 290)) return;
            case 354:
                r3 = movs(r3, 0);
                r2 = movs(r2, r3);
                b(null, 332);
                return;
            case 360:
                cmp(r6, 148);
                if (bne(null, 370)) return;
            case 364:
                r3 = adds(r3, 8);
                r2 = lsrs(r1, 8);
                b(null, 312);
                return;
            case 370:
                cmp(r6, 171);
                if (bne(null, 376)) return;
            case 374:
                b(null, 68);
                return;
            case 376:
                r3 = movs(r3, r0);
                r2 = movs(r2, 2);
                r3 = adds(r3, 8);
                b(null, 98);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134237096, size=212, name='c_assign_tuple', path='build/py/compile.o', has_indirect=False)
    protected void c_assign_tuple(int offset) throws Exception
    {
        pc = c_assign_tuple + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 20);
                str(sp + 4, r2);
                r2 = movs(r2, r1);
                str(sp + 12, r3);
                r3 = subs(r2, 1);
                r2 = sbcs(r2, r3);
                r6 = movs(r6, r0);
                r7 = subs(r1, 0);
                str(sp + 8, r2);
                str(sp, r2);
                if (beq(null, 112)) return;
            case 24:
                r4 = movs(r4, 3);
                r4 = ands(r4, r1);
                if (bne(null, 112)) return;
            case 30:
                r3 = ldr(r1 + 4);
                r3 = uxtb(r3);
                cmp(r3, 33);
                if (bne(null, 112)) return;
            case 38:
                r2 = ldr(sp + 4);
                r1 = movs(r1, r4);
                r0 = ldr(r0 + 40);
                lr = c_assign_tuple + 48 | 1;
                bl(this::mp_emit_bc_unpack_ex, 48);
                return;
            case 48:
                r5 = movs(r5, 0);
            case 50:
                r3 = ldr(sp + 4);
                cmp(r5, r3);
                if (bne(null, 118)) return;
            case 56:
                r3 = ldr(sp + 8);
                r5 = adds(r5, r3);
                r3 = adds(r4, 1);
                if (bne(null, 182)) return;
            case 64:
                r1 = movs(r1, r5);
                r0 = ldr(r6 + 40);
                lr = c_assign_tuple + 72 | 1;
                bl(this::mp_emit_bc_unpack_sequence, 72);
                return;
            case 72:
                cmp(r7, 0);
                if (bne(null, 202)) return;
            case 76:
                r7 = ldr(sp + 12);
            case 78:
                r3 = ldr(sp);
                cmp(r3, r5);
                if (beq(null, 178)) return;
            case 84:
                r3 = ldr(sp);
                r1 = ldr(r7);
                r2 = movs(r2, 0);
                cmp(r3, r4);
                if (bne(null, 96)) return;
            case 94:
                r1 = ldr(r1 + 8);
            case 96:
                r0 = movs(r0, r6);
                lr = c_assign_tuple + 102 | 1;
                bl(this::c_assign, 102);
                return;
            case 102:
                r3 = ldr(sp);
                r7 = adds(r7, 4);
                r3 = adds(r3, 1);
                str(sp, r3);
                b(null, 78);
                return;
            case 112:
                r4 = movs(r4, 1);
                r4 = rsbs(r4, 0);
                b(null, 48);
                return;
            case 118:
                r2 = ldr(sp + 12);
                r3 = lsls(r5, 2);
                r1 = ldr(r2 + r3);
                cmp(r1, 0);
                if (beq(null, 166)) return;
            case 128:
                r3 = movs(r3, 3);
                tst(r1, r3);
                if (bne(null, 166)) return;
            case 134:
                r2 = movs(r2, 255);
                r3 = ldr(r1 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 33);
                if (bne(null, 166)) return;
            case 144:
                r3 = adds(r4, 1);
                if (bne(null, 170)) return;
            case 148:
                r3 = ldr(sp + 8);
                r0 = ldr(r6 + 40);
                r4 = adds(r5, r3);
                r3 = ldr(sp + 4);
                r1 = movs(r1, r4);
                r2 = subs(r3, 1);
                r2 = subs(r2, r5);
                lr = c_assign_tuple + 166 | 1;
                bl(this::mp_emit_bc_unpack_ex, 166);
                return;
            case 166:
                r5 = adds(r5, 1);
                b(null, 50);
                return;
            case 170:
                r2 = c_assign_tuple_str1_1;
                r0 = movs(r0, r6);
                lr = c_assign_tuple + 178 | 1;
                bl(this::compile_syntax_error, 178);
                return;
            case 178:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 182:
                cmp(r7, 0);
                if (beq(null, 76)) return;
            case 186:
                cmp(r4, 0);
                if (bne(null, 202)) return;
            case 190:
                r2 = movs(r2, r4);
                r1 = ldr(r7 + 8);
            case 194:
                r0 = movs(r0, r6);
                lr = c_assign_tuple + 200 | 1;
                bl(this::c_assign, 200);
                return;
            case 200:
                b(null, 76);
                return;
            case 202:
                r2 = movs(r2, 0);
                r1 = movs(r1, r7);
                b(null, 194);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134237308, size=228, name='c_if_cond', path='build/py/compile.o', has_indirect=False)
    protected void c_if_cond(int offset) throws Exception
    {
        pc = c_if_cond + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                r7 = movs(r7, r2);
                r6 = movs(r6, 3);
                sp = sub(sp, 20);
                str(sp + 4, r3);
            case 14:
                r0 = movs(r0, r4);
                lr = c_if_cond + 20 | 1;
                bl(this::mp_parse_node_is_const_false, 20);
                return;
            case 20:
                cmp(r0, 0);
                if (beq(null, 30)) return;
            case 24:
                cmp(r7, 0);
                if (bne(null, 52)) return;
            case 28:
                b(null, 44);
                return;
            case 30:
                r0 = movs(r0, r4);
                lr = c_if_cond + 36 | 1;
                bl(this::mp_parse_node_is_const_true, 36);
                return;
            case 36:
                cmp(r0, 0);
                if (beq(null, 56)) return;
            case 40:
                cmp(r7, 0);
                if (beq(null, 52)) return;
            case 44:
                r1 = ldr(sp + 4);
                r0 = ldr(r5 + 40);
                lr = c_if_cond + 52 | 1;
                bl(this::mp_emit_bc_jump, 52);
                return;
            case 52:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 56:
                cmp(r4, 0);
                if (beq(null, 208)) return;
            case 60:
                tst(r4, r6);
                if (bne(null, 208)) return;
            case 64:
                r3 = ldr(r4 + 4);
                r2 = lsrs(r3, 8);
                str(sp + 8, r2);
                r2 = movs(r2, 255);
                r3 = ands(r3, r2);
                cmp(r3, 29);
                if (bne(null, 130)) return;
            case 78:
                cmp(r7, 0);
                if (beq(null, 138)) return;
            case 82:
                r3 = ldr(sp + 8);
                r4 = adds(r4, 8);
                r6 = lsls(r3, 2);
                r6 = adds(r4, r6);
            case 90:
                cmp(r6, r4);
                if (beq(null, 52)) return;
            case 94:
                r3 = ldr(sp + 4);
                r2 = movs(r2, r7);
                r4 = ldm(r4, R1);
                r0 = movs(r0, r5);
                lr = c_if_cond + 106 | 1;
                bl(null, 0, 106);
                return;
            case 106:
                b(null, 90);
                return;
            case 108:
                r2 = movs(r2, 1);
                r1 = lsls(r6, 2);
                r1 = adds(r4, r1);
                r3 = ldr(sp + 12);
                r2 = eors(r2, r7);
                r1 = ldr(r1 + 8);
                r0 = movs(r0, r5);
                lr = c_if_cond + 126 | 1;
                bl(null, 0, 126);
                return;
            case 126:
                r6 = adds(r6, 1);
                b(null, 148);
                return;
            case 130:
                cmp(r3, 30);
                if (bne(null, 184)) return;
            case 134:
                cmp(r7, 0);
                if (beq(null, 82)) return;
            case 138:
                r6 = movs(r6, 0);
                r3 = ldr(r5 + 16);
                str(sp + 12, r3);
                r3 = adds(r3, 1);
                str(r5 + 16, r3);
            case 148:
                r3 = ldr(sp + 8);
                r3 = subs(r3, 1);
                cmp(r3, r6);
                if (bgt(null, 108)) return;
            case 156:
                r6 = ldr(sp + 8);
                r0 = movs(r0, r5);
                r6 = adds(r6, 1);
                r6 = lsls(r6, 2);
                r1 = ldr(r6 + r4);
                r3 = ldr(sp + 4);
                r2 = movs(r2, r7);
                lr = c_if_cond + 174 | 1;
                bl(null, 0, 174);
                return;
            case 174:
                r1 = ldr(sp + 12);
                r0 = ldr(r5 + 40);
                lr = c_if_cond + 182 | 1;
                bl(this::mp_emit_bc_label_assign, 182);
                return;
            case 182:
                b(null, 52);
                return;
            case 184:
                cmp(r3, 31);
                if (bne(null, 196)) return;
            case 188:
                r3 = subs(r3, 30);
                r7 = eors(r7, r3);
                r4 = ldr(r4 + 8);
                b(null, 14);
                return;
            case 196:
                cmp(r3, 44);
                if (bne(null, 208)) return;
            case 200:
                r3 = ldr(r4 + 8);
                cmp(r3, 0);
                if (bne(null, 40)) return;
            case 206:
                b(null, 24);
                return;
            case 208:
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = c_if_cond + 216 | 1;
                bl(this::compile_node, 216);
                return;
            case 216:
                r2 = ldr(sp + 4);
                r1 = movs(r1, r7);
                r0 = ldr(r5 + 40);
                lr = c_if_cond + 226 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 226);
                return;
            case 226:
                b(null, 52);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134237536, size=178, name='compile_scope_comp_iter', path='build/py/compile.o', has_indirect=False)
    protected void compile_scope_comp_iter(int offset) throws Exception
    {
        pc = compile_scope_comp_iter + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r6 = ldr(r0 + 16);
                str(sp, r3);
                r3 = adds(r6, 1);
                str(sp + 4, r3);
                r3 = adds(r6, 2);
                str(r0 + 16, r3);
                r1 = movs(r1, r6);
                r0 = ldr(r0 + 40);
                r7 = movs(r7, r2);
                lr = compile_scope_comp_iter + 28 | 1;
                bl(this::mp_emit_bc_label_assign, 28);
                return;
            case 28:
                r1 = adds(r6, 1);
                r0 = ldr(r4 + 40);
                lr = compile_scope_comp_iter + 36 | 1;
                bl(this::mp_emit_bc_for_iter, 36);
                return;
            case 36:
                r1 = ldr(r5 + 8);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                lr = compile_scope_comp_iter + 46 | 1;
                bl(this::c_assign, 46);
                return;
            case 46:
                r5 = ldr(r5 + 16);
            case 48:
                cmp(r5, 0);
                if (bne(null, 120)) return;
            case 52:
                r1 = movs(r1, r7);
                r0 = movs(r0, r4);
                lr = compile_scope_comp_iter + 60 | 1;
                bl(this::compile_node, 60);
                return;
            case 60:
                r3 = ldr(r4 + 36);
                r1 = ldrb(r3);
                cmp(r1, 6);
                if (bne(null, 106)) return;
            case 68:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, r5);
                lr = compile_scope_comp_iter + 76 | 1;
                bl(this::mp_emit_bc_yield, 76);
                return;
            case 76:
                r0 = ldr(r4 + 40);
                lr = compile_scope_comp_iter + 82 | 1;
                bl(this::mp_emit_bc_pop_top, 82);
                return;
            case 82:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_scope_comp_iter + 90 | 1;
                bl(this::mp_emit_bc_jump, 90);
                return;
            case 90:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_scope_comp_iter + 98 | 1;
                bl(this::mp_emit_bc_label_assign, 98);
                return;
            case 98:
                r0 = ldr(r4 + 40);
                lr = compile_scope_comp_iter + 104 | 1;
                bl(this::mp_emit_bc_for_iter_end, 104);
                return;
            case 104:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 106:
                r3 = ldr(sp);
                r0 = ldr(r4 + 40);
                r2 = lsls(r3, 2);
                r2 = adds(r2, 5);
                lr = compile_scope_comp_iter + 118 | 1;
                bl(this::mp_emit_bc_store_comp, 118);
                return;
            case 118:
                b(null, 82);
                return;
            case 120:
                r2 = movs(r2, 255);
                r3 = ldr(r5 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 172);
                if (bne(null, 146)) return;
            case 130:
                r1 = ldr(r5 + 8);
                r3 = movs(r3, r6);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                lr = compile_scope_comp_iter + 142 | 1;
                bl(this::c_if_cond, 142);
                return;
            case 142:
                r5 = ldr(r5 + 12);
                b(null, 48);
                return;
            case 146:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_scope_comp_iter + 154 | 1;
                bl(this::compile_node, 154);
                return;
            case 154:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 1);
                lr = compile_scope_comp_iter + 162 | 1;
                bl(this::mp_emit_bc_get_iter, 162);
                return;
            case 162:
                r3 = ldr(sp);
                r2 = movs(r2, r7);
                r3 = adds(r3, 1);
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_scope_comp_iter + 176 | 1;
                bl(null, 0, 176);
                return;
            case 176:
                b(null, 82);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134237716, size=168, name='check_for_doc_string', path='build/py/compile.o', has_indirect=False)
    protected void check_for_doc_string(int offset) throws Exception
    {
        pc = check_for_doc_string + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                cmp(r1, 0);
                if (beq(null, 122)) return;
            case 8:
                r5 = movs(r5, 3);
                r3 = movs(r3, r1);
                r3 = ands(r3, r5);
                if (bne(null, 122)) return;
            case 16:
                r2 = ldr(r1 + 4);
                r0 = uxtb(r2);
                cmp(r0, 5);
                if (beq(null, 38)) return;
            case 24:
                r6 = movs(r6, r1);
                cmp(r0, 1);
                if (bne(null, 112)) return;
            case 30:
                r2 = lsrs(r2, 8);
                r0 = adds(r0, 14);
            case 34:
                cmp(r3, r2);
                if (blt(null, 84)) return;
            case 38:
                r3 = lsls(r1, 30);
                if (bne(null, 122)) return;
            case 42:
                r2 = movs(r2, 255);
                r3 = ldr(r1 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 5);
                if (bne(null, 122)) return;
            case 52:
                r1 = ldr(r1 + 8);
                r3 = subs(r3, 2);
                tst(r1, r3);
                if (beq(null, 124)) return;
            case 60:
                r3 = adds(r3, 12);
                r3 = ands(r3, r1);
                cmp(r3, 6);
                if (bne(null, 122)) return;
            case 68:
                r0 = movs(r0, r4);
                lr = check_for_doc_string + 74 | 1;
                bl(this::compile_node, 74);
                return;
            case 74:
                r1 = movs(r1, 21);
                r0 = movs(r0, r4);
                lr = check_for_doc_string + 82 | 1;
                bl(this::compile_store_id, 82);
                return;
            case 82:
                b(null, 122);
                return;
            case 84:
                r1 = lsls(r3, 2);
                r1 = adds(r6, r1);
                r1 = ldr(r1 + 8);
                tst(r1, r5);
                if (beq(null, 158)) return;
            case 94:
                r7 = movs(r7, r1);
                r7 = ands(r7, r0);
                cmp(r7, 14);
                if (bne(null, 38)) return;
            case 102:
                r7 = lsrs(r1, 4);
                cmp(r7, 4);
                if (bne(null, 38)) return;
            case 108:
                r3 = adds(r3, 1);
                b(null, 34);
                return;
            case 112:
                cmp(r0, 25);
                if (bne(null, 122)) return;
            case 116:
                r1 = ldr(r1 + 8);
                cmp(r1, 0);
                if (bne(null, 38)) return;
            case 122:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 124:
                cmp(r1, 0);
                if (beq(null, 122)) return;
            case 128:
                r0 = ldr(r1 + 4);
                r2 = ands(r2, r0);
                cmp(r2, 57);
                if (bne(null, 122)) return;
            case 136:
                r2 = ldr(r1 + 8);
                r3 = ands(r3, r2);
                cmp(r3, 2);
                if (beq(null, 68)) return;
            case 144:
                cmp(r3, 0);
                if (bne(null, 122)) return;
            case 148:
                r3 = mp_type_str;
                r2 = ldr(r2);
                cmp(r2, r3);
                if (bne(null, 122)) return;
            case 156:
                b(null, 68);
                return;
            case 158:
                cmp(r1, 0);
                if (beq(null, 122)) return;
            case 162:
                b(null, 42);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134237884, size=448, name='compile_scope', path='build/py/compile.o', has_indirect=False)
    protected void compile_scope(int offset) throws Exception
    {
        pc = compile_scope + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r6 = movs(r6, 0);
                strb(r4 + 5, r2);
                r1 = movs(r1, r2);
                str(r0 + 36, r5);
                str(r0 + 16, r6);
                sp = sub(sp, 20);
                r2 = movs(r2, r5);
                r0 = ldr(r0 + 40);
                lr = compile_scope + 26 | 1;
                bl(this::mp_emit_bc_start_pass, 26);
                return;
            case 26:
                r7 = ldrb(r4 + 5);
                cmp(r7, 1);
                if (bne(null, 36)) return;
            case 32:
                strh(r5 + 34, r6);
                strh(r5 + 36, r6);
            case 36:
                r6 = ldr(r5 + 12);
                cmp(r6, 0);
                if (beq(null, 70)) return;
            case 42:
                r3 = lsls(r6, 30);
                if (bne(null, 70)) return;
            case 46:
                r3 = ldr(r6 + 4);
                r3 = uxtb(r3);
                cmp(r3, 60);
                if (bne(null, 70)) return;
            case 54:
                r1 = ldr(r6 + 8);
                r0 = movs(r0, r4);
                lr = compile_scope + 62 | 1;
                bl(this::compile_node, 62);
                return;
            case 62:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 68 | 1;
                bl(this::mp_emit_bc_return_value, 68);
                return;
            case 68:
                b(null, 150);
                return;
            case 70:
                r3 = ldrb(r5);
                cmp(r3, 0);
                if (bne(null, 108)) return;
            case 76:
                r3 = ldrb(r4 + 4);
                cmp(r3, 0);
                if (bne(null, 90)) return;
            case 82:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_scope + 90 | 1;
                bl(this::check_for_doc_string, 90);
                return;
            case 90:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_scope + 98 | 1;
                bl(this::compile_node, 98);
                return;
            case 98:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_scope + 106 | 1;
                bl(this::mp_emit_bc_load_const_tok, 106);
                return;
            case 106:
                b(null, 62);
                return;
            case 108:
                cmp(r3, 7);
                if (bne(null, 160)) return;
            case 112:
                cmp(r7, 1);
                if (bne(null, 132)) return;
            case 116:
                r3 = movs(r3, 0);
                strb(r4 + 6, r3);
                r2 = movs(r2, 67);
                r3 = compile_scope_func_param | 1;
                hint(compile_scope_func_param | 1, this::compile_scope_func_param);
                r1 = ldr(r6 + 12);
                r0 = movs(r0, r4);
                lr = compile_scope + 132 | 1;
                bl(this::apply_to_single_or_list, 132);
                return;
            case 132:
                r0 = movs(r0, r4);
                r1 = ldr(r6 + 20);
                lr = compile_scope + 140 | 1;
                bl(this::compile_node, 140);
                return;
            case 140:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 146 | 1;
                bl(this::mp_emit_bc_last_emit_was_return_value, 146);
                return;
            case 146:
                cmp(r0, 0);
                if (beq(null, 98)) return;
            case 150:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 156 | 1;
                bl(this::mp_emit_bc_end_pass, 156);
                return;
            case 156:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 160:
                cmp(r3, 2);
                if (bne(null, 206)) return;
            case 164:
                cmp(r7, 1);
                if (bne(null, 184)) return;
            case 168:
                r3 = movs(r3, 0);
                strb(r4 + 6, r3);
                r2 = movs(r2, 75);
                r3 = compile_scope_lambda_param | 1;
                hint(compile_scope_lambda_param | 1, this::compile_scope_lambda_param);
                r1 = ldr(r6 + 8);
                r0 = movs(r0, r4);
                lr = compile_scope + 184 | 1;
                bl(this::apply_to_single_or_list, 184);
                return;
            case 184:
                r1 = ldr(r6 + 12);
                r0 = movs(r0, r4);
                lr = compile_scope + 192 | 1;
                bl(this::compile_node, 192);
                return;
            case 192:
                r3 = ldrb(r5 + 24);
                r3 = lsls(r3, 29);
                if (bpl(null, 62)) return;
            case 198:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 204 | 1;
                bl(this::mp_emit_bc_pop_top, 204);
                return;
            case 204:
                b(null, 98);
                return;
            case 206:
                r3 = subs(r3, 3);
                cmp(r3, 3);
                if (bhi(null, 338)) return;
            case 212:
                r3 = ldr(r6 + 12);
                str(sp + 4, r3);
                cmp(r7, 1);
                if (bne(null, 238)) return;
            case 220:
                r3 = add(sp, 8);
                r2 = adds(r3, 7);
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 36);
                lr = compile_scope + 232 | 1;
                bl(this::scope_find_or_add_id, 232);
                return;
            case 232:
                r3 = movs(r3, 2);
                strb(r0, r3);
                strh(r5 + 26, r7);
            case 238:
                r3 = ldrb(r5);
                r2 = movs(r2, 1);
                cmp(r3, 3);
                if (beq(null, 258)) return;
            case 246:
                r2 = movs(r2, 3);
                cmp(r3, 4);
                if (beq(null, 258)) return;
            case 252:
                cmp(r3, 5);
                if (bne(null, 266)) return;
            case 256:
                r2 = movs(r2, 6);
            case 258:
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_scope + 266 | 1;
                bl(this::mp_emit_bc_build, 266);
                return;
            case 266:
                r3 = ldrb(r5);
                cmp(r3, 6);
                if (bne(null, 320)) return;
            case 272:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 278 | 1;
                bl(this::mp_emit_bc_load_null, 278);
                return;
            case 278:
                r1 = movs(r1, 1);
                r0 = movs(r0, r4);
                lr = compile_scope + 286 | 1;
                bl(this::compile_load_id, 286);
                return;
            case 286:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 292 | 1;
                bl(this::mp_emit_bc_load_null, 292);
                return;
            case 292:
                r0 = ldr(r4 + 40);
                lr = compile_scope + 298 | 1;
                bl(this::mp_emit_bc_load_null, 298);
                return;
            case 298:
                r3 = movs(r3, 0);
                r2 = ldr(r6 + 8);
                r1 = ldr(sp + 4);
                r0 = movs(r0, r4);
                lr = compile_scope + 310 | 1;
                bl(this::compile_scope_comp_iter, 310);
                return;
            case 310:
                r3 = ldrb(r5);
                cmp(r3, 6);
                if (beq(null, 318)) return;
            case 316:
                b(null, 62);
                return;
            case 318:
                b(null, 98);
                return;
            case 320:
                r0 = movs(r0, r4);
                r1 = movs(r1, 1);
                lr = compile_scope + 328 | 1;
                bl(this::compile_load_id, 328);
                return;
            case 328:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_scope + 336 | 1;
                bl(this::mp_emit_bc_get_iter, 336);
                return;
            case 336:
                b(null, 298);
                return;
            case 338:
                cmp(r7, 1);
                if (bne(null, 358)) return;
            case 342:
                r3 = add(sp, 8);
                r2 = adds(r3, 7);
                r1 = movs(r1, 13);
                r0 = movs(r0, r5);
                lr = compile_scope + 354 | 1;
                bl(this::scope_find_or_add_id, 354);
                return;
            case 354:
                r3 = movs(r3, 2);
                strb(r0, r3);
            case 358:
                r1 = movs(r1, 57);
                r0 = movs(r0, r4);
                lr = compile_scope + 366 | 1;
                bl(this::compile_load_id, 366);
                return;
            case 366:
                r1 = movs(r1, 55);
                r0 = movs(r0, r4);
                lr = compile_scope + 374 | 1;
                bl(this::compile_store_id, 374);
                return;
            case 374:
                r3 = ldr(r6 + 8);
                r0 = ldr(r4 + 40);
                r1 = lsrs(r3, 4);
                lr = compile_scope + 384 | 1;
                bl(this::mp_emit_bc_load_const_str, 384);
                return;
            case 384:
                r1 = movs(r1, 65);
                r0 = movs(r0, r4);
                lr = compile_scope + 392 | 1;
                bl(this::compile_store_id, 392);
                return;
            case 392:
                r1 = ldr(r6 + 16);
                r0 = movs(r0, r4);
                lr = compile_scope + 400 | 1;
                bl(this::check_for_doc_string, 400);
                return;
            case 400:
                r1 = ldr(r6 + 16);
                r0 = movs(r0, r4);
                lr = compile_scope + 408 | 1;
                bl(this::compile_node, 408);
                return;
            case 408:
                r1 = movs(r1, 13);
                r0 = movs(r0, r5);
                lr = compile_scope + 416 | 1;
                bl(this::scope_find, 416);
                return;
            case 416:
                r3 = ldrb(r0);
                cmp(r3, 2);
                if (bne(null, 424)) return;
            case 422:
                b(null, 98);
                return;
            case 424:
                r2 = ldrh(r0 + 2);
                r3 = movs(r3, 0);
                r1 = movs(r1, 13);
                r0 = ldr(r4 + 40);
                lr = compile_scope + 436 | 1;
                bl(this::mp_emit_bc_load_local, 436);
                return;
            case 436:
                b(null, 62);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238332, size=22, name='compile_dictorsetmaker_item', path='build/py/compile.o', has_indirect=False)
    protected void compile_dictorsetmaker_item(int offset) throws Exception
    {
        pc = compile_dictorsetmaker_item + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                r1 = ldr(r1 + 12);
                lr = compile_dictorsetmaker_item + 12 | 1;
                bl(this::compile_node, 12);
                return;
            case 12:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_dictorsetmaker_item + 20 | 1;
                bl(this::compile_node, 20);
                return;
            case 20:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238354, size=132, name='compile_subscript', path='build/py/compile.o', has_indirect=False)
    protected void compile_subscript(int offset) throws Exception
    {
        pc = compile_subscript + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r1 + 4);
                push(true, r4, r5, r6);
                r3 = uxtb(r3);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                cmp(r3, 51);
                if (bne(null, 42)) return;
            case 14:
                r1 = ldr(r1 + 8);
                lr = compile_subscript + 20 | 1;
                bl(this::compile_node, 20);
                return;
            case 20:
                r5 = ldr(r5 + 12);
            case 22:
                r5 = ldr(r5 + 8);
                cmp(r5, 0);
                if (bne(null, 52)) return;
            case 28:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_subscript + 36 | 1;
                bl(this::mp_emit_bc_load_const_tok, 36);
                return;
            case 36:
                r2 = movs(r2, 8);
                r1 = movs(r1, 2);
                b(null, 84);
                return;
            case 42:
                r1 = movs(r1, 14);
                r0 = ldr(r0 + 40);
                lr = compile_subscript + 50 | 1;
                bl(this::mp_emit_bc_load_const_tok, 50);
                return;
            case 50:
                b(null, 22);
                return;
            case 52:
                r6 = movs(r6, 3);
                tst(r5, r6);
                if (bne(null, 122)) return;
            case 58:
                r3 = ldr(r5 + 4);
                r3 = uxtb(r3);
                cmp(r3, 152);
                if (bne(null, 92)) return;
            case 66:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_subscript + 74 | 1;
                bl(this::mp_emit_bc_load_const_tok, 74);
                return;
            case 74:
                r1 = ldr(r5 + 8);
            case 76:
                cmp(r1, 0);
                if (bne(null, 110)) return;
            case 80:
                r2 = movs(r2, 8);
                r1 = adds(r1, 2);
            case 84:
                r0 = ldr(r4 + 40);
                lr = compile_subscript + 90 | 1;
                bl(this::mp_emit_bc_build, 90);
                return;
            case 90:
                pop(true, R4, R5, R6);
                return;
            case 92:
                cmp(r3, 153);
                if (bne(null, 122)) return;
            case 96:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_subscript + 104 | 1;
                bl(this::compile_node, 104);
                return;
            case 104:
                r3 = ldr(r5 + 12);
                r1 = ldr(r3 + 8);
                b(null, 76);
                return;
            case 110:
                r0 = movs(r0, r4);
                lr = compile_subscript + 116 | 1;
                bl(this::compile_node, 116);
                return;
            case 116:
                r2 = movs(r2, 8);
                r1 = movs(r1, r6);
                b(null, 84);
                return;
            case 122:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_subscript + 130 | 1;
                bl(this::compile_node, 130);
                return;
            case 130:
                b(null, 36);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238486, size=20, name='compile_trailer_bracket', path='build/py/compile.o', has_indirect=False)
    protected void compile_trailer_bracket(int offset) throws Exception
    {
        pc = compile_trailer_bracket + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r1 = ldr(r1 + 8);
                lr = compile_trailer_bracket + 10 | 1;
                bl(this::compile_node, 10);
                return;
            case 10:
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_trailer_bracket + 18 | 1;
                bl(this::mp_emit_bc_subscr, 18);
                return;
            case 18:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238506, size=66, name='text_c_tuple', path='build/py/compile.o', has_indirect=False)
    protected void text_c_tuple(int offset) throws Exception
    {
        pc = text_c_tuple + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, 0);
                r6 = movs(r6, r0);
                r7 = movs(r7, r2);
                cmp(r1, r4);
                if (beq(null, 18)) return;
            case 12:
                lr = text_c_tuple + 16 | 1;
                bl(this::compile_node, 16);
                return;
            case 16:
                r4 = adds(r4, 1);
            case 18:
                cmp(r7, 0);
                if (beq(null, 38)) return;
            case 22:
                r5 = movs(r5, 0);
                r3 = ldr(r7 + 4);
                r3 = lsrs(r3, 8);
                str(sp + 4, r3);
            case 30:
                r3 = ldr(sp + 4);
                cmp(r5, r3);
                if (blt(null, 50)) return;
            case 36:
                r4 = adds(r4, r3);
            case 38:
                r0 = ldr(r6 + 40);
                r2 = movs(r2, 0);
                r1 = movs(r1, r4);
                lr = text_c_tuple + 48 | 1;
                bl(this::mp_emit_bc_build, 48);
                return;
            case 48:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 50:
                r3 = lsls(r5, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r6);
                lr = text_c_tuple + 62 | 1;
                bl(this::compile_node, 62);
                return;
            case 62:
                r5 = adds(r5, 1);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238572, size=12, name='compile_generic_tuple', path='build/py/compile.o', has_indirect=False)
    protected void compile_generic_tuple(int offset) throws Exception
    {
        pc = compile_generic_tuple + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, r1);
                r1 = movs(r1, 0);
                lr = compile_generic_tuple + 10 | 1;
                bl(this::text_c_tuple, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238584, size=140, name='compile_while_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_while_stmt(int offset) throws Exception
    {
        pc = compile_while_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r3 = ldrh(r0 + 24);
                sp = sub(sp, 20);
                str(sp + 4, r3);
                r3 = ldrh(r0 + 26);
                r6 = ldr(r0 + 16);
                str(sp + 8, r3);
                r3 = ldrh(r0 + 30);
                r7 = adds(r6, 1);
                str(sp + 12, r3);
                r3 = adds(r6, 2);
                str(r0 + 16, r3);
                r3 = ldrh(r0 + 28);
                r4 = movs(r4, r0);
                strh(r0 + 24, r6);
                strh(r0 + 26, r7);
                strh(r0 + 30, r3);
                r0 = ldr(r1 + 8);
                r5 = movs(r5, r1);
                lr = compile_while_stmt + 42 | 1;
                bl(this::mp_parse_node_is_const_false, 42);
                return;
            case 42:
                cmp(r0, 0);
                if (bne(null, 108)) return;
            case 46:
                r3 = ldr(r4 + 16);
                str(sp, r3);
                r3 = adds(r3, 1);
                str(r4 + 16, r3);
                r0 = ldr(r5 + 8);
                lr = compile_while_stmt + 60 | 1;
                bl(this::mp_parse_node_is_const_true, 60);
                return;
            case 60:
                cmp(r0, 0);
                if (bne(null, 72)) return;
            case 64:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_while_stmt + 72 | 1;
                bl(this::mp_emit_bc_jump, 72);
                return;
            case 72:
                r1 = ldr(sp);
                r0 = ldr(r4 + 40);
                lr = compile_while_stmt + 80 | 1;
                bl(this::mp_emit_bc_label_assign, 80);
                return;
            case 80:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_while_stmt + 88 | 1;
                bl(this::compile_node, 88);
                return;
            case 88:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_while_stmt + 96 | 1;
                bl(this::mp_emit_bc_label_assign, 96);
                return;
            case 96:
                r3 = ldr(sp);
                r2 = movs(r2, 1);
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_while_stmt + 108 | 1;
                bl(this::c_if_cond, 108);
                return;
            case 108:
                r3 = ldr(sp + 4);
                r1 = ldr(r5 + 16);
                strh(r4 + 24, r3);
                r3 = ldr(sp + 8);
                r0 = movs(r0, r4);
                strh(r4 + 26, r3);
                r3 = ldr(sp + 12);
                strh(r4 + 30, r3);
                lr = compile_while_stmt + 128 | 1;
                bl(this::compile_node, 128);
                return;
            case 128:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_while_stmt + 136 | 1;
                bl(this::mp_emit_bc_label_assign, 136);
                return;
            case 136:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238724, size=18, name='compile_yield_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_yield_stmt(int offset) throws Exception
    {
        pc = compile_yield_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r1 = ldr(r1 + 8);
                lr = compile_yield_stmt + 10 | 1;
                bl(this::compile_node, 10);
                return;
            case 10:
                r0 = ldr(r4 + 40);
                lr = compile_yield_stmt + 16 | 1;
                bl(this::mp_emit_bc_pop_top, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134238744, size=260, name='c_del_stmt', path='build/py/compile.o', has_indirect=True)
    protected void c_del_stmt(int offset) throws Exception
    {
        pc = c_del_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
            case 6:
                r3 = movs(r3, 15);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (bne(null, 24)) return;
            case 14:
                r1 = lsrs(r4, 4);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 22 | 1;
                bl(this::compile_delete_id, 22);
                return;
            case 22:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 24:
                cmp(r4, 0);
                if (beq(null, 242)) return;
            case 28:
                r3 = movs(r3, 3);
                tst(r4, r3);
                if (bne(null, 242)) return;
            case 34:
                r6 = movs(r6, 255);
                r3 = ldr(r4 + 4);
                r3 = ands(r3, r6);
                cmp(r3, 43);
                if (bne(null, 156)) return;
            case 44:
                r1 = ldr(r4 + 8);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 52 | 1;
                bl(this::compile_node, 52);
                return;
            case 52:
                r7 = ldr(r4 + 12);
                cmp(r7, 0);
                if (beq(null, 242)) return;
            case 58:
                r2 = movs(r2, 3);
                r2 = ands(r2, r7);
                if (bne(null, 242)) return;
            case 64:
                r1 = ldr(r7 + 4);
                r3 = movs(r3, r7);
                r6 = ands(r6, r1);
                cmp(r6, 140);
                if (bne(null, 96)) return;
            case 74:
                r6 = movs(r6, r2);
                r3 = lsrs(r1, 8);
                str(sp + 4, r3);
            case 80:
                r3 = ldr(sp + 4);
                r3 = subs(r3, 1);
                cmp(r3, r6);
                if (bgt(null, 122)) return;
            case 88:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 1);
                r3 = lsls(r3, 2);
                r3 = ldr(r3 + r7);
            case 96:
                r2 = ldr(r3 + 4);
                r2 = uxtb(r2);
                cmp(r2, 48);
                if (bne(null, 138)) return;
            case 104:
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 112 | 1;
                bl(this::compile_node, 112);
                return;
            case 112:
                r1 = movs(r1, 2);
                r0 = ldr(r5 + 40);
                lr = c_del_stmt + 120 | 1;
                bl(this::mp_emit_bc_subscr, 120);
                return;
            case 120:
                b(null, 22);
                return;
            case 122:
                r3 = lsls(r6, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 134 | 1;
                bl(this::compile_node, 134);
                return;
            case 134:
                r6 = adds(r6, 1);
                b(null, 80);
                return;
            case 138:
                cmp(r2, 49);
                if (bne(null, 242)) return;
            case 142:
                r1 = ldr(r3 + 8);
                r2 = subs(r2, 47);
                r1 = lsrs(r1, 4);
                r0 = ldr(r5 + 40);
                lr = c_del_stmt + 154 | 1;
                bl(this::mp_emit_bc_attr, 154);
                return;
            case 154:
                b(null, 22);
                return;
            case 156:
                cmp(r3, 44);
                if (bne(null, 242)) return;
            case 160:
                r4 = ldr(r4 + 8);
                cmp(r4, 0);
                if (beq(null, 242)) return;
            case 166:
                r7 = ldr(r4 + 12);
                cmp(r7, 0);
                if (beq(null, 230)) return;
            case 172:
                r3 = subs(r3, 41);
                tst(r7, r3);
                if (bne(null, 230)) return;
            case 178:
                r3 = ldr(r7 + 4);
                r6 = ands(r6, r3);
                cmp(r6, 147);
                if (bne(null, 190)) return;
            case 186:
                r4 = ldr(r4 + 8);
                b(null, 6);
                return;
            case 190:
                cmp(r6, 148);
                if (bne(null, 226)) return;
            case 194:
                r1 = ldr(r4 + 8);
                r0 = movs(r0, r5);
                r6 = lsrs(r3, 8);
                r4 = movs(r4, 0);
                lr = c_del_stmt + 206 | 1;
                bl(null, 0, 206);
                return;
            case 206:
                cmp(r4, r6);
                if (bge(null, 22)) return;
            case 210:
                r3 = lsls(r4, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 222 | 1;
                bl(null, 0, 222);
                return;
            case 222:
                r4 = adds(r4, 1);
                b(null, 206);
                return;
            case 226:
                cmp(r6, 171);
                if (beq(null, 242)) return;
            case 230:
                r1 = ldr(r4 + 8);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 238 | 1;
                bl(null, 0, 238);
                return;
            case 238:
                r4 = ldr(r4 + 12);
                b(null, 6);
                return;
            case 242:
                r2 = c_del_stmt_str1_1;
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = c_del_stmt + 252 | 1;
                bl(this::compile_syntax_error, 252);
                return;
            case 252:
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239004, size=54, name='compile_generic_all_nodes', path='build/py/compile.o', has_indirect=False)
    protected void compile_generic_all_nodes(int offset) throws Exception
    {
        pc = compile_generic_all_nodes + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r7 = movs(r7, r1);
                r4 = movs(r4, 0);
                r3 = ldr(r1 + 4);
                r6 = lsrs(r3, 8);
            case 12:
                cmp(r4, r6);
                if (bge(null, 48)) return;
            case 16:
                r3 = lsls(r4, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r5);
                lr = compile_generic_all_nodes + 28 | 1;
                bl(this::compile_node, 28);
                return;
            case 28:
                r3 = ldr(r5 + 8);
                cmp(r3, 0);
                if (beq(null, 50)) return;
            case 34:
                r0 = movs(r0, r5);
                r4 = adds(r4, 2);
                r4 = lsls(r4, 2);
                r0 = adds(r0, 12);
                r1 = ldr(r4 + r7);
                lr = compile_generic_all_nodes + 48 | 1;
                bl(this::compile_error_set_line_isra_0, 48);
                return;
            case 48:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 50:
                r4 = adds(r4, 1);
                b(null, 12);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239058, size=18, name='compile_power', path='build/py/compile.o', has_indirect=False)
    protected void compile_power(int offset) throws Exception
    {
        pc = compile_power + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = compile_power + 8 | 1;
                bl(this::compile_generic_all_nodes, 8);
                return;
            case 8:
                r1 = movs(r1, 32);
                r0 = ldr(r4 + 40);
                lr = compile_power + 16 | 1;
                bl(this::mp_emit_bc_binary_op, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239076, size=228, name='compile_if_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_if_stmt(int offset) throws Exception
    {
        pc = compile_if_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r6 = ldr(r0 + 16);
                sp = sub(sp, 28);
                r3 = adds(r6, 1);
                str(r0 + 16, r3);
                r4 = movs(r4, r0);
                r0 = ldr(r1 + 8);
                r5 = movs(r5, r1);
                lr = compile_if_stmt + 20 | 1;
                bl(this::mp_parse_node_is_const_false, 20);
                return;
            case 20:
                r2 = subs(r0, 0);
                if (bne(null, 96)) return;
            case 24:
                r7 = ldr(r4 + 16);
                r0 = movs(r0, r4);
                r3 = adds(r7, 1);
                str(r4 + 16, r3);
                r1 = ldr(r5 + 8);
                r3 = movs(r3, r7);
                lr = compile_if_stmt + 40 | 1;
                bl(this::c_if_cond, 40);
                return;
            case 40:
                r0 = movs(r0, r4);
                r1 = ldr(r5 + 12);
                lr = compile_if_stmt + 48 | 1;
                bl(this::compile_node, 48);
                return;
            case 48:
                r0 = ldr(r5 + 8);
                lr = compile_if_stmt + 54 | 1;
                bl(this::mp_parse_node_is_const_true, 54);
                return;
            case 54:
                cmp(r0, 0);
                if (bne(null, 130)) return;
            case 58:
                r3 = ldr(r5 + 16);
                cmp(r3, 0);
                if (bne(null, 70)) return;
            case 64:
                r3 = ldr(r5 + 20);
                cmp(r3, 0);
                if (beq(null, 88)) return;
            case 70:
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 76 | 1;
                bl(this::mp_emit_bc_last_emit_was_return_value, 76);
                return;
            case 76:
                cmp(r0, 0);
                if (bne(null, 88)) return;
            case 80:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 88 | 1;
                bl(this::mp_emit_bc_jump, 88);
                return;
            case 88:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 96 | 1;
                bl(this::mp_emit_bc_label_assign, 96);
                return;
            case 96:
                r0 = movs(r0, r5);
                r2 = add(sp, 20);
                r1 = movs(r1, 112);
                r0 = adds(r0, 16);
                lr = compile_if_stmt + 108 | 1;
                bl(this::mp_parse_node_extract_list, 108);
                return;
            case 108:
                r3 = movs(r3, 0);
                str(sp + 12, r0);
            case 112:
                str(sp + 4, r3);
                r3 = ldr(sp + 4);
                r2 = ldr(sp + 12);
                cmp(r3, r2);
                if (blt(null, 142)) return;
            case 122:
                r1 = ldr(r5 + 20);
                r0 = movs(r0, r4);
                lr = compile_if_stmt + 130 | 1;
                bl(this::compile_node, 130);
                return;
            case 130:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 138 | 1;
                bl(this::mp_emit_bc_label_assign, 138);
                return;
            case 138:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 142:
                r3 = ldr(sp + 4);
                r2 = ldr(sp + 20);
                r3 = lsls(r3, 2);
                r7 = ldr(r3 + r2);
                r0 = ldr(r7 + 8);
                lr = compile_if_stmt + 156 | 1;
                bl(this::mp_parse_node_is_const_false, 156);
                return;
            case 156:
                r2 = subs(r0, 0);
                if (bne(null, 222)) return;
            case 160:
                r3 = ldr(r4 + 16);
                r0 = movs(r0, r4);
                str(sp + 8, r3);
                r3 = adds(r3, 1);
                str(r4 + 16, r3);
                r1 = ldr(r7 + 8);
                r3 = ldr(sp + 8);
                lr = compile_if_stmt + 178 | 1;
                bl(this::c_if_cond, 178);
                return;
            case 178:
                r0 = movs(r0, r4);
                r1 = ldr(r7 + 12);
                lr = compile_if_stmt + 186 | 1;
                bl(this::compile_node, 186);
                return;
            case 186:
                r0 = ldr(r7 + 8);
                lr = compile_if_stmt + 192 | 1;
                bl(this::mp_parse_node_is_const_true, 192);
                return;
            case 192:
                cmp(r0, 0);
                if (bne(null, 130)) return;
            case 196:
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 202 | 1;
                bl(this::mp_emit_bc_last_emit_was_return_value, 202);
                return;
            case 202:
                cmp(r0, 0);
                if (bne(null, 214)) return;
            case 206:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 214 | 1;
                bl(this::mp_emit_bc_jump, 214);
                return;
            case 214:
                r1 = ldr(sp + 8);
                r0 = ldr(r4 + 40);
                lr = compile_if_stmt + 222 | 1;
                bl(this::mp_emit_bc_label_assign, 222);
                return;
            case 222:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 1);
                b(null, 112);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239304, size=74, name='compile_comprehension', path='build/py/compile.o', has_indirect=False)
    protected void compile_comprehension(int offset) throws Exception
    {
        pc = compile_comprehension + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldrb(r0 + 5);
                r4 = movs(r4, r0);
                r6 = movs(r6, r2);
                r5 = ldr(r1 + 12);
                cmp(r3, 1);
                if (bne(null, 28)) return;
            case 14:
                r3 = ldr(r0 + 36);
                r2 = movs(r2, r1);
                r3 = ldrb(r3 + 25);
                r1 = movs(r1, r6);
                lr = compile_comprehension + 26 | 1;
                bl(this::scope_new_and_link, 26);
                return;
            case 26:
                str(r5 + 20, r0);
            case 28:
                r3 = movs(r3, 0);
                r1 = ldr(r5 + 20);
                r0 = movs(r0, r4);
                r2 = movs(r2, r3);
                lr = compile_comprehension + 40 | 1;
                bl(this::close_over_variables_etc, 40);
                return;
            case 40:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_comprehension + 48 | 1;
                bl(this::compile_node, 48);
                return;
            case 48:
                cmp(r6, 6);
                if (bne(null, 60)) return;
            case 52:
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_comprehension + 60 | 1;
                bl(this::mp_emit_bc_get_iter, 60);
                return;
            case 60:
                r3 = movs(r3, 0);
                r1 = movs(r1, 1);
                r2 = movs(r2, r3);
                r0 = ldr(r4 + 40);
                lr = compile_comprehension + 72 | 1;
                bl(this::mp_emit_bc_call_function, 72);
                return;
            case 72:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239378, size=136, name='compile_atom_bracket', path='build/py/compile.o', has_indirect=False)
    protected void compile_atom_bracket(int offset) throws Exception
    {
        pc = compile_atom_bracket + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = ldr(r1 + 8);
                r4 = movs(r4, r0);
                cmp(r5, 0);
                if (bne(null, 22)) return;
            case 10:
                r2 = movs(r2, 1);
                r1 = movs(r1, r5);
            case 14:
                r0 = ldr(r4 + 40);
                lr = compile_atom_bracket + 20 | 1;
                bl(this::mp_emit_bc_build, 20);
                return;
            case 20:
                b(null, 108);
                return;
            case 22:
                r2 = movs(r2, 3);
                tst(r5, r2);
                if (bne(null, 132)) return;
            case 28:
                r3 = movs(r3, 255);
                r1 = ldr(r5 + 4);
                r1 = ands(r1, r3);
                cmp(r1, 144);
                if (bne(null, 132)) return;
            case 38:
                r6 = ldr(r5 + 12);
                cmp(r6, 0);
                if (beq(null, 110)) return;
            case 44:
                tst(r6, r2);
                if (bne(null, 110)) return;
            case 48:
                r1 = ldr(r6 + 4);
                r3 = ands(r3, r1);
                cmp(r3, 147);
                if (bne(null, 70)) return;
            case 56:
                r1 = ldr(r5 + 8);
            case 58:
                r0 = movs(r0, r4);
                lr = compile_atom_bracket + 64 | 1;
                bl(this::compile_node, 64);
                return;
            case 64:
                r2 = movs(r2, 1);
                r1 = movs(r1, r2);
                b(null, 14);
                return;
            case 70:
                cmp(r3, 148);
                if (bne(null, 98)) return;
            case 74:
                r1 = ldr(r5 + 8);
                lr = compile_atom_bracket + 80 | 1;
                bl(this::compile_node, 80);
                return;
            case 80:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_atom_bracket + 88 | 1;
                bl(this::compile_generic_all_nodes, 88);
                return;
            case 88:
                r1 = ldr(r6 + 4);
                r2 = movs(r2, 1);
                r1 = lsrs(r1, 8);
                r1 = adds(r1, 1);
                b(null, 14);
                return;
            case 98:
                cmp(r3, 171);
                if (bne(null, 110)) return;
            case 102:
                r1 = movs(r1, r5);
                lr = compile_atom_bracket + 108 | 1;
                bl(this::compile_comprehension, 108);
                return;
            case 108:
                pop(true, R4, R5, R6);
                return;
            case 110:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_atom_bracket + 118 | 1;
                bl(this::compile_node, 118);
                return;
            case 118:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_atom_bracket + 126 | 1;
                bl(this::compile_node, 126);
                return;
            case 126:
                r2 = movs(r2, 1);
                r1 = movs(r1, 2);
                b(null, 14);
                return;
            case 132:
                r1 = movs(r1, r5);
                b(null, 58);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239516, size=344, name='compile_trailer_paren_helper', path='build/py/compile.o', has_indirect=False)
    protected void compile_trailer_paren_helper(int offset) throws Exception
    {
        pc = compile_trailer_paren_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, 0);
                sp = sub(sp, 44);
                str(sp + 28, r1);
                str(sp + 24, r2);
                r5 = movs(r5, r0);
                r2 = add(sp, 36);
                r1 = movs(r1, 163);
                r0 = add(sp, 28);
                str(sp + 8, r3);
                lr = compile_trailer_paren_helper + 24 | 1;
                bl(this::mp_parse_node_extract_list, 24);
                return;
            case 24:
                r6 = movs(r6, r7);
                str(sp + 20, r0);
                str(sp + 16, r7);
                str(sp + 12, r7);
                str(sp + 4, r7);
            case 34:
                r3 = ldr(sp + 20);
                cmp(r7, r3);
                if (blt(null, 94)) return;
            case 40:
                cmp(r6, 0);
                if (beq(null, 72)) return;
            case 44:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (beq(null, 52)) return;
            case 50:
                b(null, 286);
                return;
            case 52:
                r0 = ldr(r5 + 40);
                lr = compile_trailer_paren_helper + 58 | 1;
                bl(this::mp_emit_bc_load_null, 58);
                return;
            case 58:
                r3 = ldr(sp + 16);
                cmp(r3, 0);
                if (beq(null, 66)) return;
            case 64:
                b(null, 298);
                return;
            case 66:
                r0 = ldr(r5 + 40);
                lr = compile_trailer_paren_helper + 72 | 1;
                bl(this::mp_emit_bc_load_null, 72);
                return;
            case 72:
                r3 = ldr(sp + 24);
                r0 = ldr(r5 + 40);
                cmp(r3, 0);
                if (bne(null, 82)) return;
            case 80:
                b(null, 310);
                return;
            case 82:
                r3 = movs(r3, r6);
                r2 = ldr(sp + 4);
                r1 = ldr(sp + 8);
                lr = compile_trailer_paren_helper + 92 | 1;
                bl(this::mp_emit_bc_call_method, 92);
                return;
            case 92:
                b(null, 136);
                return;
            case 94:
                r2 = ldr(sp + 36);
                r3 = lsls(r7, 2);
                r4 = ldr(r3 + r2);
                cmp(r4, 0);
                if (beq(null, 250)) return;
            case 104:
                r3 = movs(r3, 3);
                tst(r4, r3);
                if (bne(null, 250)) return;
            case 110:
                r2 = movs(r2, 255);
                r3 = ldr(r4 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 165);
                if (bne(null, 148)) return;
            case 120:
                r3 = subs(r3, 164);
                tst(r6, r3);
                if (beq(null, 140)) return;
            case 126:
                r2 = compile_trailer_paren_helper_str1_1;
            case 128:
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = compile_trailer_paren_helper + 136 | 1;
                bl(this::compile_syntax_error, 136);
                return;
            case 136:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 140:
                r6 = orrs(r6, r3);
                str(sp + 12, r4);
            case 144:
                r7 = adds(r7, 1);
                b(null, 34);
                return;
            case 148:
                cmp(r3, 166);
                if (bne(null, 168)) return;
            case 152:
                r3 = subs(r3, 164);
                tst(r6, r3);
                if (beq(null, 162)) return;
            case 158:
                r2 = 0x0802255e;
                b(null, 128);
                return;
            case 162:
                r6 = orrs(r6, r3);
                str(sp + 16, r4);
                b(null, 144);
                return;
            case 168:
                cmp(r3, 167);
                if (bne(null, 250)) return;
            case 172:
                r3 = ldr(r4 + 12);
                cmp(r3, 0);
                if (beq(null, 194)) return;
            case 178:
                r2 = movs(r2, 3);
                tst(r3, r2);
                if (bne(null, 194)) return;
            case 184:
                r3 = ldr(r3 + 4);
                r2 = adds(r2, 252);
                r3 = ands(r3, r2);
                cmp(r3, 171);
                if (beq(null, 232)) return;
            case 194:
                r3 = movs(r3, 15);
                r1 = ldr(r4 + 8);
                r3 = ands(r3, r1);
                cmp(r3, 2);
                if (beq(null, 208)) return;
            case 204:
                r2 = 0x08022576;
                b(null, 128);
                return;
            case 208:
                r1 = lsrs(r1, 4);
                r0 = ldr(r5 + 40);
                lr = compile_trailer_paren_helper + 216 | 1;
                bl(this::mp_emit_bc_load_const_str, 216);
                return;
            case 216:
                r1 = ldr(r4 + 12);
                r0 = movs(r0, r5);
                lr = compile_trailer_paren_helper + 224 | 1;
                bl(this::compile_node, 224);
                return;
            case 224:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 1);
                str(sp + 4, r3);
                b(null, 144);
                return;
            case 232:
                r2 = movs(r2, 6);
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = compile_trailer_paren_helper + 242 | 1;
                bl(this::compile_comprehension, 242);
                return;
            case 242:
                r3 = ldr(sp + 8);
                r3 = adds(r3, 1);
                str(sp + 8, r3);
                b(null, 144);
                return;
            case 250:
                cmp(r6, 0);
                if (beq(null, 258)) return;
            case 254:
                r2 = 0x08022597;
                b(null, 128);
                return;
            case 258:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (beq(null, 268)) return;
            case 264:
                r2 = 0x080225b2;
                b(null, 128);
                return;
            case 268:
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = compile_trailer_paren_helper + 276 | 1;
                bl(this::compile_node, 276);
                return;
            case 276:
                r3 = ldr(sp + 8);
                r6 = ldr(sp + 4);
                r3 = adds(r3, 1);
                str(sp + 8, r3);
                b(null, 144);
                return;
            case 286:
                r3 = ldr(sp + 12);
                r0 = movs(r0, r5);
                r1 = ldr(r3 + 8);
                lr = compile_trailer_paren_helper + 296 | 1;
                bl(this::compile_node, 296);
                return;
            case 296:
                b(null, 58);
                return;
            case 298:
                r3 = ldr(sp + 16);
                r0 = movs(r0, r5);
                r1 = ldr(r3 + 8);
                lr = compile_trailer_paren_helper + 308 | 1;
                bl(this::compile_node, 308);
                return;
            case 308:
                b(null, 72);
                return;
            case 310:
                r3 = movs(r3, r6);
                r2 = ldr(sp + 4);
                r1 = ldr(sp + 8);
                lr = compile_trailer_paren_helper + 320 | 1;
                bl(this::mp_emit_bc_call_function, 320);
                return;
            case 320:
                b(null, 136);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239860, size=86, name='compile_classdef_helper', path='build/py/compile.o', has_indirect=False)
    protected void compile_classdef_helper(int offset) throws Exception
    {
        pc = compile_classdef_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r1);
                r1 = ldrb(r0 + 5);
                r4 = movs(r4, r0);
                r3 = movs(r3, r2);
                cmp(r1, 1);
                if (bne(null, 22)) return;
            case 14:
                r2 = movs(r2, r6);
                lr = compile_classdef_helper + 20 | 1;
                bl(this::scope_new_and_link, 20);
                return;
            case 20:
                str(r6 + 20, r0);
            case 22:
                r0 = ldr(r4 + 40);
                lr = compile_classdef_helper + 28 | 1;
                bl(this::mp_emit_bc_load_build_class, 28);
                return;
            case 28:
                r3 = movs(r3, 0);
                r5 = ldr(r6 + 20);
                r2 = movs(r2, r3);
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_classdef_helper + 42 | 1;
                bl(this::close_over_variables_etc, 42);
                return;
            case 42:
                r1 = ldrh(r5 + 18);
                r0 = ldr(r4 + 40);
                lr = compile_classdef_helper + 50 | 1;
                bl(this::mp_emit_bc_load_const_str, 50);
                return;
            case 50:
                r1 = ldr(r6 + 12);
                cmp(r1, 0);
                if (beq(null, 72)) return;
            case 56:
                r3 = movs(r3, 3);
                r3 = ands(r3, r1);
                if (bne(null, 72)) return;
            case 62:
                r2 = ldr(r1 + 4);
                r2 = uxtb(r2);
                cmp(r2, 162);
                if (bne(null, 72)) return;
            case 70:
                r1 = movs(r1, r3);
            case 72:
                r0 = movs(r0, r4);
                r3 = movs(r3, 2);
                r2 = movs(r2, 0);
                lr = compile_classdef_helper + 82 | 1;
                bl(this::compile_trailer_paren_helper, 82);
                return;
            case 82:
                r0 = ldrh(r5 + 18);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239946, size=22, name='compile_classdef', path='build/py/compile.o', has_indirect=False)
    protected void compile_classdef(int offset) throws Exception
    {
        pc = compile_classdef + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldr(r0 + 36);
                r4 = movs(r4, r0);
                r2 = ldrb(r3 + 25);
                lr = compile_classdef + 12 | 1;
                bl(this::compile_classdef_helper, 12);
                return;
            case 12:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = compile_classdef + 20 | 1;
                bl(this::compile_store_id, 20);
                return;
            case 20:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239968, size=14, name='compile_trailer_paren', path='build/py/compile.o', has_indirect=False)
    protected void compile_trailer_paren(int offset) throws Exception
    {
        pc = compile_trailer_paren + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                push(true, r4);
                r2 = movs(r2, r3);
                r1 = ldr(r1 + 8);
                lr = compile_trailer_paren + 12 | 1;
                bl(this::compile_trailer_paren_helper, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134239984, size=264, name='compile_decorated', path='build/py/compile.o', has_indirect=False)
    protected void compile_decorated(int offset) throws Exception
    {
        pc = compile_decorated + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                sp = sub(sp, 36);
                str(sp + 20, r1);
                r0 = adds(r0, 8);
                r2 = add(sp, 24);
                r1 = movs(r1, 63);
                lr = compile_decorated + 20 | 1;
                bl(this::mp_parse_node_extract_list, 20);
                return;
            case 20:
                r7 = movs(r7, 0);
                r3 = ldr(r4 + 36);
                str(sp + 8, r0);
                r5 = ldrb(r3 + 25);
                str(sp + 4, r7);
            case 30:
                r3 = ldr(sp + 8);
                cmp(r7, r3);
                if (blt(null, 60)) return;
            case 36:
                r3 = ldr(sp + 20);
                r1 = ldr(r3 + 12);
                r3 = ldr(r1 + 4);
                r3 = uxtb(r3);
                cmp(r3, 3);
                if (bne(null, 182)) return;
            case 48:
                r2 = movs(r2, r5);
                r0 = movs(r0, r4);
                lr = compile_decorated + 56 | 1;
                bl(this::compile_funcdef_helper, 56);
                return;
            case 56:
                r5 = movs(r5, r0);
                b(null, 210);
                return;
            case 60:
                r2 = ldr(sp + 24);
                r3 = lsls(r7, 2);
                r3 = ldr(r3 + r2);
                r1 = movs(r1, 107);
                r0 = movs(r0, r3);
                r2 = add(sp, 28);
                r0 = adds(r0, 8);
                str(sp + 12, r3);
                lr = compile_decorated + 80 | 1;
                bl(this::mp_parse_node_extract_list, 80);
                return;
            case 80:
                str(sp + 16, r0);
                r0 = movs(r0, 201);
                r3 = ldr(sp + 28);
                r0 = lsls(r0, 1);
                r1 = ldr(r3);
                r2 = lsrs(r1, 4);
                cmp(r2, r0);
                if (beq(null, 126)) return;
            case 96:
                r0 = movs(r0, r4);
                lr = compile_decorated + 102 | 1;
                bl(this::compile_node, 102);
                return;
            case 102:
                r6 = movs(r6, 1);
            case 104:
                r3 = ldr(sp + 16);
                cmp(r6, r3);
                if (blt(null, 162)) return;
            case 110:
                r3 = ldr(sp + 12);
                r1 = ldr(r3 + 12);
                cmp(r1, 0);
                if (beq(null, 146)) return;
            case 118:
                r0 = movs(r0, r4);
                lr = compile_decorated + 124 | 1;
                bl(this::compile_node, 124);
                return;
            case 124:
                b(null, 146);
                return;
            case 126:
                r2 = ldr(sp + 16);
                cmp(r2, 2);
                if (beq(null, 150)) return;
            case 132:
                r2 = compile_decorated_str1_1;
                r0 = movs(r0, r4);
                lr = compile_decorated + 140 | 1;
                bl(this::compile_syntax_error, 140);
                return;
            case 140:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 1);
                str(sp + 4, r3);
            case 146:
                r7 = adds(r7, 1);
                b(null, 30);
                return;
            case 150:
                r1 = ldr(r3 + 4);
                r3 = lsrs(r1, 4);
                cmp(r3, 227);
                if (bne(null, 132)) return;
            case 158:
                r5 = movs(r5, 1);
                b(null, 140);
                return;
            case 162:
                r2 = ldr(sp + 28);
                r3 = lsls(r6, 2);
                r1 = ldr(r3 + r2);
                r0 = ldr(r4 + 40);
                r1 = lsrs(r1, 4);
                r2 = movs(r2, 0);
                lr = compile_decorated + 178 | 1;
                bl(this::mp_emit_bc_attr, 178);
                return;
            case 178:
                r6 = adds(r6, 1);
                b(null, 104);
                return;
            case 182:
                cmp(r3, 65);
                if (bne(null, 234)) return;
            case 186:
                r6 = ldr(r1 + 8);
                r2 = movs(r2, r5);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_decorated + 198 | 1;
                bl(this::compile_funcdef_helper, 198);
                return;
            case 198:
                r3 = movs(r3, 4);
                r5 = movs(r5, r0);
                r2 = ldr(r6 + 24);
                r1 = ldrb(r2 + 24);
                r3 = orrs(r3, r1);
                strb(r2 + 24, r3);
            case 210:
                r6 = movs(r6, 0);
            case 212:
                r3 = ldr(sp + 8);
                r2 = ldr(sp + 4);
                r3 = subs(r3, r2);
                cmp(r3, r6);
                if (bgt(null, 244)) return;
            case 222:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_decorated + 230 | 1;
                bl(this::compile_store_id, 230);
                return;
            case 230:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 234:
                r2 = movs(r2, r5);
                r0 = movs(r0, r4);
                lr = compile_decorated + 242 | 1;
                bl(this::compile_classdef_helper, 242);
                return;
            case 242:
                b(null, 56);
                return;
            case 244:
                r3 = movs(r3, 0);
                r1 = movs(r1, 1);
                r2 = movs(r2, r3);
                r0 = ldr(r4 + 40);
                lr = compile_decorated + 256 | 1;
                bl(this::mp_emit_bc_call_function, 256);
                return;
            case 256:
                r6 = adds(r6, 1);
                b(null, 212);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134240248, size=304, name='compile_atom_brace', path='build/py/compile.o', has_indirect=False)
    protected void compile_atom_brace(int offset) throws Exception
    {
        pc = compile_atom_brace + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = ldr(r1 + 8);
                sp = sub(sp, 20);
                r4 = movs(r4, r0);
                cmp(r5, 0);
                if (bne(null, 24)) return;
            case 12:
                r2 = movs(r2, 3);
                r1 = movs(r1, r5);
            case 16:
                r0 = ldr(r4 + 40);
                lr = compile_atom_brace + 22 | 1;
                bl(this::mp_emit_bc_build, 22);
                return;
            case 22:
                b(null, 66);
                return;
            case 24:
                r6 = movs(r6, 3);
                tst(r5, r6);
                if (beq(null, 32)) return;
            case 30:
                b(null, 282);
                return;
            case 32:
                r7 = movs(r7, 255);
                r3 = ldr(r5 + 4);
                r3 = ands(r3, r7);
                cmp(r3, 54);
                if (bne(null, 70)) return;
            case 42:
                r2 = movs(r2, r6);
                r1 = movs(r1, 1);
                r0 = ldr(r0 + 40);
                lr = compile_atom_brace + 52 | 1;
                bl(this::mp_emit_bc_build, 52);
                return;
            case 52:
                r0 = movs(r0, r4);
                r1 = movs(r1, r5);
                lr = compile_atom_brace + 60 | 1;
                bl(this::compile_node, 60);
                return;
            case 60:
                r0 = ldr(r4 + 40);
                lr = compile_atom_brace + 66 | 1;
                bl(this::mp_emit_bc_store_map, 66);
                return;
            case 66:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 70:
                cmp(r3, 157);
                if (bne(null, 282)) return;
            case 74:
                r0 = ldr(r5 + 12);
                r3 = ldr(r0 + 4);
                r3 = ands(r3, r7);
                cmp(r3, 160);
                if (bne(null, 250)) return;
            case 84:
                r1 = movs(r1, 161);
                r0 = adds(r0, 8);
                r2 = add(sp, 12);
                lr = compile_atom_brace + 94 | 1;
                bl(this::mp_parse_node_extract_list, 94);
                return;
            case 94:
                r1 = ldr(r5 + 8);
                str(sp + 4, r0);
                cmp(r1, 0);
                if (beq(null, 164)) return;
            case 102:
                tst(r1, r6);
                if (bne(null, 164)) return;
            case 106:
                r3 = ldr(r1 + 4);
                r7 = ands(r7, r3);
                cmp(r7, 54);
                if (bne(null, 164)) return;
            case 114:
                r1 = adds(r0, 1);
                r2 = movs(r2, r6);
                r0 = ldr(r4 + 40);
                lr = compile_atom_brace + 124 | 1;
                bl(this::mp_emit_bc_build, 124);
                return;
            case 124:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 132 | 1;
                bl(this::compile_node, 132);
                return;
            case 132:
                r0 = ldr(r4 + 40);
                lr = compile_atom_brace + 138 | 1;
                bl(this::mp_emit_bc_store_map, 138);
                return;
            case 138:
                r3 = movs(r3, 1);
            case 140:
                r6 = movs(r6, 0);
                str(sp, r3);
            case 144:
                r3 = ldr(sp + 4);
                cmp(r6, r3);
                if (blt(null, 174)) return;
            case 150:
                r3 = ldr(sp);
                cmp(r3, 0);
                if (bne(null, 66)) return;
            case 156:
                r1 = ldr(sp + 4);
                r2 = movs(r2, 6);
                r1 = adds(r1, 1);
                b(null, 16);
                return;
            case 164:
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 170 | 1;
                bl(this::compile_node, 170);
                return;
            case 170:
                r3 = movs(r3, 0);
                b(null, 140);
                return;
            case 174:
                r7 = movs(r7, 0);
                r2 = ldr(sp + 12);
                r3 = lsls(r6, 2);
                r1 = ldr(r3 + r2);
                cmp(r1, r7);
                if (beq(null, 204)) return;
            case 186:
                r3 = movs(r3, 3);
                tst(r1, r3);
                if (bne(null, 204)) return;
            case 192:
                r7 = ldr(r1 + 4);
                r3 = adds(r3, 252);
                r7 = ands(r7, r3);
                r7 = subs(r7, 54);
                r3 = rsbs(r7, 0);
                r7 = adcs(r7, r3);
            case 204:
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 210 | 1;
                bl(this::compile_node, 210);
                return;
            case 210:
                r3 = ldr(sp);
                cmp(r3, 0);
                if (beq(null, 242)) return;
            case 216:
                cmp(r7, 0);
                if (bne(null, 232)) return;
            case 220:
                r2 = compile_atom_brace_str1_1;
            case 222:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 230 | 1;
                bl(this::compile_syntax_error, 230);
                return;
            case 230:
                b(null, 66);
                return;
            case 232:
                r0 = ldr(r4 + 40);
                lr = compile_atom_brace + 238 | 1;
                bl(this::mp_emit_bc_store_map, 238);
                return;
            case 238:
                r6 = adds(r6, 1);
                b(null, 144);
                return;
            case 242:
                cmp(r7, 0);
                if (beq(null, 238)) return;
            case 246:
                r2 = 0x080222c1;
                b(null, 222);
                return;
            case 250:
                r3 = ldr(r5 + 8);
                cmp(r3, 0);
                if (beq(null, 270)) return;
            case 256:
                tst(r3, r6);
                if (bne(null, 270)) return;
            case 260:
                r3 = ldr(r3 + 4);
                r2 = movs(r2, 4);
                r7 = ands(r7, r3);
                cmp(r7, 54);
                if (beq(null, 272)) return;
            case 270:
                r2 = movs(r2, 5);
            case 272:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 280 | 1;
                bl(this::compile_comprehension, 280);
                return;
            case 280:
                b(null, 66);
                return;
            case 282:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_atom_brace + 290 | 1;
                bl(this::compile_node, 290);
                return;
            case 290:
                r2 = movs(r2, 6);
                r1 = movs(r1, 1);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134240552, size=164, name='compile_funcdef_lambdef_param', path='build/py/compile.o', has_indirect=True)
    protected void compile_funcdef_lambdef_param(int offset) throws Exception
    {
        pc = compile_funcdef_lambdef_param + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 15);
                push(true, r4, r5, r6);
                r3 = ands(r3, r1);
                r4 = movs(r4, r0);
                cmp(r3, 2);
                if (beq(null, 44)) return;
            case 12:
                r2 = movs(r2, 247);
                r3 = ldr(r1 + 4);
                r2 = ands(r2, r3);
                cmp(r2, 70);
                if (bne(null, 28)) return;
            case 22:
                r3 = movs(r3, 1);
                strb(r0 + 6, r3);
            case 26:
                pop(true, R4, R5, R6);
                return;
            case 28:
                cmp(r2, 71);
                if (beq(null, 26)) return;
            case 32:
                r3 = uxtb(r3);
                cmp(r3, 69);
                if (bne(null, 66)) return;
            case 38:
                r5 = ldr(r1 + 16);
            case 40:
                cmp(r5, 0);
                if (bne(null, 70)) return;
            case 44:
                r3 = ldrb(r4 + 6);
                cmp(r3, 0);
                if (bne(null, 26)) return;
            case 50:
                r3 = ldrh(r4 + 22);
                cmp(r3, 0);
                if (beq(null, 26)) return;
            case 56:
                r2 = compile_funcdef_lambdef_param_str1_1;
                r0 = movs(r0, r4);
                lr = compile_funcdef_lambdef_param + 64 | 1;
                bl(this::compile_syntax_error, 64);
                return;
            case 64:
                b(null, 26);
                return;
            case 66:
                r5 = ldr(r1 + 12);
                b(null, 40);
                return;
            case 70:
                r3 = ldrb(r4 + 6);
                cmp(r3, 0);
                if (beq(null, 144)) return;
            case 76:
                r3 = ldrh(r4 + 20);
                r6 = ldr(r1 + 8);
                r3 = adds(r3, 1);
                r3 = uxth(r3);
                strh(r4 + 20, r3);
                cmp(r3, 1);
                if (bne(null, 114)) return;
            case 90:
                r1 = ldrh(r4 + 22);
                r0 = ldr(r4 + 40);
                cmp(r1, 0);
                if (beq(null, 138)) return;
            case 98:
                r2 = movs(r2, 0);
                lr = compile_funcdef_lambdef_param + 104 | 1;
                bl(this::mp_emit_bc_build, 104);
                return;
            case 104:
                r2 = movs(r2, 3);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_funcdef_lambdef_param + 114 | 1;
                bl(this::mp_emit_bc_build, 114);
                return;
            case 114:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_funcdef_lambdef_param + 122 | 1;
                bl(this::compile_node, 122);
                return;
            case 122:
                r0 = ldr(r4 + 40);
                r1 = lsrs(r6, 4);
                lr = compile_funcdef_lambdef_param + 130 | 1;
                bl(this::mp_emit_bc_load_const_str, 130);
                return;
            case 130:
                r0 = ldr(r4 + 40);
                lr = compile_funcdef_lambdef_param + 136 | 1;
                bl(this::mp_emit_bc_store_map, 136);
                return;
            case 136:
                b(null, 26);
                return;
            case 138:
                lr = compile_funcdef_lambdef_param + 142 | 1;
                bl(this::mp_emit_bc_load_null, 142);
                return;
            case 142:
                b(null, 104);
                return;
            case 144:
                r3 = ldrh(r4 + 22);
                r1 = movs(r1, r5);
                r3 = adds(r3, 1);
                strh(r4 + 22, r3);
                r0 = movs(r0, r4);
                lr = compile_funcdef_lambdef_param + 158 | 1;
                bl(this::compile_node, 158);
                return;
            case 158:
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134240716, size=300, name='compile_atom_expr_normal', path='build/py/compile.o', has_indirect=False)
    protected void compile_atom_expr_normal(int offset) throws Exception
    {
        pc = compile_atom_expr_normal + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r7 = movs(r7, r1);
                r1 = ldr(r1 + 8);
                r4 = movs(r4, r0);
                lr = compile_atom_expr_normal + 12 | 1;
                bl(this::compile_node, 12);
                return;
            case 12:
                r5 = ldr(r7 + 12);
                cmp(r5, 0);
                if (beq(null, 110)) return;
            case 18:
                r3 = ldr(r5 + 4);
                r2 = uxtb(r3);
                cmp(r2, 140);
                if (beq(null, 112)) return;
            case 26:
                r5 = movs(r5, r7);
                r3 = movs(r3, 1);
                r5 = adds(r5, 12);
                str(sp, r3);
            case 34:
                r3 = ldr(r4 + 36);
                r6 = movs(r6, 0);
                r3 = ldrb(r3);
                cmp(r3, 7);
                if (bne(null, 210)) return;
            case 44:
                r2 = movs(r2, 15);
                r3 = ldr(r7 + 8);
                r2 = ands(r2, r3);
                cmp(r2, 2);
                if (bne(null, 210)) return;
            case 54:
                r2 = adds(r2, 255);
                r2 = adds(r2, 255);
                r3 = lsrs(r3, 4);
                cmp(r3, r2);
                if (bne(null, 210)) return;
            case 64:
                r2 = ldr(r5);
                r3 = ldr(r2 + 4);
                r3 = uxtb(r3);
                cmp(r3, 47);
                if (bne(null, 210)) return;
            case 74:
                r3 = ldr(r2 + 8);
                cmp(r3, r6);
                if (bne(null, 210)) return;
            case 80:
                r1 = movs(r1, 13);
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 88 | 1;
                bl(this::compile_load_id, 88);
                return;
            case 88:
                r1 = movs(r1, 1);
                r2 = ldr(r4 + 36);
                r3 = ldr(r2 + 44);
                r2 = ldrh(r2 + 40);
            case 96:
                cmp(r2, 0);
                if (bne(null, 120)) return;
            case 100:
                r2 = compile_atom_expr_normal_str1_1;
                r1 = ldr(r5);
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 110 | 1;
                bl(this::compile_syntax_error, 110);
                return;
            case 110:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 112:
                r3 = lsrs(r3, 8);
                str(sp, r3);
                r5 = adds(r5, 8);
                b(null, 34);
                return;
            case 120:
                r0 = ldrb(r3 + 1);
                tst(r0, r1);
                if (beq(null, 156)) return;
            case 126:
                r1 = ldr(r3 + 4);
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 134 | 1;
                bl(this::compile_load_id, 134);
                return;
            case 134:
                r3 = ldr(sp);
                cmp(r3, 2);
                if (bhi(null, 162)) return;
            case 140:
                r3 = movs(r3, 0);
                r1 = movs(r1, 2);
                r2 = movs(r2, r3);
                r0 = ldr(r4 + 40);
                lr = compile_atom_expr_normal + 152 | 1;
                bl(this::mp_emit_bc_call_function, 152);
                return;
            case 152:
                r6 = movs(r6, 1);
                b(null, 210);
                return;
            case 156:
                r2 = subs(r2, 1);
                r3 = adds(r3, 8);
                b(null, 96);
                return;
            case 162:
                r3 = movs(r3, 255);
                r1 = ldr(r5 + 4);
                r2 = ldr(r1 + 4);
                r2 = ands(r2, r3);
                cmp(r2, 49);
                if (bne(null, 140)) return;
            case 174:
                r6 = ldr(r5 + 8);
                r2 = ldr(r6 + 4);
                r3 = ands(r3, r2);
                cmp(r3, 47);
                if (bne(null, 140)) return;
            case 184:
                r1 = ldr(r1 + 8);
                r2 = movs(r2, 1);
                r1 = lsrs(r1, 4);
                r0 = ldr(r4 + 40);
                lr = compile_atom_expr_normal + 196 | 1;
                bl(this::mp_emit_bc_load_method, 196);
                return;
            case 196:
                r1 = ldr(r6 + 8);
                r3 = movs(r3, 0);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 208 | 1;
                bl(this::compile_trailer_paren_helper, 208);
                return;
            case 208:
                r6 = movs(r6, 3);
            case 210:
                r3 = ldr(sp);
                cmp(r3, r6);
                if (bls(null, 110)) return;
            case 216:
                r3 = adds(r6, 1);
                r0 = ldr(sp);
                str(sp + 4, r3);
                r2 = adds(r6, 1);
                r3 = lsls(r6, 2);
                r1 = ldr(r5 + r3);
                cmp(r2, r0);
                if (bhs(null, 284)) return;
            case 232:
                r0 = movs(r0, 255);
                r2 = ldr(r1 + 4);
                r2 = ands(r2, r0);
                cmp(r2, 49);
                if (bne(null, 284)) return;
            case 242:
                r3 = adds(r5, r3);
                r7 = ldr(r3 + 4);
                r3 = ldr(r7 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 47);
                if (bne(null, 284)) return;
            case 254:
                r1 = ldr(r1 + 8);
                r2 = movs(r2, 0);
                r1 = lsrs(r1, 4);
                r0 = ldr(r4 + 40);
                lr = compile_atom_expr_normal + 266 | 1;
                bl(this::mp_emit_bc_load_method, 266);
                return;
            case 266:
                r3 = movs(r3, 0);
                r2 = movs(r2, 1);
                r1 = ldr(r7 + 8);
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 278 | 1;
                bl(this::compile_trailer_paren_helper, 278);
                return;
            case 278:
                r6 = ldr(sp + 4);
                r6 = adds(r6, 1);
                b(null, 210);
                return;
            case 284:
                r0 = movs(r0, r4);
                lr = compile_atom_expr_normal + 290 | 1;
                bl(this::compile_node, 290);
                return;
            case 290:
                str(sp + 4, r6);
                b(null, 278);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241016, size=76, name='compile_term', path='build/py/compile.o', has_indirect=False)
    protected void compile_term(int offset) throws Exception
    {
        pc = compile_term + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r3 = ldr(r1 + 4);
                r4 = movs(r4, r1);
                r3 = lsrs(r3, 8);
                r1 = ldr(r1 + 8);
                r6 = movs(r6, r0);
                str(sp + 4, r3);
                r5 = movs(r5, 2);
                lr = compile_term + 20 | 1;
                bl(this::compile_node, 20);
                return;
            case 20:
                r7 = movs(r7, 25);
                r4 = adds(r4, 12);
            case 24:
                r3 = ldr(sp + 4);
                cmp(r3, r5);
                if (bgt(null, 32)) return;
            case 30:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 32:
                r1 = ldr(r4 + 4);
                r0 = movs(r0, r6);
                lr = compile_term + 40 | 1;
                bl(this::compile_node, 40);
                return;
            case 40:
                r2 = movs(r2, 255);
                r3 = ldr(r4);
                r1 = movs(r1, r7);
                r3 = lsrs(r3, 4);
                r3 = ands(r3, r2);
                r3 = subs(r3, 49);
                cmp(r3, 8);
                if (bhi(null, 60)) return;
            case 56:
                r2 = CSWTCH_222;
                r1 = ldrb(r2 + r3);
            case 60:
                r0 = ldr(r6 + 40);
                lr = compile_term + 66 | 1;
                bl(this::mp_emit_bc_binary_op, 66);
                return;
            case 66:
                r5 = adds(r5, 2);
                r4 = adds(r4, 8);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241092, size=58, name='compile_binary_op', path='build/py/compile.o', has_indirect=False)
    protected void compile_binary_op(int offset) throws Exception
    {
        pc = compile_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r3 = ldr(r1 + 4);
                r7 = movs(r7, r1);
                r5 = movs(r5, r3);
                r1 = ldr(r1 + 8);
                r3 = lsrs(r3, 8);
                r6 = movs(r6, r0);
                str(sp + 4, r3);
                r4 = movs(r4, 1);
                lr = compile_binary_op + 22 | 1;
                bl(this::compile_node, 22);
                return;
            case 22:
                r5 = subs(r5, 13);
                r5 = uxtb(r5);
            case 26:
                r3 = ldr(sp + 4);
                cmp(r4, r3);
                if (blt(null, 34)) return;
            case 32:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 34:
                r3 = lsls(r4, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r6);
                lr = compile_binary_op + 46 | 1;
                bl(this::compile_node, 46);
                return;
            case 46:
                r1 = movs(r1, r5);
                r0 = ldr(r6 + 40);
                lr = compile_binary_op + 54 | 1;
                bl(this::mp_emit_bc_binary_op, 54);
                return;
            case 54:
                r4 = adds(r4, 1);
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241152, size=440, name='compile_expr_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_expr_stmt(int offset) throws Exception
    {
        pc = compile_expr_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = ldr(r1 + 12);
                r4 = movs(r4, r0);
                r7 = movs(r7, r1);
                cmp(r5, 0);
                if (bne(null, 86)) return;
            case 12:
                r3 = ldrb(r0 + 4);
                cmp(r3, 0);
                if (beq(null, 60)) return;
            case 18:
                r3 = ldr(r0 + 36);
                r5 = ldrb(r3);
                cmp(r5, 0);
                if (bne(null, 60)) return;
            case 26:
                r1 = movs(r1, 68);
                lr = compile_expr_stmt + 32 | 1;
                bl(this::compile_load_id, 32);
                return;
            case 32:
                r1 = ldr(r7 + 8);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 40 | 1;
                bl(this::compile_node, 40);
                return;
            case 40:
                r3 = movs(r3, r5);
                r2 = movs(r2, r5);
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 52 | 1;
                bl(this::mp_emit_bc_call_function, 52);
                return;
            case 52:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 58 | 1;
                bl(this::mp_emit_bc_pop_top, 58);
                return;
            case 58:
                b(null, 432);
                return;
            case 60:
                r1 = ldr(r7 + 8);
                r3 = lsls(r1, 30);
                if (bne(null, 68)) return;
            case 66:
                b(null, 416);
                return;
            case 68:
                r3 = movs(r3, 15);
                r3 = ands(r3, r1);
                cmp(r3, 2);
                if (beq(null, 78)) return;
            case 76:
                b(null, 432);
                return;
            case 78:
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 84 | 1;
                bl(this::compile_node, 84);
                return;
            case 84:
                b(null, 52);
                return;
            case 86:
                r0 = movs(r0, 3);
                tst(r5, r0);
                if (beq(null, 94)) return;
            case 92:
                b(null, 404);
                return;
            case 94:
                r3 = ldr(r5 + 4);
                r1 = movs(r1, 255);
                r2 = movs(r2, r3);
                r2 = ands(r2, r1);
                cmp(r2, 86);
                if (bne(null, 152)) return;
            case 106:
                r2 = subs(r2, 85);
                r1 = ldr(r7 + 8);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 116 | 1;
                bl(this::c_assign, 116);
                return;
            case 116:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 124 | 1;
                bl(this::compile_node, 124);
                return;
            case 124:
                r3 = ldr(r5 + 8);
                r1 = movs(r1, 20);
                r3 = lsrs(r3, 4);
                r3 = subs(r3, 80);
                cmp(r3, 10);
                if (bhi(null, 140)) return;
            case 136:
                r2 = CSWTCH_225;
                r1 = ldrb(r2 + r3);
            case 140:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 146 | 1;
                bl(this::mp_emit_bc_binary_op, 146);
                return;
            case 146:
                r2 = movs(r2, 2);
            case 148:
                r1 = ldr(r7 + 8);
                b(null, 396);
                return;
            case 152:
                cmp(r2, 87);
                if (bne(null, 226)) return;
            case 156:
                r3 = lsrs(r3, 8);
                r6 = subs(r3, 1);
                r3 = adds(r3, 1);
                r3 = lsls(r3, 2);
                r1 = ldr(r3 + r5);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 172 | 1;
                bl(this::compile_node, 172);
                return;
            case 172:
                cmp(r6, 0);
                if (ble(null, 182)) return;
            case 176:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 182 | 1;
                bl(this::mp_emit_bc_dup_top, 182);
                return;
            case 182:
                r1 = ldr(r7 + 8);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 192 | 1;
                bl(this::c_assign, 192);
                return;
            case 192:
                r7 = movs(r7, 0);
            case 194:
                cmp(r7, r6);
                if (bge(null, 432)) return;
            case 198:
                r7 = adds(r7, 1);
                cmp(r7, r6);
                if (bge(null, 210)) return;
            case 204:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 210 | 1;
                bl(this::mp_emit_bc_dup_top, 210);
                return;
            case 210:
                r3 = lsls(r7, 2);
                r3 = adds(r5, r3);
                r2 = movs(r2, 0);
                r1 = ldr(r3 + 4);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 224 | 1;
                bl(this::c_assign, 224);
                return;
            case 224:
                b(null, 194);
                return;
            case 226:
                cmp(r2, 6);
                if (bne(null, 404)) return;
            case 230:
                r6 = ldr(r7 + 8);
                cmp(r6, 0);
                if (beq(null, 404)) return;
            case 236:
                tst(r6, r0);
                if (bne(null, 404)) return;
            case 240:
                r2 = ldr(r6 + 4);
                r1 = ands(r1, r2);
                cmp(r1, 6);
                if (bne(null, 404)) return;
            case 248:
                r3 = lsrs(r3, 8);
                str(sp + 4, r3);
                r2 = lsrs(r2, 8);
                cmp(r3, r2);
                if (bne(null, 404)) return;
            case 258:
                r3 = subs(r3, 2);
                cmp(r3, 1);
                if (bhi(null, 404)) return;
            case 264:
                r3 = ldr(r6 + 8);
                cmp(r3, 0);
                if (beq(null, 282)) return;
            case 270:
                r2 = lsls(r3, 30);
                if (bne(null, 282)) return;
            case 274:
                r3 = ldr(r3 + 4);
                r3 = uxtb(r3);
                cmp(r3, 33);
                if (beq(null, 404)) return;
            case 282:
                r3 = ldr(r6 + 12);
                cmp(r3, 0);
                if (beq(null, 300)) return;
            case 288:
                r2 = lsls(r3, 30);
                if (bne(null, 300)) return;
            case 292:
                r3 = ldr(r3 + 4);
                r3 = uxtb(r3);
                cmp(r3, 33);
                if (beq(null, 404)) return;
            case 300:
                r3 = ldr(sp + 4);
                cmp(r3, 2);
                if (beq(null, 324)) return;
            case 306:
                r3 = ldr(r6 + 16);
                cmp(r3, 0);
                if (beq(null, 324)) return;
            case 312:
                r2 = lsls(r3, 30);
                if (bne(null, 324)) return;
            case 316:
                r3 = ldr(r3 + 4);
                r3 = uxtb(r3);
                cmp(r3, 33);
                if (beq(null, 404)) return;
            case 324:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 332 | 1;
                bl(this::compile_node, 332);
                return;
            case 332:
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 340 | 1;
                bl(this::compile_node, 340);
                return;
            case 340:
                r3 = ldr(sp + 4);
                cmp(r3, 3);
                if (bne(null, 360)) return;
            case 346:
                r0 = movs(r0, r4);
                r1 = ldr(r5 + 16);
                lr = compile_expr_stmt + 354 | 1;
                bl(this::compile_node, 354);
                return;
            case 354:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 360 | 1;
                bl(this::mp_emit_bc_rot_three, 360);
                return;
            case 360:
                r0 = ldr(r4 + 40);
                lr = compile_expr_stmt + 366 | 1;
                bl(this::mp_emit_bc_rot_two, 366);
                return;
            case 366:
                r2 = movs(r2, 0);
                r1 = ldr(r6 + 8);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 376 | 1;
                bl(this::c_assign, 376);
                return;
            case 376:
                r2 = movs(r2, 0);
                r1 = ldr(r6 + 12);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 386 | 1;
                bl(this::c_assign, 386);
                return;
            case 386:
                r3 = ldr(sp + 4);
                cmp(r3, 3);
                if (bne(null, 432)) return;
            case 392:
                r2 = movs(r2, 0);
                r1 = ldr(r6 + 16);
            case 396:
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 402 | 1;
                bl(this::c_assign, 402);
                return;
            case 402:
                b(null, 432);
                return;
            case 404:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_expr_stmt + 412 | 1;
                bl(this::compile_node, 412);
                return;
            case 412:
                r2 = movs(r2, 0);
                b(null, 148);
                return;
            case 416:
                cmp(r1, 0);
                if (bne(null, 422)) return;
            case 420:
                b(null, 78);
                return;
            case 422:
                r3 = ldr(r1 + 4);
                r3 = uxtb(r3);
                cmp(r3, 57);
                if (beq(null, 432)) return;
            case 430:
                b(null, 78);
                return;
            case 432:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241592, size=42, name='compile_factor_2', path='build/py/compile.o', has_indirect=False)
    protected void compile_factor_2(int offset) throws Exception
    {
        pc = compile_factor_2 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r1 = ldr(r1 + 12);
                r4 = movs(r4, r0);
                lr = compile_factor_2 + 12 | 1;
                bl(this::compile_node, 12);
                return;
            case 12:
                r3 = ldr(r5 + 8);
                r1 = movs(r1, 0);
                r3 = lsrs(r3, 4);
                r3 = uxtb(r3);
                cmp(r3, 49);
                if (beq(null, 34)) return;
            case 24:
                r3 = subs(r3, 50);
                r1 = movs(r1, r3);
                r3 = subs(r1, 1);
                r1 = sbcs(r1, r3);
                r1 = adds(r1, 1);
            case 34:
                r0 = ldr(r4 + 40);
                lr = compile_factor_2 + 40 | 1;
                bl(this::mp_emit_bc_unary_op, 40);
                return;
            case 40:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241634, size=20, name='compile_not_test_2', path='build/py/compile.o', has_indirect=False)
    protected void compile_not_test_2(int offset) throws Exception
    {
        pc = compile_not_test_2 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r1 = ldr(r1 + 8);
                lr = compile_not_test_2 + 10 | 1;
                bl(this::compile_node, 10);
                return;
            case 10:
                r1 = movs(r1, 3);
                r0 = ldr(r4 + 40);
                lr = compile_not_test_2 + 18 | 1;
                bl(this::mp_emit_bc_unary_op, 18);
                return;
            case 18:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241654, size=80, name='compile_or_and_test', path='build/py/compile.o', has_indirect=False)
    protected void compile_or_and_test(int offset) throws Exception
    {
        pc = compile_or_and_test + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r2 = ldr(r1 + 4);
                r7 = movs(r7, r1);
                r3 = uxtb(r2);
                r3 = subs(r3, 29);
                r1 = rsbs(r3, 0);
                r3 = adcs(r3, r1);
                r4 = movs(r4, r0);
                r5 = movs(r5, 0);
                r6 = ldr(r0 + 16);
                r3 = uxtb(r3);
                str(sp + 4, r3);
                r3 = adds(r6, 1);
                str(r0 + 16, r3);
                r3 = lsrs(r2, 8);
                str(sp, r3);
            case 32:
                r3 = ldr(sp);
                cmp(r5, r3);
                if (blt(null, 48)) return;
            case 38:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_or_and_test + 46 | 1;
                bl(this::mp_emit_bc_label_assign, 46);
                return;
            case 46:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 48:
                r3 = lsls(r5, 2);
                r3 = adds(r7, r3);
                r1 = ldr(r3 + 8);
                r0 = movs(r0, r4);
                lr = compile_or_and_test + 60 | 1;
                bl(this::compile_node, 60);
                return;
            case 60:
                r3 = ldr(sp);
                r5 = adds(r5, 1);
                cmp(r5, r3);
                if (bge(null, 32)) return;
            case 68:
                r2 = movs(r2, r6);
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_or_and_test + 78 | 1;
                bl(this::mp_emit_bc_jump_if_or_pop, 78);
                return;
            case 78:
                b(null, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241736, size=200, name='compile_comparison', path='build/py/compile.o', has_indirect=False)
    protected void compile_comparison(int offset) throws Exception
    {
        pc = compile_comparison + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r1 + 4);
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                r1 = ldr(r1 + 8);
                r6 = lsrs(r3, 8);
                r4 = movs(r4, r0);
                lr = compile_comparison + 16 | 1;
                bl(this::compile_node, 16);
                return;
            case 16:
                r3 = movs(r3, 0);
                str(sp + 4, r3);
                cmp(r6, 3);
                if (bls(null, 32)) return;
            case 24:
                r3 = ldr(r4 + 16);
                str(sp + 4, r3);
                r3 = adds(r3, 1);
                str(r4 + 16, r3);
            case 32:
                r7 = movs(r7, 1);
                r5 = adds(r5, 12);
            case 36:
                r3 = adds(r7, 1);
                cmp(r3, r6);
                if (blt(null, 98)) return;
            case 42:
                cmp(r6, 3);
                if (ble(null, 96)) return;
            case 46:
                r5 = ldr(r4 + 16);
                r0 = ldr(r4 + 40);
                r3 = adds(r5, 1);
                str(r4 + 16, r3);
                r1 = movs(r1, r5);
                lr = compile_comparison + 60 | 1;
                bl(this::mp_emit_bc_jump, 60);
                return;
            case 60:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 68 | 1;
                bl(this::mp_emit_bc_label_assign, 68);
                return;
            case 68:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 76 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 76);
                return;
            case 76:
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 82 | 1;
                bl(this::mp_emit_bc_rot_two, 82);
                return;
            case 82:
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 88 | 1;
                bl(this::mp_emit_bc_pop_top, 88);
                return;
            case 88:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 96 | 1;
                bl(this::mp_emit_bc_label_assign, 96);
                return;
            case 96:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 98:
                r1 = ldr(r5 + 4);
                r0 = movs(r0, r4);
                r7 = adds(r7, 2);
                lr = compile_comparison + 108 | 1;
                bl(this::compile_node, 108);
                return;
            case 108:
                cmp(r7, r6);
                if (bge(null, 124)) return;
            case 112:
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 118 | 1;
                bl(this::mp_emit_bc_dup_top, 118);
                return;
            case 118:
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 124 | 1;
                bl(this::mp_emit_bc_rot_three, 124);
                return;
            case 124:
                r2 = movs(r2, 15);
                r3 = ldr(r5);
                r0 = ldr(r4 + 40);
                r2 = ands(r2, r3);
                cmp(r2, 14);
                if (bne(null, 172)) return;
            case 136:
                r3 = lsrs(r3, 4);
                r3 = subs(r3, 56);
                r1 = movs(r1, 6);
                cmp(r3, 11);
                if (bhi(null, 150)) return;
            case 146:
                r2 = CSWTCH_230;
                r1 = ldrb(r2 + r3);
            case 150:
                lr = compile_comparison + 154 | 1;
                bl(this::mp_emit_bc_binary_op, 154);
                return;
            case 154:
                cmp(r7, r6);
                if (bge(null, 168)) return;
            case 158:
                r2 = ldr(sp + 4);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_comparison + 168 | 1;
                bl(this::mp_emit_bc_jump_if_or_pop, 168);
                return;
            case 168:
                r5 = adds(r5, 8);
                b(null, 36);
                return;
            case 172:
                r1 = movs(r1, 255);
                r2 = ldr(r3 + 4);
                r2 = ands(r2, r1);
                r1 = subs(r1, 207);
                cmp(r2, 131);
                if (beq(null, 150)) return;
            case 184:
                r3 = ldr(r3 + 8);
                r1 = movs(r1, 7);
                cmp(r3, 0);
                if (beq(null, 150)) return;
            case 192:
                r1 = movs(r1, 49);
                b(null, 150);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134241936, size=80, name='compile_test_if_expr', path='build/py/compile.o', has_indirect=False)
    protected void compile_test_if_expr(int offset) throws Exception
    {
        pc = compile_test_if_expr + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r7 = movs(r7, r1);
                r5 = ldr(r0 + 16);
                r6 = ldr(r1 + 12);
                r3 = adds(r5, 1);
                str(sp + 4, r3);
                r3 = adds(r5, 2);
                str(r0 + 16, r3);
                r2 = movs(r2, 0);
                r3 = movs(r3, r5);
                r1 = ldr(r6 + 8);
                lr = compile_test_if_expr + 28 | 1;
                bl(this::c_if_cond, 28);
                return;
            case 28:
                r1 = ldr(r7 + 8);
                r0 = movs(r0, r4);
                lr = compile_test_if_expr + 36 | 1;
                bl(this::compile_node, 36);
                return;
            case 36:
                r1 = adds(r5, 1);
                r0 = ldr(r4 + 40);
                lr = compile_test_if_expr + 44 | 1;
                bl(this::mp_emit_bc_jump, 44);
                return;
            case 44:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_test_if_expr + 52 | 1;
                bl(this::mp_emit_bc_label_assign, 52);
                return;
            case 52:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                r1 = rsbs(r1, 0);
                lr = compile_test_if_expr + 62 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 62);
                return;
            case 62:
                r1 = ldr(r6 + 12);
                r0 = movs(r0, r4);
                lr = compile_test_if_expr + 70 | 1;
                bl(this::compile_node, 70);
                return;
            case 70:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_test_if_expr + 78 | 1;
                bl(this::mp_emit_bc_label_assign, 78);
                return;
            case 78:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134242016, size=672, name='compile_for_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_for_stmt(int offset) throws Exception
    {
        pc = compile_for_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                r1 = movs(r1, 15);
                r3 = ldr(r5 + 8);
                sp = sub(sp, 60);
                r4 = movs(r4, r0);
                r3 = ands(r3, r1);
                cmp(r3, 2);
                if (beq(null, 20)) return;
            case 18:
                b(null, 514);
                return;
            case 20:
                r3 = ldr(r5 + 12);
                cmp(r3, 0);
                if (bne(null, 28)) return;
            case 26:
                b(null, 514);
                return;
            case 28:
                r7 = movs(r7, 3);
                tst(r3, r7);
                if (beq(null, 36)) return;
            case 34:
                b(null, 514);
                return;
            case 36:
                r0 = movs(r0, 255);
                r2 = ldr(r3 + 4);
                r2 = ands(r2, r0);
                cmp(r2, 43);
                if (beq(null, 48)) return;
            case 46:
                b(null, 514);
                return;
            case 48:
                r2 = ldr(r3 + 8);
                r1 = ands(r1, r2);
                cmp(r1, 2);
                if (beq(null, 58)) return;
            case 56:
                b(null, 514);
                return;
            case 58:
                r1 = adds(r1, 191);
                r1 = adds(r1, 255);
                r2 = lsrs(r2, 4);
                cmp(r2, r1);
                if (beq(null, 70)) return;
            case 68:
                b(null, 514);
                return;
            case 70:
                r2 = ldr(r3 + 12);
                r3 = ldr(r2 + 4);
                r0 = ands(r0, r3);
                cmp(r0, 47);
                if (beq(null, 82)) return;
            case 80:
                b(null, 514);
                return;
            case 82:
                r3 = ldr(r2 + 8);
                r1 = subs(r1, 30);
                r2 = add(sp, 52);
                r1 = subs(r1, 255);
                r0 = add(sp, 48);
                str(sp + 48, r3);
                lr = compile_for_stmt + 98 | 1;
                bl(this::mp_parse_node_extract_list, 98);
                return;
            case 98:
                r3 = subs(r0, 1);
                cmp(r3, 2);
                if (bls(null, 106)) return;
            case 104:
                b(null, 514);
                return;
            case 106:
                r3 = ldr(sp + 52);
                r2 = ldr(r3);
                str(sp + 8, r2);
                cmp(r0, 1);
                if (beq(null, 146)) return;
            case 116:
                r6 = ldr(r3 + 4);
                cmp(r0, 2);
                if (bne(null, 124)) return;
            case 122:
                b(null, 662);
                return;
            case 124:
                r7 = ldr(r3 + 8);
                r3 = lsls(r7, 31);
                if (bmi(null, 132)) return;
            case 130:
                b(null, 514);
                return;
            case 132:
                r3 = asrs(r7, 1);
                if (bne(null, 138)) return;
            case 136:
                b(null, 514);
                return;
            case 138:
                r3 = ldr(sp + 8);
                cmp(r3, 0);
                if (beq(null, 174)) return;
            case 144:
                b(null, 150);
                return;
            case 146:
                r6 = ldr(sp + 8);
                str(sp + 8, r0);
            case 150:
                r3 = ldr(sp + 8);
                r3 = lsls(r3, 30);
                if (bne(null, 174)) return;
            case 156:
                r3 = ldr(sp + 8);
                r3 = ldr(r3 + 4);
                str(sp + 4, r3);
                r3 = mov(sp);
                r3 = ldrb(r3 + 4);
                r3 = subs(r3, 165);
                cmp(r3, 2);
                if (bhi(null, 174)) return;
            case 172:
                b(null, 514);
                return;
            case 174:
                cmp(r6, 0);
                if (beq(null, 194)) return;
            case 178:
                r3 = lsls(r6, 30);
                if (bne(null, 194)) return;
            case 182:
                r3 = ldr(r6 + 4);
                r3 = uxtb(r3);
                r3 = subs(r3, 165);
                cmp(r3, 2);
                if (bhi(null, 194)) return;
            case 192:
                b(null, 514);
                return;
            case 194:
                r3 = ldr(r5 + 8);
                str(sp + 28, r3);
                r3 = ldr(r5 + 16);
                str(sp + 32, r3);
                r3 = ldr(r5 + 20);
                str(sp + 16, r3);
                r3 = ldrh(r4 + 24);
                str(sp + 36, r3);
                r3 = ldrh(r4 + 26);
                str(sp + 40, r3);
                r3 = ldrh(r4 + 30);
                str(sp + 44, r3);
                r3 = ldr(r4 + 16);
                str(sp + 4, r3);
                r3 = adds(r3, 1);
                str(sp + 20, r3);
                r3 = ldr(sp + 4);
                r3 = adds(r3, 2);
                str(sp + 24, r3);
                r3 = ldr(sp + 4);
                strh(r4 + 24, r3);
                r3 = ldr(sp + 20);
                strh(r4 + 26, r3);
                r3 = ldrh(r4 + 28);
                strh(r4 + 30, r3);
                r3 = ldr(sp + 4);
                r5 = adds(r3, 3);
                r3 = adds(r3, 4);
                str(r4 + 16, r3);
                r3 = movs(r3, 1);
                r3 = ands(r3, r6);
                str(sp + 12, r3);
                if (bne(null, 268)) return;
            case 260:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 268 | 1;
                bl(this::compile_node, 268);
                return;
            case 268:
                r1 = ldr(sp + 8);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 276 | 1;
                bl(this::compile_node, 276);
                return;
            case 276:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 284 | 1;
                bl(this::mp_emit_bc_jump, 284);
                return;
            case 284:
                r1 = ldr(sp + 24);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 292 | 1;
                bl(this::mp_emit_bc_label_assign, 292);
                return;
            case 292:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 298 | 1;
                bl(this::mp_emit_bc_dup_top, 298);
                return;
            case 298:
                r2 = movs(r2, 0);
                r1 = ldr(sp + 28);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 308 | 1;
                bl(this::c_assign, 308);
                return;
            case 308:
                r1 = ldr(sp + 32);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 316 | 1;
                bl(this::compile_node, 316);
                return;
            case 316:
                r1 = ldr(sp + 20);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 324 | 1;
                bl(this::mp_emit_bc_label_assign, 324);
                return;
            case 324:
                r1 = movs(r1, r7);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 332 | 1;
                bl(this::compile_node, 332);
                return;
            case 332:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 340 | 1;
                bl(this::mp_emit_bc_binary_op, 340);
                return;
            case 340:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, r5);
                lr = compile_for_stmt + 348 | 1;
                bl(this::mp_emit_bc_label_assign, 348);
                return;
            case 348:
                r3 = ldr(sp + 12);
                r0 = ldr(r4 + 40);
                cmp(r3, 0);
                if (bne(null, 500)) return;
            case 356:
                lr = compile_for_stmt + 360 | 1;
                bl(this::mp_emit_bc_dup_top_two, 360);
                return;
            case 360:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 366 | 1;
                bl(this::mp_emit_bc_rot_two, 366);
                return;
            case 366:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 0);
                cmp(r7, 0);
                if (bge(null, 376)) return;
            case 374:
                r1 = movs(r1, 1);
            case 376:
                r5 = movs(r5, 0);
                lr = compile_for_stmt + 382 | 1;
                bl(this::mp_emit_bc_binary_op, 382);
                return;
            case 382:
                r2 = ldr(sp + 24);
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 392 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 392);
                return;
            case 392:
                r3 = ldr(sp + 36);
                strh(r4 + 24, r3);
                r3 = ldr(sp + 40);
                strh(r4 + 26, r3);
                r3 = ldr(sp + 44);
                strh(r4 + 30, r3);
                r3 = ldr(sp + 16);
                cmp(r3, r5);
                if (beq(null, 462)) return;
            case 410:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 416 | 1;
                bl(this::mp_emit_bc_pop_top, 416);
                return;
            case 416:
                r3 = ldr(sp + 12);
                cmp(r3, r5);
                if (bne(null, 428)) return;
            case 422:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 428 | 1;
                bl(this::mp_emit_bc_pop_top, 428);
                return;
            case 428:
                r1 = ldr(sp + 16);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 436 | 1;
                bl(this::compile_node, 436);
                return;
            case 436:
                r5 = ldr(r4 + 16);
                r0 = ldr(r4 + 40);
                r3 = adds(r5, 1);
                r1 = movs(r1, r5);
                str(r4 + 16, r3);
                lr = compile_for_stmt + 450 | 1;
                bl(this::mp_emit_bc_jump, 450);
                return;
            case 450:
                r1 = movs(r1, 1);
                r1 = bics(r1, r6);
                r1 = adds(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 462 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 462);
                return;
            case 462:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 470 | 1;
                bl(this::mp_emit_bc_label_assign, 470);
                return;
            case 470:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 476 | 1;
                bl(this::mp_emit_bc_pop_top, 476);
                return;
            case 476:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (bne(null, 488)) return;
            case 482:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 488 | 1;
                bl(this::mp_emit_bc_pop_top, 488);
                return;
            case 488:
                r3 = ldr(sp + 16);
                r1 = movs(r1, r5);
                cmp(r3, 0);
                if (bne(null, 654)) return;
            case 496:
                sp = add(sp, 60);
                pop(true, R4, R5, R6, R7);
                return;
            case 500:
                lr = compile_for_stmt + 504 | 1;
                bl(this::mp_emit_bc_dup_top, 504);
                return;
            case 504:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 512 | 1;
                bl(this::compile_node, 512);
                return;
            case 512:
                b(null, 366);
                return;
            case 514:
                r3 = ldrh(r4 + 24);
                r6 = ldr(r4 + 16);
                str(sp + 4, r3);
                r3 = ldrh(r4 + 26);
                r7 = adds(r6, 1);
                str(sp + 8, r3);
                r3 = ldrh(r4 + 30);
                r0 = movs(r0, r4);
                str(sp + 12, r3);
                r3 = adds(r6, 2);
                str(sp + 16, r3);
                r3 = ldrh(r4 + 28);
                strh(r4 + 26, r7);
                strh(r4 + 30, r3);
                r3 = 0xffff8000;
                r3 = orrs(r3, r6);
                strh(r4 + 24, r3);
                r3 = adds(r6, 3);
                str(r4 + 16, r3);
                r1 = ldr(r5 + 12);
                lr = compile_for_stmt + 558 | 1;
                bl(this::compile_node, 558);
                return;
            case 558:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 566 | 1;
                bl(this::mp_emit_bc_get_iter, 566);
                return;
            case 566:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 574 | 1;
                bl(this::mp_emit_bc_label_assign, 574);
                return;
            case 574:
                r1 = adds(r6, 2);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 582 | 1;
                bl(this::mp_emit_bc_for_iter, 582);
                return;
            case 582:
                r2 = movs(r2, 0);
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_for_stmt + 592 | 1;
                bl(this::c_assign, 592);
                return;
            case 592:
                r0 = movs(r0, r4);
                r1 = ldr(r5 + 16);
                lr = compile_for_stmt + 600 | 1;
                bl(this::compile_node, 600);
                return;
            case 600:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 606 | 1;
                bl(this::mp_emit_bc_last_emit_was_return_value, 606);
                return;
            case 606:
                cmp(r0, 0);
                if (bne(null, 618)) return;
            case 610:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 618 | 1;
                bl(this::mp_emit_bc_jump, 618);
                return;
            case 618:
                r1 = adds(r6, 2);
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 626 | 1;
                bl(this::mp_emit_bc_label_assign, 626);
                return;
            case 626:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 632 | 1;
                bl(this::mp_emit_bc_for_iter_end, 632);
                return;
            case 632:
                r3 = ldr(sp + 4);
                r1 = ldr(r5 + 20);
                strh(r4 + 24, r3);
                r3 = ldr(sp + 8);
                r0 = movs(r0, r4);
                strh(r4 + 26, r3);
                r3 = ldr(sp + 12);
                strh(r4 + 30, r3);
                lr = compile_for_stmt + 652 | 1;
                bl(this::compile_node, 652);
                return;
            case 652:
                r1 = movs(r1, r6);
            case 654:
                r0 = ldr(r4 + 40);
                lr = compile_for_stmt + 660 | 1;
                bl(this::mp_emit_bc_label_assign, 660);
                return;
            case 660:
                b(null, 496);
                return;
            case 662:
                r7 = movs(r7, 3);
                b(null, 138);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134242688, size=150, name='compile_with_stmt_helper', path='build/py/compile.o', has_indirect=False)
    protected void compile_with_stmt_helper(int offset) throws Exception
    {
        pc = compile_with_stmt_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 20);
                r4 = movs(r4, r0);
                str(sp + 4, r1);
                str(sp + 8, r2);
                str(sp + 12, r3);
                cmp(r1, 0);
                if (bne(null, 26)) return;
            case 16:
                r1 = ldr(sp + 12);
                lr = compile_with_stmt_helper + 22 | 1;
                bl(this::compile_node, 22);
                return;
            case 22:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 26:
                r7 = ldr(r0 + 16);
                r3 = adds(r7, 1);
                str(r0 + 16, r3);
                r3 = ldr(sp + 8);
                r5 = ldr(r3);
                cmp(r5, 0);
                if (beq(null, 124)) return;
            case 40:
                r6 = movs(r6, 3);
                r6 = ands(r6, r5);
                if (bne(null, 124)) return;
            case 46:
                r3 = ldr(r5 + 4);
                r3 = uxtb(r3);
                cmp(r3, 122);
                if (bne(null, 124)) return;
            case 54:
                r1 = ldr(r5 + 8);
                lr = compile_with_stmt_helper + 60 | 1;
                bl(this::compile_node, 60);
                return;
            case 60:
                r2 = movs(r2, r6);
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_with_stmt_helper + 70 | 1;
                bl(this::mp_emit_bc_setup_block, 70);
                return;
            case 70:
                r2 = movs(r2, r6);
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = compile_with_stmt_helper + 80 | 1;
                bl(this::c_assign, 80);
                return;
            case 80:
                r0 = movs(r0, r4);
                lr = compile_with_stmt_helper + 86 | 1;
                bl(this::compile_increase_except_level, 86);
                return;
            case 86:
                r2 = ldr(sp + 8);
                r1 = ldr(sp + 4);
                r3 = ldr(sp + 12);
                r2 = adds(r2, 4);
                r0 = movs(r0, r4);
                r1 = subs(r1, 1);
                lr = compile_with_stmt_helper + 102 | 1;
                bl(null, 0, 102);
                return;
            case 102:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, r7);
                lr = compile_with_stmt_helper + 110 | 1;
                bl(this::mp_emit_bc_with_cleanup, 110);
                return;
            case 110:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_with_stmt_helper + 122 | 1;
                bl(this::mp_emit_bc_end_finally, 122);
                return;
            case 122:
                b(null, 22);
                return;
            case 124:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_with_stmt_helper + 132 | 1;
                bl(this::compile_node, 132);
                return;
            case 132:
                r0 = ldr(r4 + 40);
                r2 = movs(r2, 0);
                r1 = movs(r1, r7);
                lr = compile_with_stmt_helper + 142 | 1;
                bl(this::mp_emit_bc_setup_block, 142);
                return;
            case 142:
                r0 = ldr(r4 + 40);
                lr = compile_with_stmt_helper + 148 | 1;
                bl(this::mp_emit_bc_pop_top, 148);
                return;
            case 148:
                b(null, 80);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134242838, size=32, name='compile_with_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_with_stmt(int offset) throws Exception
    {
        pc = compile_with_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r4 = movs(r4, r1);
                r2 = add(sp, 4);
                r1 = movs(r1, 121);
                r0 = adds(r0, 8);
                lr = compile_with_stmt + 18 | 1;
                bl(this::mp_parse_node_extract_list, 18);
                return;
            case 18:
                r3 = ldr(r4 + 12);
                r1 = movs(r1, r0);
                r2 = ldr(sp + 4);
                r0 = movs(r0, r5);
                lr = compile_with_stmt + 30 | 1;
                bl(this::compile_with_stmt_helper, 30);
                return;
            case 30:
                pop(true, R0, R1, R2, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134242872, size=412, name='compile_try_except', path='build/py/compile.o', has_indirect=False)
    protected void compile_try_except(int offset) throws Exception
    {
        pc = compile_try_except + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r7 = movs(r7, r1);
                r6 = movs(r6, r3);
                r5 = ldr(r0 + 16);
                sp = sub(sp, 28);
                r3 = adds(r5, 1);
                str(sp + 20, r3);
                r3 = adds(r5, 2);
                str(r0 + 16, r3);
                r1 = movs(r1, r5);
                str(sp + 16, r2);
                r0 = ldr(r0 + 40);
                r2 = movs(r2, 2);
                lr = compile_try_except + 32 | 1;
                bl(this::mp_emit_bc_setup_block, 32);
                return;
            case 32:
                r0 = movs(r0, r4);
                lr = compile_try_except + 38 | 1;
                bl(this::compile_increase_except_level, 38);
                return;
            case 38:
                r1 = movs(r1, r7);
                r0 = movs(r0, r4);
                lr = compile_try_except + 46 | 1;
                bl(this::compile_node, 46);
                return;
            case 46:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 52 | 1;
                bl(this::mp_emit_bc_pop_block, 52);
                return;
            case 52:
                r1 = adds(r5, 1);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 60 | 1;
                bl(this::mp_emit_bc_jump, 60);
                return;
            case 60:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 68 | 1;
                bl(this::mp_emit_bc_label_assign, 68);
                return;
            case 68:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 74 | 1;
                bl(this::mp_emit_bc_start_except_handler, 74);
                return;
            case 74:
                r3 = ldr(r4 + 16);
                r7 = movs(r7, r6);
                str(sp + 4, r3);
                r3 = adds(r3, 1);
                str(r4 + 16, r3);
                r3 = movs(r3, 0);
                str(sp, r3);
            case 88:
                r3 = ldr(sp);
                r2 = ldr(sp + 16);
                cmp(r3, r2);
                if (blt(null, 140)) return;
            case 96:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_try_except + 108 | 1;
                bl(this::mp_emit_bc_end_finally, 108);
                return;
            case 108:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 114 | 1;
                bl(this::mp_emit_bc_end_except_handler, 114);
                return;
            case 114:
                r1 = ldr(sp + 20);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 122 | 1;
                bl(this::mp_emit_bc_label_assign, 122);
                return;
            case 122:
                r1 = ldr(sp + 48);
                r0 = movs(r0, r4);
                lr = compile_try_except + 130 | 1;
                bl(this::compile_node, 130);
                return;
            case 130:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 138 | 1;
                bl(this::mp_emit_bc_label_assign, 138);
                return;
            case 138:
                b(null, 308);
                return;
            case 140:
                r3 = ldr(r7);
                str(sp + 12, r3);
                r3 = ldr(r4 + 16);
                str(sp + 8, r3);
                r3 = adds(r3, 1);
                str(r4 + 16, r3);
                r3 = ldr(sp + 12);
                r6 = ldr(r3 + 8);
                r3 = ldr(sp);
                r3 = adds(r3, 1);
                str(sp, r3);
                cmp(r6, 0);
                if (bne(null, 312)) return;
            case 166:
                r2 = ldr(sp + 16);
                cmp(r3, r2);
                if (bne(null, 292)) return;
            case 172:
                r5 = movs(r5, 0);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 180 | 1;
                bl(this::mp_emit_bc_pop_top, 180);
                return;
            case 180:
                r6 = movs(r6, r5);
            case 182:
                r3 = ldr(sp + 12);
                r0 = movs(r0, r4);
                r1 = ldr(r3 + 12);
                lr = compile_try_except + 192 | 1;
                bl(this::compile_node, 192);
                return;
            case 192:
                cmp(r5, 0);
                if (beq(null, 202)) return;
            case 196:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 202 | 1;
                bl(this::mp_emit_bc_pop_block, 202);
                return;
            case 202:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 208 | 1;
                bl(this::mp_emit_bc_pop_except, 208);
                return;
            case 208:
                cmp(r5, 0);
                if (beq(null, 264)) return;
            case 212:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 220 | 1;
                bl(this::mp_emit_bc_load_const_tok, 220);
                return;
            case 220:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 228 | 1;
                bl(this::mp_emit_bc_label_assign, 228);
                return;
            case 228:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 236 | 1;
                bl(this::mp_emit_bc_load_const_tok, 236);
                return;
            case 236:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_try_except + 244 | 1;
                bl(this::compile_store_id, 244);
                return;
            case 244:
                r0 = movs(r0, r4);
                r1 = movs(r1, r5);
                lr = compile_try_except + 252 | 1;
                bl(this::compile_delete_id, 252);
                return;
            case 252:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_try_except + 264 | 1;
                bl(this::mp_emit_bc_end_finally, 264);
                return;
            case 264:
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 272 | 1;
                bl(this::mp_emit_bc_jump, 272);
                return;
            case 272:
                r1 = ldr(sp + 8);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 280 | 1;
                bl(this::mp_emit_bc_label_assign, 280);
                return;
            case 280:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 288 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 288);
                return;
            case 288:
                r7 = adds(r7, 4);
                b(null, 88);
                return;
            case 292:
                r2 = compile_try_except_str1_1;
                r1 = ldr(r7);
                r0 = movs(r0, r4);
                lr = compile_try_except + 302 | 1;
                bl(this::compile_syntax_error, 302);
                return;
            case 302:
                r3 = ldrh(r4 + 28);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
            case 308:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 312:
                r3 = movs(r3, 3);
                r5 = movs(r5, 0);
                tst(r6, r3);
                if (bne(null, 338)) return;
            case 320:
                r1 = movs(r1, 255);
                r3 = ldr(r6 + 4);
                r2 = movs(r2, r6);
                r3 = ands(r3, r1);
                cmp(r3, 117);
                if (bne(null, 338)) return;
            case 332:
                r5 = ldr(r2 + 12);
                r6 = ldr(r6 + 8);
                r5 = lsrs(r5, 4);
            case 338:
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 344 | 1;
                bl(this::mp_emit_bc_dup_top, 344);
                return;
            case 344:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_try_except + 352 | 1;
                bl(this::compile_node, 352);
                return;
            case 352:
                r1 = movs(r1, 8);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 360 | 1;
                bl(this::mp_emit_bc_binary_op, 360);
                return;
            case 360:
                r2 = ldr(sp + 8);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_try_except + 370 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 370);
                return;
            case 370:
                cmp(r5, 0);
                if (beq(null, 172)) return;
            case 374:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_try_except + 382 | 1;
                bl(this::compile_store_id, 382);
                return;
            case 382:
                r6 = ldr(r4 + 16);
                r0 = ldr(r4 + 40);
                r3 = adds(r6, 1);
                str(r4 + 16, r3);
                r2 = movs(r2, 3);
                r1 = movs(r1, r6);
                lr = compile_try_except + 398 | 1;
                bl(this::mp_emit_bc_setup_block, 398);
                return;
            case 398:
                r0 = movs(r0, r4);
                lr = compile_try_except + 404 | 1;
                bl(this::compile_increase_except_level, 404);
                return;
            case 404:
                b(null, 182);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134243284, size=128, name='compile_try_finally', path='build/py/compile.o', has_indirect=False)
    protected void compile_try_finally(int offset) throws Exception
    {
        pc = compile_try_finally + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = ldr(r0 + 16);
                sp = sub(sp, 20);
                str(sp + 12, r3);
                r3 = adds(r5, 1);
                r7 = movs(r7, r2);
                str(r0 + 16, r3);
                r6 = movs(r6, r1);
                r0 = ldr(r0 + 40);
                r2 = movs(r2, 3);
                r1 = movs(r1, r5);
                lr = compile_try_finally + 28 | 1;
                bl(this::mp_emit_bc_setup_block, 28);
                return;
            case 28:
                r0 = movs(r0, r4);
                lr = compile_try_finally + 34 | 1;
                bl(this::compile_increase_except_level, 34);
                return;
            case 34:
                cmp(r7, 0);
                if (bne(null, 110)) return;
            case 38:
                r1 = movs(r1, 3);
                r0 = ldr(r4 + 40);
                lr = compile_try_finally + 46 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 46);
                return;
            case 46:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_try_finally + 54 | 1;
                bl(this::compile_node, 54);
                return;
            case 54:
                r1 = movs(r1, 3);
                r0 = ldr(r4 + 40);
                r1 = rsbs(r1, 0);
                lr = compile_try_finally + 64 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 64);
                return;
            case 64:
                r0 = ldr(r4 + 40);
                lr = compile_try_finally + 70 | 1;
                bl(this::mp_emit_bc_pop_block, 70);
                return;
            case 70:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 14);
                lr = compile_try_finally + 78 | 1;
                bl(this::mp_emit_bc_load_const_tok, 78);
                return;
            case 78:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_try_finally + 86 | 1;
                bl(this::mp_emit_bc_label_assign, 86);
                return;
            case 86:
                r1 = ldr(sp + 44);
                r0 = movs(r0, r4);
                lr = compile_try_finally + 94 | 1;
                bl(this::compile_node, 94);
                return;
            case 94:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_try_finally + 106 | 1;
                bl(this::mp_emit_bc_end_finally, 106);
                return;
            case 106:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 110:
                r3 = ldr(sp + 40);
                r2 = movs(r2, r7);
                str(sp, r3);
                r1 = movs(r1, r6);
                r3 = ldr(sp + 12);
                r0 = movs(r0, r4);
                lr = compile_try_finally + 126 | 1;
                bl(this::compile_try_except, 126);
                return;
            case 126:
                b(null, 64);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134243412, size=106, name='compile_try_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_try_stmt(int offset) throws Exception
    {
        pc = compile_try_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r5 = ldr(r1 + 12);
                r6 = movs(r6, r0);
                r3 = ldr(r5 + 4);
                r4 = movs(r4, r1);
                r3 = uxtb(r3);
                cmp(r3, 119);
                if (bne(null, 36)) return;
            case 16:
                r2 = movs(r2, 0);
                r3 = ldr(r5 + 8);
                str(sp, r2);
                str(sp + 4, r3);
                r3 = movs(r3, r2);
            case 26:
                r1 = ldr(r4 + 8);
                r0 = movs(r0, r6);
                lr = compile_try_stmt + 34 | 1;
                bl(this::compile_try_finally, 34);
                return;
            case 34:
                pop(true, R0, R1, R2, R3, R4, R5, R6);
                return;
            case 36:
                cmp(r3, 115);
                if (bne(null, 88)) return;
            case 40:
                r0 = movs(r0, r5);
                r2 = add(sp, 12);
                r1 = movs(r1, 118);
                r0 = adds(r0, 8);
                lr = compile_try_stmt + 52 | 1;
                bl(this::mp_parse_node_extract_list, 52);
                return;
            case 52:
                r3 = ldr(r5 + 16);
                r2 = movs(r2, r0);
                cmp(r3, 0);
                if (bne(null, 76)) return;
            case 60:
                r3 = ldr(r5 + 12);
            case 62:
                str(sp, r3);
                r1 = ldr(r4 + 8);
                r3 = ldr(sp + 12);
                r0 = movs(r0, r6);
                lr = compile_try_stmt + 74 | 1;
                bl(this::compile_try_except, 74);
                return;
            case 74:
                b(null, 34);
                return;
            case 76:
                r3 = ldr(r3 + 8);
                str(sp + 4, r3);
                r3 = ldr(r5 + 12);
                str(sp, r3);
                r3 = ldr(sp + 12);
                b(null, 26);
                return;
            case 88:
                r0 = movs(r0, r1);
                r2 = add(sp, 12);
                r0 = adds(r0, 12);
                r1 = movs(r1, 118);
                lr = compile_try_stmt + 100 | 1;
                bl(this::mp_parse_node_extract_list, 100);
                return;
            case 100:
                r3 = movs(r3, 0);
                r2 = movs(r2, r0);
                b(null, 62);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134243518, size=498, name='compile_async_with_stmt_helper', path='build/py/compile.o', has_indirect=False)
    protected void compile_async_with_stmt_helper(int offset) throws Exception
    {
        pc = compile_async_with_stmt_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 28);
                r4 = movs(r4, r0);
                str(sp + 4, r1);
                str(sp + 8, r2);
                str(sp + 12, r3);
                cmp(r1, 0);
                if (bne(null, 26)) return;
            case 16:
                r1 = ldr(sp + 12);
                lr = compile_async_with_stmt_helper + 22 | 1;
                bl(this::compile_node, 22);
                return;
            case 22:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 26:
                r5 = ldr(r0 + 16);
                r3 = adds(r5, 1);
                str(sp + 20, r3);
                r3 = adds(r5, 2);
                str(sp, r3);
                r3 = adds(r5, 4);
                str(r0 + 16, r3);
                r3 = ldr(sp + 8);
                r7 = adds(r5, 3);
                r6 = ldr(r3);
                cmp(r6, 0);
                if (bne(null, 52)) return;
            case 50:
                b(null, 468);
                return;
            case 52:
                r3 = movs(r3, 3);
                r3 = ands(r3, r6);
                str(sp + 16, r3);
                if (beq(null, 62)) return;
            case 60:
                b(null, 468);
                return;
            case 62:
                r3 = ldr(r6 + 4);
                r3 = uxtb(r3);
                cmp(r3, 122);
                if (beq(null, 72)) return;
            case 70:
                b(null, 468);
                return;
            case 72:
                r1 = ldr(r6 + 8);
                lr = compile_async_with_stmt_helper + 78 | 1;
                bl(this::compile_node, 78);
                return;
            case 78:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 84 | 1;
                bl(this::mp_emit_bc_dup_top, 84);
                return;
            case 84:
                r1 = movs(r1, 5);
                r0 = movs(r0, r4);
                lr = compile_async_with_stmt_helper + 92 | 1;
                bl(this::compile_await_object_method, 92);
                return;
            case 92:
                r2 = ldr(sp + 16);
                r1 = ldr(r6 + 12);
                r0 = movs(r0, r4);
                lr = compile_async_with_stmt_helper + 102 | 1;
                bl(this::c_assign, 102);
                return;
            case 102:
                r2 = movs(r2, 3);
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 112 | 1;
                bl(this::mp_emit_bc_setup_block, 112);
                return;
            case 112:
                r0 = movs(r0, r4);
                lr = compile_async_with_stmt_helper + 118 | 1;
                bl(this::compile_increase_except_level, 118);
                return;
            case 118:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 3);
                lr = compile_async_with_stmt_helper + 126 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 126);
                return;
            case 126:
                r2 = ldr(sp + 8);
                r1 = ldr(sp + 4);
                r3 = ldr(sp + 12);
                r2 = adds(r2, 4);
                r0 = movs(r0, r4);
                r1 = subs(r1, 1);
                lr = compile_async_with_stmt_helper + 142 | 1;
                bl(null, 0, 142);
                return;
            case 142:
                r1 = movs(r1, 3);
                r0 = ldr(r4 + 40);
                r1 = rsbs(r1, 0);
                lr = compile_async_with_stmt_helper + 152 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 152);
                return;
            case 152:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 158 | 1;
                bl(this::mp_emit_bc_pop_block, 158);
                return;
            case 158:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 166 | 1;
                bl(this::mp_emit_bc_load_const_tok, 166);
                return;
            case 166:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 172 | 1;
                bl(this::mp_emit_bc_rot_two, 172);
                return;
            case 172:
                r1 = adds(r5, 1);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 180 | 1;
                bl(this::mp_emit_bc_jump, 180);
                return;
            case 180:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 188 | 1;
                bl(this::mp_emit_bc_label_assign, 188);
                return;
            case 188:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 194 | 1;
                bl(this::mp_emit_bc_dup_top, 194);
                return;
            case 194:
                r2 = movs(r2, 1);
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 152);
                lr = compile_async_with_stmt_helper + 204 | 1;
                bl(this::mp_emit_bc_load_global, 204);
                return;
            case 204:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 8);
                lr = compile_async_with_stmt_helper + 212 | 1;
                bl(this::mp_emit_bc_binary_op, 212);
                return;
            case 212:
                r2 = ldr(sp);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 222 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 222);
                return;
            case 222:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 228 | 1;
                bl(this::mp_emit_bc_dup_top, 228);
                return;
            case 228:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 234 | 1;
                bl(this::mp_emit_bc_rot_three, 234);
                return;
            case 234:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 240 | 1;
                bl(this::mp_emit_bc_rot_two, 240);
                return;
            case 240:
                r2 = movs(r2, 0);
                r1 = movs(r1, 6);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 250 | 1;
                bl(this::mp_emit_bc_load_method, 250);
                return;
            case 250:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 256 | 1;
                bl(this::mp_emit_bc_rot_three, 256);
                return;
            case 256:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 262 | 1;
                bl(this::mp_emit_bc_rot_three, 262);
                return;
            case 262:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 268 | 1;
                bl(this::mp_emit_bc_dup_top, 268);
                return;
            case 268:
                r2 = movs(r2, 0);
                r1 = movs(r1, 13);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 278 | 1;
                bl(this::mp_emit_bc_attr, 278);
                return;
            case 278:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 284 | 1;
                bl(this::mp_emit_bc_rot_two, 284);
                return;
            case 284:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 14);
                lr = compile_async_with_stmt_helper + 292 | 1;
                bl(this::mp_emit_bc_load_const_tok, 292);
                return;
            case 292:
                r5 = movs(r5, r4);
                r3 = movs(r3, 0);
                r1 = movs(r1, 3);
                r2 = movs(r2, r3);
                r0 = ldr(r4 + 40);
                r5 = adds(r5, 40);
                lr = compile_async_with_stmt_helper + 308 | 1;
                bl(this::mp_emit_bc_call_method, 308);
                return;
            case 308:
                r0 = movs(r0, r5);
                lr = compile_async_with_stmt_helper + 314 | 1;
                bl(this::compile_yield_from_isra_6, 314);
                return;
            case 314:
                r2 = movs(r2, r7);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 324 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 324);
                return;
            case 324:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 330 | 1;
                bl(this::mp_emit_bc_pop_top, 330);
                return;
            case 330:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 14);
                lr = compile_async_with_stmt_helper + 338 | 1;
                bl(this::mp_emit_bc_load_const_tok, 338);
                return;
            case 338:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 346 | 1;
                bl(this::mp_emit_bc_jump, 346);
                return;
            case 346:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 2);
                lr = compile_async_with_stmt_helper + 354 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 354);
                return;
            case 354:
                r1 = ldr(sp);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 362 | 1;
                bl(this::mp_emit_bc_label_assign, 362);
                return;
            case 362:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 368 | 1;
                bl(this::mp_emit_bc_rot_three, 368);
                return;
            case 368:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 374 | 1;
                bl(this::mp_emit_bc_rot_three, 374);
                return;
            case 374:
                r1 = ldr(sp + 20);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 382 | 1;
                bl(this::mp_emit_bc_label_assign, 382);
                return;
            case 382:
                r2 = movs(r2, 0);
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 6);
                lr = compile_async_with_stmt_helper + 392 | 1;
                bl(this::mp_emit_bc_load_method, 392);
                return;
            case 392:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 400 | 1;
                bl(this::mp_emit_bc_load_const_tok, 400);
                return;
            case 400:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 406 | 1;
                bl(this::mp_emit_bc_dup_top, 406);
                return;
            case 406:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 412 | 1;
                bl(this::mp_emit_bc_dup_top, 412);
                return;
            case 412:
                r3 = movs(r3, 0);
                r1 = movs(r1, 3);
                r2 = movs(r2, r3);
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 424 | 1;
                bl(this::mp_emit_bc_call_method, 424);
                return;
            case 424:
                r0 = movs(r0, r5);
                lr = compile_async_with_stmt_helper + 430 | 1;
                bl(this::compile_yield_from_isra_6, 430);
                return;
            case 430:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 436 | 1;
                bl(this::mp_emit_bc_pop_top, 436);
                return;
            case 436:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                r1 = rsbs(r1, 0);
                lr = compile_async_with_stmt_helper + 446 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 446);
                return;
            case 446:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, r7);
                lr = compile_async_with_stmt_helper + 454 | 1;
                bl(this::mp_emit_bc_label_assign, 454);
                return;
            case 454:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_async_with_stmt_helper + 466 | 1;
                bl(this::mp_emit_bc_end_finally, 466);
                return;
            case 466:
                b(null, 22);
                return;
            case 468:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = compile_async_with_stmt_helper + 476 | 1;
                bl(this::compile_node, 476);
                return;
            case 476:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 482 | 1;
                bl(this::mp_emit_bc_dup_top, 482);
                return;
            case 482:
                r0 = movs(r0, r4);
                r1 = movs(r1, 5);
                lr = compile_async_with_stmt_helper + 490 | 1;
                bl(this::compile_await_object_method, 490);
                return;
            case 490:
                r0 = ldr(r4 + 40);
                lr = compile_async_with_stmt_helper + 496 | 1;
                bl(this::mp_emit_bc_pop_top, 496);
                return;
            case 496:
                b(null, 102);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244016, size=358, name='compile_async_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_async_stmt(int offset) throws Exception
    {
        pc = compile_async_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = ldr(r1 + 8);
                sp = sub(sp, 28);
                r3 = ldr(r5 + 4);
                r4 = movs(r4, r0);
                r3 = uxtb(r3);
                cmp(r3, 3);
                if (bne(null, 36)) return;
            case 16:
                r1 = movs(r1, r5);
                lr = compile_async_stmt + 22 | 1;
                bl(this::compile_funcdef, 22);
                return;
            case 22:
                r3 = movs(r3, 4);
                r2 = ldr(r5 + 24);
                r1 = ldrb(r2 + 24);
                r3 = orrs(r3, r1);
                strb(r2 + 24, r3);
            case 32:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 36:
                cmp(r3, 22);
                if (beq(null, 42)) return;
            case 40:
                b(null, 332);
                return;
            case 42:
                r3 = ldr(r5 + 12);
                r7 = ldr(r0 + 16);
                r3 = lsrs(r3, 4);
                str(sp, r3);
                r3 = adds(r7, 4);
                str(r0 + 16, r3);
                r1 = ldr(r5 + 12);
                lr = compile_async_stmt + 60 | 1;
                bl(this::compile_node, 60);
                return;
            case 60:
                r0 = movs(r0, r4);
                r1 = movs(r1, 7);
                lr = compile_async_stmt + 68 | 1;
                bl(this::compile_await_object_method, 68);
                return;
            case 68:
                r1 = ldr(sp);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 76 | 1;
                bl(this::compile_store_id, 76);
                return;
            case 76:
                r3 = ldrh(r4 + 24);
                r6 = ldr(r4 + 16);
                str(sp + 4, r3);
                r3 = ldrh(r4 + 26);
                r1 = adds(r6, 1);
                str(sp + 8, r3);
                r3 = ldrh(r4 + 30);
                r0 = ldr(r4 + 40);
                str(sp + 12, r3);
                r3 = adds(r6, 2);
                str(r4 + 16, r3);
                r3 = adds(r6, 1);
                strh(r4 + 26, r3);
                r3 = ldrh(r4 + 28);
                strh(r4 + 24, r6);
                strh(r4 + 30, r3);
                lr = compile_async_stmt + 112 | 1;
                bl(this::mp_emit_bc_label_assign, 112);
                return;
            case 112:
                r2 = movs(r2, 2);
                r1 = adds(r7, 1);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 122 | 1;
                bl(this::mp_emit_bc_setup_block, 122);
                return;
            case 122:
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 128 | 1;
                bl(this::compile_increase_except_level, 128);
                return;
            case 128:
                r1 = ldr(sp);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 136 | 1;
                bl(this::compile_load_id, 136);
                return;
            case 136:
                r0 = movs(r0, r4);
                r1 = movs(r1, 9);
                lr = compile_async_stmt + 144 | 1;
                bl(this::compile_await_object_method, 144);
                return;
            case 144:
                r2 = movs(r2, 0);
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 154 | 1;
                bl(this::c_assign, 154);
                return;
            case 154:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 160 | 1;
                bl(this::mp_emit_bc_pop_block, 160);
                return;
            case 160:
                r1 = adds(r7, 2);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 168 | 1;
                bl(this::mp_emit_bc_jump, 168);
                return;
            case 168:
                r1 = adds(r7, 1);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 176 | 1;
                bl(this::mp_emit_bc_label_assign, 176);
                return;
            case 176:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 182 | 1;
                bl(this::mp_emit_bc_start_except_handler, 182);
                return;
            case 182:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 188 | 1;
                bl(this::mp_emit_bc_dup_top, 188);
                return;
            case 188:
                r2 = movs(r2, 1);
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 181);
                lr = compile_async_stmt + 198 | 1;
                bl(this::mp_emit_bc_load_global, 198);
                return;
            case 198:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 8);
                lr = compile_async_stmt + 206 | 1;
                bl(this::mp_emit_bc_binary_op, 206);
                return;
            case 206:
                r2 = adds(r7, 3);
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 216 | 1;
                bl(this::mp_emit_bc_pop_jump_if, 216);
                return;
            case 216:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 222 | 1;
                bl(this::mp_emit_bc_pop_top, 222);
                return;
            case 222:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 228 | 1;
                bl(this::mp_emit_bc_pop_except, 228);
                return;
            case 228:
                r1 = movs(r1, r7);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 236 | 1;
                bl(this::mp_emit_bc_jump, 236);
                return;
            case 236:
                r1 = adds(r7, 3);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 244 | 1;
                bl(this::mp_emit_bc_label_assign, 244);
                return;
            case 244:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 252 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 252);
                return;
            case 252:
                r3 = ldrh(r4 + 28);
                r0 = ldr(r4 + 40);
                r3 = subs(r3, 1);
                strh(r4 + 28, r3);
                lr = compile_async_stmt + 264 | 1;
                bl(this::mp_emit_bc_end_finally, 264);
                return;
            case 264:
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 270 | 1;
                bl(this::mp_emit_bc_end_except_handler, 270);
                return;
            case 270:
                r1 = adds(r7, 2);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 278 | 1;
                bl(this::mp_emit_bc_label_assign, 278);
                return;
            case 278:
                r1 = ldr(r5 + 16);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 286 | 1;
                bl(this::compile_node, 286);
                return;
            case 286:
                r1 = adds(r6, 1);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 294 | 1;
                bl(this::mp_emit_bc_jump, 294);
                return;
            case 294:
                r3 = ldr(sp + 4);
                r1 = movs(r1, r7);
                strh(r4 + 24, r3);
                r3 = ldr(sp + 8);
                r0 = ldr(r4 + 40);
                strh(r4 + 26, r3);
                r3 = ldr(sp + 12);
                strh(r4 + 30, r3);
                lr = compile_async_stmt + 314 | 1;
                bl(this::mp_emit_bc_label_assign, 314);
                return;
            case 314:
                r1 = ldr(r5 + 20);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 322 | 1;
                bl(this::compile_node, 322);
                return;
            case 322:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_async_stmt + 330 | 1;
                bl(this::mp_emit_bc_label_assign, 330);
                return;
            case 330:
                b(null, 32);
                return;
            case 332:
                r0 = movs(r0, r5);
                r2 = add(sp, 20);
                r1 = movs(r1, 121);
                r0 = adds(r0, 8);
                lr = compile_async_stmt + 344 | 1;
                bl(this::mp_parse_node_extract_list, 344);
                return;
            case 344:
                r3 = ldr(r5 + 12);
                r1 = movs(r1, r0);
                r2 = ldr(sp + 20);
                r0 = movs(r0, r4);
                lr = compile_async_stmt + 356 | 1;
                bl(this::compile_async_with_stmt_helper, 356);
                return;
            case 356:
                b(null, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244376, size=92, name='compile_yield_expr', path='build/py/compile.o', has_indirect=False)
    protected void compile_yield_expr(int offset) throws Exception
    {
        pc = compile_yield_expr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 36);
                push(true, r4, r5, r6);
                r3 = ldrb(r3);
                r4 = movs(r4, r0);
                cmp(r3, 7);
                if (beq(null, 24)) return;
            case 12:
                cmp(r3, 2);
                if (beq(null, 24)) return;
            case 16:
                r2 = compile_yield_expr_str1_1;
                lr = compile_yield_expr + 22 | 1;
                bl(this::compile_syntax_error, 22);
                return;
            case 22:
                pop(true, R4, R5, R6);
                return;
            case 24:
                r5 = ldr(r1 + 8);
                cmp(r5, 0);
                if (bne(null, 48)) return;
            case 30:
                r1 = movs(r1, 14);
                r0 = ldr(r4 + 40);
                lr = compile_yield_expr + 38 | 1;
                bl(this::mp_emit_bc_load_const_tok, 38);
                return;
            case 38:
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 40);
                lr = compile_yield_expr + 46 | 1;
                bl(this::mp_emit_bc_yield, 46);
                return;
            case 46:
                b(null, 22);
                return;
            case 48:
                r3 = lsls(r5, 30);
                if (bne(null, 78)) return;
            case 52:
                r3 = ldr(r5 + 4);
                r3 = uxtb(r3);
                cmp(r3, 174);
                if (bne(null, 78)) return;
            case 60:
                r0 = movs(r0, r4);
                r1 = ldr(r5 + 8);
                lr = compile_yield_expr + 68 | 1;
                bl(this::compile_node, 68);
                return;
            case 68:
                r0 = movs(r0, r4);
                r0 = adds(r0, 40);
                lr = compile_yield_expr + 76 | 1;
                bl(this::compile_yield_from_isra_6, 76);
                return;
            case 76:
                b(null, 22);
                return;
            case 78:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_yield_expr + 86 | 1;
                bl(this::compile_node, 86);
                return;
            case 86:
                b(null, 38);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244468, size=112, name='compile_return_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_return_stmt(int offset) throws Exception
    {
        pc = compile_return_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r3 = ldr(r0 + 36);
                r4 = movs(r4, r0);
                r3 = ldrb(r3);
                cmp(r3, 7);
                if (beq(null, 20)) return;
            case 12:
                r2 = compile_return_stmt_str1_1;
                lr = compile_return_stmt + 18 | 1;
                bl(this::compile_syntax_error, 18);
                return;
            case 18:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 20:
                r5 = ldr(r1 + 8);
                cmp(r5, 0);
                if (bne(null, 42)) return;
            case 26:
                r1 = movs(r1, 14);
                r0 = ldr(r0 + 40);
                lr = compile_return_stmt + 34 | 1;
                bl(this::mp_emit_bc_load_const_tok, 34);
                return;
            case 34:
                r0 = ldr(r4 + 40);
                lr = compile_return_stmt + 40 | 1;
                bl(this::mp_emit_bc_return_value, 40);
                return;
            case 40:
                b(null, 18);
                return;
            case 42:
                r2 = movs(r2, 3);
                r2 = ands(r2, r5);
                if (bne(null, 104)) return;
            case 48:
                r3 = ldr(r5 + 4);
                r3 = uxtb(r3);
                cmp(r3, 26);
                if (bne(null, 104)) return;
            case 56:
                r6 = ldr(r0 + 16);
                r7 = ldr(r5 + 12);
                r3 = adds(r6, 1);
                str(r0 + 16, r3);
                r1 = ldr(r7 + 8);
                r3 = movs(r3, r6);
                lr = compile_return_stmt + 72 | 1;
                bl(this::c_if_cond, 72);
                return;
            case 72:
                r1 = ldr(r5 + 8);
                r0 = movs(r0, r4);
                lr = compile_return_stmt + 80 | 1;
                bl(this::compile_node, 80);
                return;
            case 80:
                r0 = ldr(r4 + 40);
                lr = compile_return_stmt + 86 | 1;
                bl(this::mp_emit_bc_return_value, 86);
                return;
            case 86:
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 40);
                lr = compile_return_stmt + 94 | 1;
                bl(this::mp_emit_bc_label_assign, 94);
                return;
            case 94:
                r1 = ldr(r7 + 12);
            case 96:
                r0 = movs(r0, r4);
                lr = compile_return_stmt + 102 | 1;
                bl(this::compile_node, 102);
                return;
            case 102:
                b(null, 34);
                return;
            case 104:
                r1 = movs(r1, r5);
                b(null, 96);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244580, size=62, name='compile_atom_paren', path='build/py/compile.o', has_indirect=False)
    protected void compile_atom_paren(int offset) throws Exception
    {
        pc = compile_atom_paren + offset;
        switch (offset)
        {
            case 0:
                r1 = ldr(r1 + 8);
                push(true, r4);
                r2 = subs(r1, 0);
                if (beq(null, 30)) return;
            case 8:
                r4 = ldr(r1 + 12);
                cmp(r4, 0);
                if (beq(null, 56)) return;
            case 14:
                r2 = movs(r2, 3);
                r2 = ands(r2, r4);
                if (bne(null, 56)) return;
            case 20:
                r3 = ldr(r4 + 4);
                r3 = uxtb(r3);
                cmp(r3, 147);
                if (bne(null, 36)) return;
            case 28:
                r1 = ldr(r1 + 8);
            case 30:
                lr = compile_atom_paren + 34 | 1;
                bl(this::text_c_tuple, 34);
                return;
            case 34:
                b(null, 54);
                return;
            case 36:
                cmp(r3, 148);
                if (bne(null, 44)) return;
            case 40:
                r2 = movs(r2, r4);
                b(null, 28);
                return;
            case 44:
                cmp(r3, 171);
                if (bne(null, 56)) return;
            case 48:
                r2 = movs(r2, 6);
                lr = compile_atom_paren + 54 | 1;
                bl(this::compile_comprehension, 54);
                return;
            case 54:
                pop(true, R4);
                return;
            case 56:
                r2 = movs(r2, r1);
                r1 = movs(r1, 0);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244644, size=44, name='compile_atom_expr_await', path='build/py/compile.o', has_indirect=False)
    protected void compile_atom_expr_await(int offset) throws Exception
    {
        pc = compile_atom_expr_await + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 36);
                push(true, r4);
                r3 = ldrb(r3);
                r4 = movs(r4, r0);
                cmp(r3, 7);
                if (beq(null, 24)) return;
            case 12:
                cmp(r3, 2);
                if (beq(null, 24)) return;
            case 16:
                r2 = compile_atom_expr_await_str1_1;
                lr = compile_atom_expr_await + 22 | 1;
                bl(this::compile_syntax_error, 22);
                return;
            case 22:
                pop(true, R4);
                return;
            case 24:
                r0 = movs(r0, r4);
                lr = compile_atom_expr_await + 30 | 1;
                bl(this::compile_atom_expr_normal, 30);
                return;
            case 30:
                r0 = movs(r0, r4);
                r0 = adds(r0, 40);
                lr = compile_atom_expr_await + 38 | 1;
                bl(this::compile_yield_from_isra_6, 38);
                return;
            case 38:
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244688, size=92, name='compile_assert_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_assert_stmt(int offset) throws Exception
    {
        pc = compile_assert_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r3 = movs(r3, 242);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 1);
                r6 = ldr(r2 + r3);
                r4 = movs(r4, r0);
                r7 = movs(r7, r1);
                cmp(r6, 0);
                if (bne(null, 84)) return;
            case 18:
                r5 = ldr(r0 + 16);
                r2 = movs(r2, 1);
                r3 = adds(r5, 1);
                str(r0 + 16, r3);
                r1 = ldr(r1 + 8);
                r3 = movs(r3, r5);
                lr = compile_assert_stmt + 34 | 1;
                bl(this::c_if_cond, 34);
                return;
            case 34:
                r1 = movs(r1, 113);
                r2 = movs(r2, 1);
                r0 = ldr(r4 + 40);
                lr = compile_assert_stmt + 44 | 1;
                bl(this::mp_emit_bc_load_global, 44);
                return;
            case 44:
                r1 = ldr(r7 + 12);
                cmp(r1, 0);
                if (beq(null, 68)) return;
            case 50:
                r0 = movs(r0, r4);
                lr = compile_assert_stmt + 56 | 1;
                bl(this::compile_node, 56);
                return;
            case 56:
                r3 = movs(r3, r6);
                r2 = movs(r2, r6);
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_assert_stmt + 68 | 1;
                bl(this::mp_emit_bc_call_function, 68);
                return;
            case 68:
                r1 = movs(r1, 1);
                r0 = ldr(r4 + 40);
                lr = compile_assert_stmt + 76 | 1;
                bl(this::mp_emit_bc_raise_varargs, 76);
                return;
            case 76:
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 40);
                lr = compile_assert_stmt + 84 | 1;
                bl(this::mp_emit_bc_label_assign, 84);
                return;
            case 84:
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244780, size=58, name='compile_raise_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_raise_stmt(int offset) throws Exception
    {
        pc = compile_raise_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = ldr(r1 + 8);
                r5 = movs(r5, r0);
                r1 = subs(r4, 0);
                if (beq(null, 38)) return;
            case 10:
                r3 = lsls(r4, 30);
                if (bne(null, 46)) return;
            case 14:
                r3 = ldr(r4 + 4);
                r3 = uxtb(r3);
                cmp(r3, 93);
                if (bne(null, 46)) return;
            case 22:
                r1 = ldr(r4 + 8);
                lr = compile_raise_stmt + 28 | 1;
                bl(this::compile_node, 28);
                return;
            case 28:
                r1 = ldr(r4 + 12);
                r0 = movs(r0, r5);
                lr = compile_raise_stmt + 36 | 1;
                bl(this::compile_node, 36);
                return;
            case 36:
                r1 = movs(r1, 2);
            case 38:
                r0 = ldr(r5 + 40);
                lr = compile_raise_stmt + 44 | 1;
                bl(this::mp_emit_bc_raise_varargs, 44);
                return;
            case 44:
                pop(true, R4, R5, R6);
                return;
            case 46:
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = compile_raise_stmt + 54 | 1;
                bl(this::compile_node, 54);
                return;
            case 54:
                r1 = movs(r1, 1);
                b(null, 38);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134244840, size=192, name='compile_global_nonlocal_stmt', path='build/py/compile.o', has_indirect=False)
    protected void compile_global_nonlocal_stmt(int offset) throws Exception
    {
        pc = compile_global_nonlocal_stmt + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r3 = ldrb(r0 + 5);
                sp = sub(sp, 28);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                cmp(r3, 1);
                if (bne(null, 38)) return;
            case 14:
                r3 = ldr(r1 + 4);
                r3 = uxtb(r3);
                str(sp + 8, r3);
                cmp(r3, 16);
                if (beq(null, 42)) return;
            case 24:
                r3 = ldr(r0 + 36);
                r3 = ldrb(r3);
                cmp(r3, 0);
                if (bne(null, 42)) return;
            case 32:
                r2 = compile_global_nonlocal_stmt_str1_1;
                lr = compile_global_nonlocal_stmt + 38 | 1;
                bl(this::compile_syntax_error, 38);
                return;
            case 38:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 42:
                r0 = movs(r0, r5);
                r2 = add(sp, 20);
                r1 = movs(r1, 108);
                r0 = adds(r0, 8);
                lr = compile_global_nonlocal_stmt + 54 | 1;
                bl(this::mp_parse_node_extract_list, 54);
                return;
            case 54:
                r7 = movs(r7, 0);
                str(sp + 12, r0);
            case 58:
                r3 = ldr(sp + 12);
                cmp(r3, r7);
                if (ble(null, 38)) return;
            case 64:
                r2 = ldr(sp + 20);
                r3 = lsls(r7, 2);
                r3 = ldr(r3 + r2);
                r0 = ldr(r4 + 36);
                r3 = lsrs(r3, 4);
                str(sp + 4, r3);
                r3 = add(sp, 16);
                r2 = adds(r3, 3);
                r1 = ldr(sp + 4);
                lr = compile_global_nonlocal_stmt + 86 | 1;
                bl(this::scope_find_or_add_id, 86);
                return;
            case 86:
                r2 = ldr(sp + 8);
                r3 = add(sp, 16);
                r6 = movs(r6, r0);
                r3 = ldrb(r3 + 3);
                cmp(r2, 16);
                if (bne(null, 134)) return;
            case 98:
                cmp(r3, 0);
                if (bne(null, 110)) return;
            case 102:
                r3 = ldrb(r0);
                r2 = 0x08022499;
                cmp(r3, 1);
                if (bne(null, 156)) return;
            case 110:
                r3 = movs(r3, 1);
                strb(r6, r3);
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 36);
                lr = compile_global_nonlocal_stmt + 122 | 1;
                bl(this::scope_find_global, 122);
                return;
            case 122:
                cmp(r0, 0);
                if (beq(null, 130)) return;
            case 126:
                r3 = movs(r3, 1);
                strb(r0, r3);
            case 130:
                r7 = adds(r7, 1);
                b(null, 58);
                return;
            case 134:
                cmp(r3, 0);
                if (beq(null, 166)) return;
            case 138:
                r2 = ldr(sp + 4);
                r1 = movs(r1, r0);
                r0 = ldr(r4 + 36);
                lr = compile_global_nonlocal_stmt + 148 | 1;
                bl(this::scope_find_local_and_close_over, 148);
                return;
            case 148:
                r3 = ldrb(r6);
                r2 = 0x080224b8;
                cmp(r3, 0);
                if (bne(null, 130)) return;
            case 156:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = compile_global_nonlocal_stmt + 164 | 1;
                bl(this::compile_syntax_error, 164);
                return;
            case 164:
                b(null, 130);
                return;
            case 166:
                r3 = ldrb(r0);
                cmp(r3, 4);
                if (beq(null, 130)) return;
            case 172:
                r2 = 0x080224d6;
                b(null, 156);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134245032, size=256, name='do_import_name_isra_19', path='build/py/compile.o', has_indirect=False)
    protected void do_import_name_isra_19(int offset) throws Exception
    {
        pc = do_import_name_isra_19 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 28);
                r4 = subs(r1, 0);
                if (bne(null, 16)) return;
            case 10:
                r1 = movs(r1, 1);
            case 12:
                str(r2, r1);
                b(null, 64);
                return;
            case 16:
                r3 = movs(r3, 3);
                r3 = ands(r3, r1);
                if (bne(null, 76)) return;
            case 22:
                r1 = ldr(r1 + 4);
                str(sp, r3);
                r1 = uxtb(r1);
                cmp(r1, 103);
                if (bne(null, 48)) return;
            case 32:
                r3 = ldr(r4 + 12);
                r3 = lsrs(r3, 4);
                str(r2, r3);
                r4 = ldr(r4 + 8);
                r3 = movs(r3, 1);
                cmp(r4, 0);
                if (beq(null, 10)) return;
            case 46:
                str(sp, r3);
            case 48:
                r3 = movs(r3, 15);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (bne(null, 80)) return;
            case 56:
                r3 = ldr(sp);
                r1 = lsrs(r4, 4);
                cmp(r3, 0);
                if (beq(null, 12)) return;
            case 64:
                r2 = movs(r2, 0);
                r0 = ldr(r7);
                lr = do_import_name_isra_19 + 72 | 1;
                bl(this::mp_emit_bc_import, 72);
                return;
            case 72:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 76:
                r3 = movs(r3, 0);
                b(null, 46);
                return;
            case 80:
                r3 = ldr(sp);
                cmp(r3, 0);
                if (bne(null, 92)) return;
            case 86:
                r3 = ldr(r4 + 8);
                r3 = lsrs(r3, 4);
                str(r2, r3);
            case 92:
                r5 = movs(r5, 0);
                r3 = ldr(r4 + 4);
                r3 = lsrs(r3, 8);
                str(sp + 4, r3);
                r3 = subs(r3, 1);
                str(sp + 8, r3);
            case 104:
                r3 = ldr(sp + 4);
                cmp(r3, r5);
                if (bgt(null, 186)) return;
            case 110:
                r0 = ldr(sp + 8);
                lr = do_import_name_isra_19 + 116 | 1;
                bl(this::mp_pystack_alloc, 116);
                return;
            case 116:
                r6 = movs(r6, 0);
                r5 = movs(r5, r0);
                str(sp + 12, r0);
            case 122:
                r3 = ldr(sp + 4);
                cmp(r3, r6);
                if (bgt(null, 208)) return;
            case 128:
                r1 = ldr(sp + 8);
                r0 = ldr(sp + 12);
                lr = do_import_name_isra_19 + 136 | 1;
                bl(this::qstr_from_strn, 136);
                return;
            case 136:
                r3 = mp_state_ctx;
                r2 = ldr(sp + 12);
                r1 = movs(r1, r0);
                str(r3 + 16, r2);
                r0 = ldr(r7);
                r2 = movs(r2, 0);
                lr = do_import_name_isra_19 + 152 | 1;
                bl(this::mp_emit_bc_import, 152);
                return;
            case 152:
                r3 = ldr(sp);
                r5 = movs(r5, 1);
                cmp(r3, 0);
                if (beq(null, 72)) return;
            case 160:
                r3 = ldr(sp + 4);
                cmp(r3, r5);
                if (ble(null, 72)) return;
            case 166:
                r3 = lsls(r5, 2);
                r3 = adds(r4, r3);
                r1 = ldr(r3 + 8);
                r2 = movs(r2, 0);
                r1 = lsrs(r1, 4);
                r0 = ldr(r7);
                lr = do_import_name_isra_19 + 182 | 1;
                bl(this::mp_emit_bc_attr, 182);
                return;
            case 182:
                r5 = adds(r5, 1);
                b(null, 160);
                return;
            case 186:
                r3 = lsls(r5, 2);
                r3 = adds(r4, r3);
                r0 = ldr(r3 + 8);
                r5 = adds(r5, 1);
                r0 = lsrs(r0, 4);
                lr = do_import_name_isra_19 + 200 | 1;
                bl(this::qstr_len, 200);
                return;
            case 200:
                r3 = ldr(sp + 8);
                r3 = adds(r0, r3);
                str(sp + 8, r3);
                b(null, 104);
                return;
            case 208:
                cmp(r6, 0);
                if (beq(null, 218)) return;
            case 212:
                r3 = movs(r3, 46);
                strb(r5, r3);
                r5 = adds(r5, 1);
            case 218:
                r3 = lsls(r6, 2);
                r3 = adds(r4, r3);
                r0 = ldr(r3 + 8);
                r1 = add(sp, 20);
                r0 = lsrs(r0, 4);
                lr = do_import_name_isra_19 + 232 | 1;
                bl(this::qstr_data, 232);
                return;
            case 232:
                r2 = ldr(sp + 20);
                r1 = movs(r1, r0);
                r0 = movs(r0, r5);
                lr = do_import_name_isra_19 + 242 | 1;
                bl(this::memcpy, 242);
                return;
            case 242:
                r3 = ldr(sp + 20);
                r6 = adds(r6, 1);
                r5 = adds(r5, r3);
                b(null, 122);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134245288, size=284, name='compile_import_from', path='build/py/compile.o', has_indirect=False)
    protected void compile_import_from(int offset) throws Exception
    {
        pc = compile_import_from + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 15);
                push(true, r4, r5, r6, r7);
                r4 = ldr(r1 + 8);
                sp = sub(sp, 20);
                r5 = movs(r5, r0);
                r6 = movs(r6, r1);
                r3 = ands(r3, r4);
                cmp(r3, 14);
                if (beq(null, 34)) return;
            case 18:
                cmp(r4, 0);
                if (beq(null, 152)) return;
            case 22:
                r3 = lsls(r4, 30);
                if (bne(null, 152)) return;
            case 26:
                r3 = ldr(r4 + 4);
                r3 = uxtb(r3);
                cmp(r3, 100);
                if (bne(null, 118)) return;
            case 34:
                str(sp + 8, r4);
                r4 = movs(r4, 0);
            case 38:
                r2 = add(sp, 12);
                r1 = movs(r1, 100);
                r0 = add(sp, 8);
                lr = compile_import_from + 48 | 1;
                bl(this::mp_parse_node_extract_list, 48);
                return;
            case 48:
                r3 = movs(r3, 0);
                r1 = movs(r1, r3);
                r2 = ldr(sp + 12);
            case 54:
                cmp(r3, r0);
                if (blt(null, 130)) return;
            case 58:
                r7 = movs(r7, r5);
                r3 = 0x0000033e;
                r2 = ldr(r6 + 12);
                r0 = ldr(r5 + 40);
                r7 = adds(r7, 40);
                cmp(r2, r3);
                if (bne(null, 156)) return;
            case 72:
                lr = compile_import_from + 76 | 1;
                bl(this::mp_emit_bc_load_const_small_int, 76);
                return;
            case 76:
                r1 = movs(r1, 91);
                r0 = ldr(r5 + 40);
                lr = compile_import_from + 84 | 1;
                bl(this::mp_emit_bc_load_const_str, 84);
                return;
            case 84:
                r2 = movs(r2, 0);
                r1 = movs(r1, 1);
                r0 = ldr(r5 + 40);
                lr = compile_import_from + 94 | 1;
                bl(this::mp_emit_bc_build, 94);
                return;
            case 94:
                r2 = add(sp, 12);
                r1 = movs(r1, r4);
                r0 = movs(r0, r7);
                lr = compile_import_from + 104 | 1;
                bl(this::do_import_name_isra_19, 104);
                return;
            case 104:
                r2 = movs(r2, 2);
                r1 = movs(r1, 0);
                r0 = ldr(r5 + 40);
                lr = compile_import_from + 114 | 1;
                bl(this::mp_emit_bc_import, 114);
                return;
            case 114:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 118:
                cmp(r3, 97);
                if (bne(null, 152)) return;
            case 122:
                r3 = ldr(r4 + 8);
                str(sp + 8, r3);
                r4 = ldr(r4 + 12);
                b(null, 38);
                return;
            case 130:
                r7 = lsls(r3, 2);
                r7 = ldr(r2 + r7);
                r12 = mov(r7);
                r7 = 0x000004ce;
                cmp(r12, r7);
                if (bne(null, 148)) return;
            case 142:
                r1 = adds(r1, 1);
            case 144:
                r3 = adds(r3, 1);
                b(null, 54);
                return;
            case 148:
                r1 = adds(r1, 3);
                b(null, 144);
                return;
            case 152:
                r1 = movs(r1, 0);
                b(null, 58);
                return;
            case 156:
                lr = compile_import_from + 160 | 1;
                bl(this::mp_emit_bc_load_const_small_int, 160);
                return;
            case 160:
                r0 = movs(r0, r6);
                r2 = add(sp, 8);
                r0 = adds(r0, 12);
                r1 = movs(r1, 105);
                lr = compile_import_from + 172 | 1;
                bl(this::mp_parse_node_extract_list, 172);
                return;
            case 172:
                r6 = movs(r6, 0);
                str(sp + 4, r0);
            case 176:
                r3 = ldr(sp + 4);
                r0 = ldr(r5 + 40);
                cmp(r6, r3);
                if (blt(null, 218)) return;
            case 184:
                r1 = movs(r1, r3);
                r2 = movs(r2, 0);
                lr = compile_import_from + 192 | 1;
                bl(this::mp_emit_bc_build, 192);
                return;
            case 192:
                r1 = movs(r1, r4);
                r2 = add(sp, 12);
                r0 = movs(r0, r7);
                lr = compile_import_from + 202 | 1;
                bl(this::do_import_name_isra_19, 202);
                return;
            case 202:
                r4 = movs(r4, 0);
            case 204:
                r3 = ldr(sp + 4);
                r0 = ldr(r5 + 40);
                cmp(r4, r3);
                if (blt(null, 236)) return;
            case 212:
                lr = compile_import_from + 216 | 1;
                bl(this::mp_emit_bc_pop_top, 216);
                return;
            case 216:
                b(null, 114);
                return;
            case 218:
                r2 = ldr(sp + 8);
                r3 = lsls(r6, 2);
                r3 = ldr(r3 + r2);
                r6 = adds(r6, 1);
                r1 = ldr(r3 + 8);
                r1 = lsrs(r1, 4);
                lr = compile_import_from + 234 | 1;
                bl(this::mp_emit_bc_load_const_str, 234);
                return;
            case 234:
                b(null, 176);
                return;
            case 236:
                r2 = ldr(sp + 8);
                r3 = lsls(r4, 2);
                r6 = ldr(r3 + r2);
                r2 = movs(r2, 1);
                r3 = ldr(r6 + 8);
                r7 = lsrs(r3, 4);
                r1 = movs(r1, r7);
                lr = compile_import_from + 254 | 1;
                bl(this::mp_emit_bc_import, 254);
                return;
            case 254:
                r1 = ldr(r6 + 12);
                cmp(r1, 0);
                if (bne(null, 272)) return;
            case 260:
                r1 = movs(r1, r7);
            case 262:
                r0 = movs(r0, r5);
                lr = compile_import_from + 268 | 1;
                bl(this::compile_store_id, 268);
                return;
            case 268:
                r4 = adds(r4, 1);
                b(null, 204);
                return;
            case 272:
                r1 = lsrs(r1, 4);
                b(null, 262);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134245572, size=44, name='compile_dotted_as_name', path='build/py/compile.o', has_indirect=True)
    protected void compile_dotted_as_name(int offset) throws Exception
    {
        pc = compile_dotted_as_name + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r0 = ldr(r0 + 40);
                r1 = movs(r1, 0);
                lr = compile_dotted_as_name + 14 | 1;
                bl(this::mp_emit_bc_load_const_small_int, 14);
                return;
            case 14:
                r0 = ldr(r4 + 40);
                r1 = movs(r1, 14);
                lr = compile_dotted_as_name + 22 | 1;
                bl(this::mp_emit_bc_load_const_tok, 22);
                return;
            case 22:
                r0 = movs(r0, r4);
                r1 = movs(r1, r5);
                r2 = add(sp, 4);
                r0 = adds(r0, 40);
                lr = compile_dotted_as_name + 34 | 1;
                bl(this::do_import_name_isra_19, 34);
                return;
            case 34:
                r1 = ldr(sp + 4);
                r0 = movs(r0, r4);
                lr = compile_dotted_as_name + 42 | 1;
                bl(this::compile_store_id, 42);
                return;
            case 42:
                pop(true, R0, R1, R2, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246362, size=62, name='emit_write_uint', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_uint(int offset) throws Exception
    {
        pc = emit_write_uint + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4, r5, r6);
                r4 = movs(r4, r2);
                r2 = mov(sp);
                r5 = adds(r2, 5);
                r3 = movs(r3, r1);
                r6 = movs(r6, 127);
                r1 = movs(r1, r5);
            case 14:
                r2 = movs(r2, r4);
                r5 = subs(r5, 1);
                r2 = ands(r2, r6);
                strb(r5, r2);
                r4 = lsrs(r4, 7);
                if (bne(null, 14)) return;
            case 26:
                r6 = movs(r6, 128);
                r1 = subs(r1, r5);
                blx(r3, 32);
                return;
            case 32:
                r3 = add(sp, 4);
                r1 = subs(r3, r5);
                r6 = rsbs(r6, 0);
            case 38:
                cmp(r4, r1);
                if (bne(null, 52)) return;
            case 42:
                r2 = mov(sp);
                r2 = ldrb(r2 + 4);
                r5 = subs(r3, r5);
                strb(r0 + r5, r2);
                pop(true, R0, R1, R4, R5, R6);
                return;
            case 52:
                r2 = ldrb(r5 + r4);
                r2 = orrs(r2, r6);
                strb(r0 + r4, r2);
                r4 = adds(r4, 1);
                b(null, 38);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246424, size=26, name='emit_get_cur_to_write_code_info', path='build/py/emitbc.o', has_indirect=True)
    protected void emit_get_cur_to_write_code_info(int offset) throws Exception
    {
        pc = emit_get_cur_to_write_code_info + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, r0);
                r0 = ldr(r0 + 32);
                r2 = ldrb(r3 + 5);
                r1 = adds(r1, r0);
                cmp(r2, 3);
                if (bhi(null, 18)) return;
            case 12:
                r0 = movs(r0, r3);
                str(r3 + 32, r1);
            case 16:
                bx(lr);
                return;
            case 18:
                r2 = ldr(r3 + 48);
                str(r3 + 32, r1);
                r0 = adds(r2, r0);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246450, size=14, name='emit_write_code_info_byte', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_code_info_byte(int offset) throws Exception
    {
        pc = emit_write_code_info_byte + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                r1 = movs(r1, 1);
                lr = emit_write_code_info_byte + 10 | 1;
                bl(this::emit_get_cur_to_write_code_info, 10);
                return;
            case 10:
                strb(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246464, size=30, name='emit_get_cur_to_write_bytecode', path='build/py/emitbc.o', has_indirect=True)
    protected void emit_get_cur_to_write_bytecode(int offset) throws Exception
    {
        pc = emit_get_cur_to_write_bytecode + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, r0);
                r0 = ldr(r0 + 40);
                r2 = ldrb(r3 + 5);
                r1 = adds(r1, r0);
                cmp(r2, 3);
                if (bhi(null, 18)) return;
            case 12:
                r0 = movs(r0, r3);
                str(r3 + 40, r1);
            case 16:
                bx(lr);
                return;
            case 18:
                r2 = ldr(r3 + 36);
                str(r3 + 40, r1);
                r0 = adds(r0, r2);
                r2 = ldr(r3 + 48);
                r0 = adds(r2, r0);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246494, size=14, name='emit_write_bytecode_byte', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                r1 = movs(r1, 1);
                lr = emit_write_bytecode_byte + 10 | 1;
                bl(this::emit_get_cur_to_write_bytecode, 10);
                return;
            case 10:
                strb(r0, r4);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246508, size=28, name='emit_write_bytecode_byte_uint', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_uint(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_uint + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r2);
                r4 = movs(r4, r0);
                lr = emit_write_bytecode_byte_uint + 10 | 1;
                bl(this::emit_write_bytecode_byte, 10);
                return;
            case 10:
                r2 = movs(r2, r5);
                r1 = emit_get_cur_to_write_bytecode | 1;
                hint(emit_get_cur_to_write_bytecode | 1, this::emit_get_cur_to_write_bytecode);
                r0 = movs(r0, r4);
                lr = emit_write_bytecode_byte_uint + 20 | 1;
                bl(this::emit_write_uint, 20);
                return;
            case 20:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246536, size=42, name='emit_write_bytecode_byte_raw_code', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_raw_code(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_raw_code + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldr(r0 + 12);
                r5 = movs(r5, r2);
                r4 = ldrh(r3 + 26);
                r2 = ldrh(r3 + 28);
                r3 = ldrh(r0 + 56);
                r4 = adds(r4, r2);
                r2 = ldrh(r0 + 54);
                r4 = adds(r4, r2);
                r2 = adds(r3, 1);
                strh(r0 + 56, r2);
                r2 = adds(r3, r4);
                r3 = ldrb(r0 + 5);
                cmp(r3, 4);
                if (bne(null, 36)) return;
            case 30:
                r4 = ldr(r0 + 60);
                r3 = lsls(r2, 2);
                str(r3 + r4, r5);
            case 36:
                lr = emit_write_bytecode_byte_raw_code + 40 | 1;
                bl(this::emit_write_bytecode_byte_uint, 40);
                return;
            case 40:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246590, size=22, name='emit_write_bytecode_byte_qstr', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_qstr(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_qstr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r1 = movs(r1, 3);
                r4 = movs(r4, r2);
                lr = emit_write_bytecode_byte_qstr + 12 | 1;
                bl(this::emit_get_cur_to_write_bytecode, 12);
                return;
            case 12:
                strb(r0 + 1, r4);
                r4 = lsrs(r4, 8);
                strb(r0, r5);
                strb(r0 + 2, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246612, size=42, name='emit_write_bytecode_byte_unsigned_label', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_unsigned_label(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_unsigned_label + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldrb(r0 + 5);
                r5 = movs(r5, r1);
                r4 = movs(r4, 0);
                cmp(r3, 3);
                if (bls(null, 26)) return;
            case 12:
                r3 = ldr(r0 + 40);
                r4 = subs(r4, 3);
                r4 = subs(r4, r3);
                r3 = ldr(r0 + 28);
                r2 = lsls(r2, 2);
                r3 = ldr(r2 + r3);
                r4 = adds(r4, r3);
            case 26:
                r1 = movs(r1, 3);
                lr = emit_write_bytecode_byte_unsigned_label + 32 | 1;
                bl(this::emit_get_cur_to_write_bytecode, 32);
                return;
            case 32:
                strb(r0 + 1, r4);
                r4 = lsrs(r4, 8);
                strb(r0, r5);
                strb(r0 + 2, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246656, size=48, name='emit_write_bytecode_byte_signed_label', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_signed_label(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_signed_label + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = ldrb(r0 + 5);
                r5 = movs(r5, r1);
                r4 = movs(r4, 0);
                cmp(r3, 3);
                if (bls(null, 26)) return;
            case 12:
                r3 = ldr(r0 + 40);
                r4 = 0x00007ffd;
                r2 = lsls(r2, 2);
                r4 = subs(r4, r3);
                r3 = ldr(r0 + 28);
                r3 = ldr(r2 + r3);
                r4 = adds(r4, r3);
            case 26:
                r1 = movs(r1, 3);
                lr = emit_write_bytecode_byte_signed_label + 32 | 1;
                bl(this::emit_get_cur_to_write_bytecode, 32);
                return;
            case 32:
                strb(r0 + 1, r4);
                r4 = asrs(r4, 8);
                strb(r0, r5);
                strb(r0 + 2, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246704, size=38, name='emit_write_bytecode_byte_obj_constprop_8', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_write_bytecode_byte_obj_constprop_8(int offset) throws Exception
    {
        pc = emit_write_bytecode_byte_obj_constprop_8 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldr(r0 + 12);
                r2 = ldrh(r3 + 26);
                r3 = ldrh(r3 + 28);
                r3 = adds(r2, r3);
                r2 = ldrh(r0 + 52);
                r4 = adds(r2, 1);
                r2 = adds(r2, r3);
                r3 = ldrb(r0 + 5);
                strh(r0 + 52, r4);
                cmp(r3, 4);
                if (bne(null, 30)) return;
            case 24:
                r4 = ldr(r0 + 60);
                r3 = lsls(r2, 2);
                str(r3 + r4, r1);
            case 30:
                r1 = movs(r1, 23);
                lr = emit_write_bytecode_byte_obj_constprop_8 + 36 | 1;
                bl(this::emit_write_bytecode_byte_uint, 36);
                return;
            case 36:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246742, size=10, name='emit_bc_new', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_bc_new(int offset) throws Exception
    {
        pc = emit_bc_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = movs(r0, 64);
                lr = emit_bc_new + 8 | 1;
                bl(this::m_malloc0, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246752, size=16, name='emit_bc_set_max_num_labels', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_bc_set_max_num_labels(int offset) throws Exception
    {
        pc = emit_bc_set_max_num_labels + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                str(r0 + 24, r1);
                r0 = lsls(r1, 2);
                lr = emit_bc_set_max_num_labels + 12 | 1;
                bl(this::m_malloc, 12);
                return;
            case 12:
                str(r4 + 28, r0);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134246768, size=24, name='emit_bc_free', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_bc_free(int offset) throws Exception
    {
        pc = emit_bc_free + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r3 = ldr(r0 + 24);
                r0 = ldr(r0 + 28);
                r1 = lsls(r3, 2);
                lr = emit_bc_free + 14 | 1;
                bl(this::m_free, 14);
                return;
            case 14:
                r1 = movs(r1, 64);
                r0 = movs(r0, r4);
                lr = emit_bc_free + 22 | 1;
                bl(this::m_free, 22);
                return;
            case 22:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134247416, size=60, name='emit_bc_call_function_method_helper', path='build/py/emitbc.o', has_indirect=False)
    protected void emit_bc_call_function_method_helper(int offset) throws Exception
    {
        pc = emit_bc_call_function_method_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = ldr(sp + 16);
                r1 = subs(r1, r3);
                r4 = lsls(r0, 1);
                r0 = lsls(r0, 8);
                r0 = orrs(r0, r3);
                r3 = ldr(sp + 20);
                r1 = subs(r1, r4);
                r6 = movs(r6, r0);
                r4 = uxtb(r2);
                cmp(r3, 0);
                if (beq(null, 48)) return;
            case 26:
                r1 = subs(r1, 2);
                r0 = movs(r0, r5);
                lr = emit_bc_call_function_method_helper + 34 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 34);
                return;
            case 34:
                r2 = movs(r2, r6);
                r4 = adds(r4, 1);
                r1 = uxtb(r4);
            case 40:
                r0 = movs(r0, r5);
                lr = emit_bc_call_function_method_helper + 46 | 1;
                bl(this::emit_write_bytecode_byte_uint, 46);
                return;
            case 46:
                pop(true, R4, R5, R6);
                return;
            case 48:
                r0 = movs(r0, r5);
                lr = emit_bc_call_function_method_helper + 54 | 1;
                bl(this::mp_emit_bc_adjust_stack_size, 54);
                return;
            case 54:
                r2 = movs(r2, r6);
                r1 = movs(r1, r4);
                b(null, 40);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134250528, size=32, name='unlikely_raise_exc', path='build/py/parsenum.o', has_indirect=False)
    protected void unlikely_raise_exc(int offset) throws Exception
    {
        pc = unlikely_raise_exc + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                cmp(r1, 0);
                if (beq(null, 22)) return;
            case 8:
                r3 = mp_type_SyntaxError;
                r2 = ldr(r1 + 56);
                str(r0, r3);
                r1 = ldr(r1);
                r3 = movs(r3, 0);
                lr = unlikely_raise_exc + 22 | 1;
                bl(this::mp_obj_exception_add_traceback, 22);
                return;
            case 22:
                r0 = movs(r0, r4);
                lr = unlikely_raise_exc + 28 | 1;
                bl(this::nlr_jump, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134251630, size=26, name='read_bytes', path='build/py/persistentcode.o', has_indirect=False)
    protected void read_bytes(int offset) throws Exception
    {
        pc = read_bytes + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r0);
                r4 = movs(r4, r1);
                r5 = adds(r1, r2);
            case 8:
                cmp(r4, r5);
                if (bne(null, 14)) return;
            case 12:
                pop(true, R4, R5, R6);
                return;
            case 14:
                r0 = ldr(r6);
                r3 = ldr(r6 + 4);
                blx(r3, 20);
                return;
            case 20:
                strb(r4, r0);
                r4 = adds(r4, 1);
                b(null, 8);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134251656, size=30, name='read_uint', path='build/py/persistentcode.o', has_indirect=False)
    protected void read_uint(int offset) throws Exception
    {
        pc = read_uint + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r4 = movs(r4, 0);
                r6 = movs(r6, 127);
            case 8:
                r3 = ldr(r5 + 4);
                r0 = ldr(r5);
                blx(r3, 14);
                return;
            case 14:
                r3 = movs(r3, r0);
                r4 = lsls(r4, 7);
                r3 = ands(r3, r6);
                r4 = orrs(r4, r3);
                r3 = lsls(r0, 24);
                if (bmi(null, 8)) return;
            case 26:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134251686, size=48, name='load_qstr', path='build/py/persistentcode.o', has_indirect=False)
    protected void load_qstr(int offset) throws Exception
    {
        pc = load_qstr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r0);
                lr = load_qstr + 8 | 1;
                bl(this::read_uint, 8);
                return;
            case 8:
                r4 = movs(r4, r0);
                lr = load_qstr + 14 | 1;
                bl(this::m_malloc, 14);
                return;
            case 14:
                r5 = movs(r5, r0);
                r2 = movs(r2, r4);
                r1 = movs(r1, r0);
                r0 = movs(r0, r6);
                lr = load_qstr + 26 | 1;
                bl(this::read_bytes, 26);
                return;
            case 26:
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = load_qstr + 34 | 1;
                bl(this::qstr_from_strn, 34);
                return;
            case 34:
                r6 = movs(r6, r0);
                r1 = movs(r1, r4);
                r0 = movs(r0, r5);
                lr = load_qstr + 44 | 1;
                bl(this::m_free, 44);
                return;
            case 44:
                r0 = movs(r0, r6);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134251736, size=416, name='load_raw_code', path='build/py/persistentcode.o', has_indirect=False)
    protected void load_raw_code(int offset) throws Exception
    {
        pc = load_raw_code + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 60);
                r7 = movs(r7, r0);
                lr = load_raw_code + 10 | 1;
                bl(this::read_uint, 10);
                return;
            case 10:
                r6 = movs(r6, r0);
                lr = load_raw_code + 16 | 1;
                bl(this::m_malloc, 16);
                return;
            case 16:
                r2 = movs(r2, r6);
                r1 = movs(r1, r0);
                str(sp + 8, r0);
                r0 = movs(r0, r7);
                lr = load_raw_code + 28 | 1;
                bl(this::read_bytes, 28);
                return;
            case 28:
                r3 = ldr(sp + 8);
                r0 = add(sp, 32);
                str(sp + 32, r3);
                lr = load_raw_code + 38 | 1;
                bl(this::mp_decode_uint, 38);
                return;
            case 38:
                r0 = add(sp, 32);
                lr = load_raw_code + 44 | 1;
                bl(this::mp_decode_uint, 44);
                return;
            case 44:
                r3 = ldr(sp + 32);
                r0 = add(sp, 36);
                r2 = adds(r3, 1);
                str(sp + 32, r2);
                r2 = ldrb(r3);
                str(sp + 28, r2);
                r2 = adds(r3, 2);
                str(sp + 32, r2);
                r2 = adds(r3, 3);
                r4 = ldrb(r3 + 1);
                str(sp + 32, r2);
                r2 = ldrb(r3 + 2);
                r3 = adds(r3, 4);
                str(sp + 32, r3);
                str(sp + 36, r3);
                str(sp + 12, r2);
                lr = load_raw_code + 80 | 1;
                bl(this::mp_decode_uint, 80);
                return;
            case 80:
                r3 = ldr(sp + 32);
                r0 = adds(r3, r0);
                str(sp + 32, r0);
            case 86:
                r3 = ldr(sp + 32);
                r2 = adds(r3, 1);
                str(sp + 32, r2);
                r3 = ldrb(r3);
                cmp(r3, 255);
                if (bne(null, 86)) return;
            case 98:
                r0 = movs(r0, r7);
                lr = load_raw_code + 104 | 1;
                bl(this::load_qstr, 104);
                return;
            case 104:
                r5 = movs(r5, r0);
                r0 = movs(r0, r7);
                lr = load_raw_code + 112 | 1;
                bl(this::load_qstr, 112);
                return;
            case 112:
                r3 = ldr(sp + 36);
                strb(r3, r5);
                r3 = ldr(sp + 36);
                r5 = lsrs(r5, 8);
                strb(r3 + 1, r5);
                r3 = ldr(sp + 36);
                strb(r3 + 2, r0);
                r3 = ldr(sp + 36);
                r0 = lsrs(r0, 8);
                strb(r3 + 3, r0);
                r3 = ldr(sp + 8);
                r5 = ldr(sp + 32);
                r6 = adds(r3, r6);
            case 138:
                cmp(r6, r5);
                if (bhi(null, 242)) return;
            case 142:
                r0 = movs(r0, r7);
                lr = load_raw_code + 148 | 1;
                bl(this::read_uint, 148);
                return;
            case 148:
                str(sp + 20, r0);
                r0 = movs(r0, r7);
                lr = load_raw_code + 156 | 1;
                bl(this::read_uint, 156);
                return;
            case 156:
                r3 = ldr(sp + 12);
                str(sp + 24, r0);
                r4 = adds(r4, r3);
                r3 = ldr(sp + 20);
                r6 = movs(r6, 2);
                r0 = adds(r3, r0);
                r0 = adds(r0, r4);
                r0 = lsls(r0, 2);
                lr = load_raw_code + 176 | 1;
                bl(this::m_malloc, 176);
                return;
            case 176:
                r5 = movs(r5, r0);
                r4 = lsls(r4, 2);
                r3 = adds(r0, r4);
                str(sp + 12, r0);
                str(sp + 16, r3);
            case 186:
                r3 = ldr(sp + 16);
                cmp(r5, r3);
                if (bne(null, 272)) return;
            case 192:
                r3 = ldr(sp + 12);
                r3 = adds(r3, r4);
                r4 = movs(r4, 0);
                str(sp + 16, r3);
            case 200:
                r3 = ldr(sp + 20);
                cmp(r4, r3);
                if (bne(null, 286)) return;
            case 206:
                r5 = movs(r5, 0);
                r3 = ldr(sp + 16);
                r4 = lsls(r4, 2);
                r4 = adds(r3, r4);
            case 214:
                r3 = ldr(sp + 24);
                cmp(r5, r3);
                if (bne(null, 390)) return;
            case 220:
                lr = load_raw_code + 224 | 1;
                bl(this::mp_emit_glue_new_raw_code, 224);
                return;
            case 224:
                r4 = movs(r4, r0);
                r3 = ldr(sp + 28);
                r2 = ldr(sp + 12);
                r1 = ldr(sp + 8);
                lr = load_raw_code + 236 | 1;
                bl(this::mp_emit_glue_assign_bytecode, 236);
                return;
            case 236:
                r0 = movs(r0, r4);
                sp = add(sp, 60);
                pop(true, R4, R5, R6, R7);
                return;
            case 242:
                r1 = add(sp, 40);
                r0 = movs(r0, r5);
                lr = load_raw_code + 250 | 1;
                bl(this::mp_opcode_format, 250);
                return;
            case 250:
                cmp(r0, 1);
                if (bne(null, 266)) return;
            case 254:
                r0 = movs(r0, r7);
                lr = load_raw_code + 260 | 1;
                bl(this::load_qstr, 260);
                return;
            case 260:
                strb(r5 + 1, r0);
                r0 = lsrs(r0, 8);
                strb(r5 + 2, r0);
            case 266:
                r3 = ldr(sp + 40);
                r5 = adds(r5, r3);
                b(null, 138);
                return;
            case 272:
                r0 = movs(r0, r7);
                lr = load_raw_code + 278 | 1;
                bl(this::load_qstr, 278);
                return;
            case 278:
                r0 = lsls(r0, 2);
                r0 = orrs(r0, r6);
                r5 = stm(r5, R0);
                b(null, 186);
                return;
            case 286:
                r0 = ldr(r7);
                r3 = ldr(r7 + 4);
                blx(r3, 292);
                return;
            case 292:
                r5 = uxtb(r0);
                r0 = mp_const_ellipsis_obj;
                cmp(r5, 101);
                if (beq(null, 362)) return;
            case 300:
                r0 = movs(r0, r7);
                lr = load_raw_code + 306 | 1;
                bl(this::read_uint, 306);
                return;
            case 306:
                r6 = movs(r6, r0);
                r1 = movs(r1, r0);
                r0 = add(sp, 40);
                lr = load_raw_code + 316 | 1;
                bl(this::vstr_init_len, 316);
                return;
            case 316:
                r2 = movs(r2, r6);
                r1 = ldr(sp + 48);
                r0 = movs(r0, r7);
                lr = load_raw_code + 326 | 1;
                bl(this::read_bytes, 326);
                return;
            case 326:
                cmp(r5, 115);
                if (beq(null, 354)) return;
            case 330:
                r0 = mp_type_bytes;
                cmp(r5, 98);
                if (beq(null, 356)) return;
            case 336:
                r0 = ldr(sp + 48);
                r1 = ldr(sp + 44);
                cmp(r5, 105);
                if (bne(null, 372)) return;
            case 344:
                r3 = movs(r3, 0);
                r2 = movs(r2, 10);
                lr = load_raw_code + 352 | 1;
                bl(this::mp_parse_num_integer, 352);
                return;
            case 352:
                b(null, 362);
                return;
            case 354:
                r0 = mp_type_str;
            case 356:
                r1 = add(sp, 40);
                lr = load_raw_code + 362 | 1;
                bl(this::mp_obj_new_str_from_vstr, 362);
                return;
            case 362:
                r2 = ldr(sp + 16);
                r3 = lsls(r4, 2);
                str(r2 + r3, r0);
                r4 = adds(r4, 1);
                b(null, 200);
                return;
            case 372:
                r5 = subs(r5, 99);
                r2 = rsbs(r5, 0);
                r2 = adcs(r2, r5);
                r3 = movs(r3, 0);
                r2 = uxtb(r2);
                str(sp, r3);
                lr = load_raw_code + 388 | 1;
                bl(this::mp_parse_num_decimal, 388);
                return;
            case 388:
                b(null, 362);
                return;
            case 390:
                r0 = movs(r0, r7);
                lr = load_raw_code + 396 | 1;
                bl(null, 0, 396);
                return;
            case 396:
                r3 = lsls(r5, 2);
                str(r4 + r3, r0);
                r5 = adds(r5, 1);
                b(null, 214);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134253012, size=64, name='checked_fun_call', path='build/py/runtime.o', has_indirect=False)
    protected void checked_fun_call(int offset) throws Exception
    {
        pc = checked_fun_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r7 = movs(r7, r2);
                r6 = movs(r6, r3);
                cmp(r1, 0);
                if (beq(null, 42)) return;
            case 14:
                r0 = ldr(r3);
                lr = checked_fun_call + 20 | 1;
                bl(this::mp_obj_get_type, 20);
                return;
            case 20:
                r2 = ldr(r4 + 4);
                cmp(r2, r0);
                if (beq(null, 42)) return;
            case 26:
                r3 = ldrh(r0 + 6);
                r2 = ldrh(r2 + 6);
                r1 = checked_fun_call_str1_1;
                r0 = mp_type_TypeError;
                lr = checked_fun_call + 38 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 38);
                return;
            case 38:
                lr = checked_fun_call + 42 | 1;
                bl(this::nlr_jump, 42);
                return;
            case 42:
                r3 = movs(r3, r6);
                r2 = movs(r2, r7);
                r1 = movs(r1, r5);
                r0 = ldr(r4 + 8);
                lr = checked_fun_call + 54 | 1;
                bl(this::mp_call_function_n_kw, 54);
                return;
            case 54:
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134255772, size=44, name='m_malloc_fail', path='build/py/runtime.o', has_indirect=False)
    protected void m_malloc_fail(int offset) throws Exception
    {
        pc = m_malloc_fail + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = m_malloc_fail + 8 | 1;
                bl(this::gc_is_locked, 8);
                return;
            case 8:
                r3 = subs(r0, 0);
                r0 = mp_type_MemoryError;
                if (beq(null, 20)) return;
            case 14:
                r1 = m_malloc_fail_str1_1;
                lr = m_malloc_fail + 20 | 1;
                bl(this::mp_raise_msg, 20);
                return;
            case 20:
                r2 = movs(r2, r4);
                r1 = 0x08022720;
                lr = m_malloc_fail + 28 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 28);
                return;
            case 28:
                lr = m_malloc_fail + 32 | 1;
                bl(this::nlr_jump, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260508, size=44, name='array_unary_op', path='build/py/objarray.o', has_indirect=False)
    protected void array_unary_op(int offset) throws Exception
    {
        pc = array_unary_op + offset;
        switch (offset)
        {
            case 0:
                cmp(r0, 4);
                if (beq(null, 12)) return;
            case 4:
                cmp(r0, 5);
                if (beq(null, 24)) return;
            case 8:
                r0 = movs(r0, 0);
                b(null, 22);
                return;
            case 12:
                r3 = ldr(r1 + 8);
                r0 = mp_const_true_obj;
                cmp(r3, 0);
                if (bne(null, 22)) return;
            case 20:
                r0 = mp_const_false_obj;
            case 22:
                bx(lr);
                return;
            case 24:
                r0 = movs(r0, 1);
                r3 = ldr(r1 + 8);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260552, size=40, name='array_iterator_new', path='build/py/objarray.o', has_indirect=False)
    protected void array_iterator_new(int offset) throws Exception
    {
        pc = array_iterator_new + offset;
        switch (offset)
        {
            case 0:
                r3 = array_it_type;
                r2 = ldr(r0);
                str(r1, r3);
                r3 = movs(r3, 0);
                str(r1 + 8, r3);
                str(r1 + 12, r3);
                r3 = mp_type_memoryview;
                str(r1 + 4, r0);
                cmp(r2, r3);
                if (bne(null, 26)) return;
            case 20:
                r3 = ldr(r0 + 4);
                r3 = lsrs(r3, 8);
                str(r1 + 8, r3);
            case 26:
                r0 = movs(r0, r1);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260592, size=84, name='array_get_buffer', path='build/py/objarray.o', has_indirect=False)
    protected void array_get_buffer(int offset) throws Exception
    {
        pc = array_get_buffer + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = movs(r6, 127);
                r5 = movs(r5, r1);
                r1 = ldrb(r0 + 4);
                r4 = movs(r4, r0);
                r1 = ands(r1, r6);
                r7 = movs(r7, r2);
                r0 = movs(r0, 64);
                r2 = movs(r2, 0);
                lr = array_get_buffer + 22 | 1;
                bl(this::mp_binary_get_size, 22);
                return;
            case 22:
                r1 = ldr(r4 + 8);
                r2 = movs(r2, r0);
                r1 = muls(r0, r1);
                r0 = mp_type_memoryview;
                r3 = ldr(r4 + 12);
                r12 = mov(r0);
                str(r5, r3);
                str(r5 + 4, r1);
                r1 = ldrb(r4 + 4);
                r0 = movs(r0, 0);
                r6 = ands(r6, r1);
                str(r5 + 8, r6);
                r6 = ldr(r4);
                cmp(r6, r12);
                if (bne(null, 76)) return;
            case 52:
                r1 = sxtb(r1);
                cmp(r1, r0);
                if (blt(null, 64)) return;
            case 58:
                r0 = adds(r0, 1);
                r1 = lsls(r7, 30);
                if (bmi(null, 76)) return;
            case 64:
                r0 = ldr(r4 + 4);
                r0 = lsrs(r0, 8);
                r2 = muls(r0, r2);
                r0 = movs(r0, 0);
                r3 = adds(r3, r2);
                str(r5, r3);
            case 76:
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260676, size=68, name='array_new', path='build/py/objarray.o', has_indirect=False)
    protected void array_new(int offset) throws Exception
    {
        pc = array_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r2 = movs(r2, 0);
                r7 = movs(r7, r0);
                r5 = movs(r5, r1);
                r1 = movs(r1, r0);
                r0 = movs(r0, 64);
                lr = array_new + 16 | 1;
                bl(this::mp_binary_get_size, 16);
                return;
            case 16:
                r6 = movs(r6, r0);
                r0 = movs(r0, 16);
                lr = array_new + 24 | 1;
                bl(this::m_malloc, 24);
                return;
            case 24:
                r3 = mp_type_bytearray;
                r4 = movs(r4, r0);
                cmp(r7, 1);
                if (beq(null, 34)) return;
            case 32:
                r3 = mp_type_array;
            case 34:
                r0 = movs(r0, r5);
                strb(r4 + 4, r7);
                str(r4, r3);
                r3 = ldr(r4 + 4);
                str(r4 + 8, r5);
                r3 = uxtb(r3);
                r0 = muls(r6, r0);
                str(r4 + 4, r3);
                lr = array_new + 54 | 1;
                bl(this::m_malloc, 54);
                return;
            case 54:
                str(r4 + 12, r0);
                r0 = movs(r0, r4);
                pop(true, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260744, size=116, name='array_extend', path='build/py/objarray.o', has_indirect=False)
    protected void array_extend(int offset) throws Exception
    {
        pc = array_extend + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r4 = movs(r4, r0);
                r2 = movs(r2, 1);
                r0 = movs(r0, r1);
                r1 = add(sp, 4);
                lr = array_extend + 14 | 1;
                bl(this::mp_get_buffer_raise, 14);
                return;
            case 14:
                r1 = ldrb(r4 + 4);
                r2 = movs(r2, 0);
                r0 = movs(r0, 64);
                lr = array_extend + 24 | 1;
                bl(this::mp_binary_get_size, 24);
                return;
            case 24:
                r1 = movs(r1, r0);
                r5 = movs(r5, r0);
                r0 = ldr(sp + 8);
                lr = array_extend + 34 | 1;
                bl(this::__aeabi_uidiv, 34);
                return;
            case 34:
                r3 = ldr(r4 + 4);
                r6 = movs(r6, r0);
                r1 = lsrs(r3, 8);
                cmp(r1, r0);
                if (bhs(null, 98)) return;
            case 44:
                r3 = ldr(r4 + 8);
                r2 = adds(r3, r0);
                r1 = adds(r1, r3);
                r2 = muls(r5, r2);
                r1 = muls(r5, r1);
                r0 = ldr(r4 + 12);
                lr = array_extend + 60 | 1;
                bl(this::m_realloc, 60);
                return;
            case 60:
                r3 = ldr(r4 + 4);
                str(r4 + 12, r0);
                r3 = uxtb(r3);
                str(r4 + 4, r3);
            case 68:
                r2 = movs(r2, r5);
                r0 = ldr(r4 + 8);
                r3 = ldr(r4 + 12);
                r0 = muls(r5, r0);
                r2 = muls(r6, r2);
                r0 = adds(r3, r0);
                r1 = ldr(sp + 4);
                lr = array_extend + 86 | 1;
                bl(this::memcpy, 86);
                return;
            case 86:
                r3 = ldr(r4 + 8);
                r0 = mp_const_none_obj;
                r6 = adds(r3, r6);
                str(r4 + 8, r6);
                sp = add(sp, 16);
                pop(true, R4, R5, R6);
                return;
            case 98:
                r1 = subs(r1, r0);
                r1 = lsls(r1, 8);
                r3 = uxtb(r3);
                r1 = orrs(r1, r3);
                str(r4 + 4, r1);
                b(null, 68);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260860, size=112, name='array_append', path='build/py/objarray.o', has_indirect=False)
    protected void array_append(int offset) throws Exception
    {
        pc = array_append + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r7 = movs(r7, 255);
                r6 = ldr(r0 + 4);
                r4 = movs(r4, r0);
                str(sp + 4, r1);
                r6 = bics(r6, r7);
                if (bne(null, 76)) return;
            case 14:
                r1 = ldrb(r0 + 4);
                r2 = movs(r2, r6);
                r0 = movs(r0, 64);
                lr = array_append + 24 | 1;
                bl(this::mp_binary_get_size, 24);
                return;
            case 24:
                r3 = ldr(r4 + 4);
                r1 = ldr(r4 + 8);
                r3 = ands(r3, r7);
                r7 = movs(r7, 128);
                r1 = muls(r0, r1);
                r5 = movs(r5, r0);
                r7 = lsls(r7, 4);
                r7 = orrs(r7, r3);
                r2 = lsls(r0, 3);
                r2 = adds(r2, r1);
                str(r4 + 4, r7);
                r0 = ldr(r4 + 12);
                lr = array_append + 52 | 1;
                bl(this::m_realloc, 52);
                return;
            case 52:
                r3 = ldr(r4 + 4);
                str(r4 + 12, r0);
                r2 = lsrs(r3, 8);
                r3 = ldr(r4 + 8);
                r2 = subs(r2, 1);
                r3 = adds(r3, 1);
                r2 = muls(r5, r2);
                r5 = muls(r3, r5);
                r1 = movs(r1, r6);
                r0 = adds(r0, r5);
                lr = array_append + 76 | 1;
                bl(this::memset, 76);
                return;
            case 76:
                r0 = ldrb(r4 + 4);
                r3 = ldr(sp + 4);
                r2 = ldr(r4 + 8);
                r1 = ldr(r4 + 12);
                lr = array_append + 88 | 1;
                bl(this::mp_binary_set_val_array, 88);
                return;
            case 88:
                r3 = ldr(r4 + 8);
                r0 = mp_const_none_obj;
                r3 = adds(r3, 1);
                str(r4 + 8, r3);
                r3 = ldr(r4 + 4);
                r3 = subs(r3, 1);
                r3 = subs(r3, 255);
                str(r4 + 4, r3);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134260972, size=38, name='array_it_iternext', path='build/py/objarray.o', has_indirect=False)
    protected void array_it_iternext(int offset) throws Exception
    {
        pc = array_it_iternext + offset;
        switch (offset)
        {
            case 0:
                r1 = ldr(r0 + 4);
                push(true, r4, r5, r6);
                r2 = ldr(r0 + 12);
                r4 = ldr(r1 + 8);
                r3 = movs(r3, r0);
                r0 = movs(r0, 0);
                cmp(r2, r4);
                if (bhs(null, 36)) return;
            case 16:
                r4 = ldrb(r1 + 4);
                r0 = adds(r0, 127);
                r0 = ands(r0, r4);
                r4 = ldr(r3 + 8);
                r5 = adds(r2, 1);
                r1 = ldr(r1 + 12);
                r2 = adds(r2, r4);
                str(r3 + 12, r5);
                lr = array_it_iternext + 36 | 1;
                bl(this::mp_binary_get_val_array, 36);
                return;
            case 36:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134261012, size=592, name='array_subscr', path='build/py/objarray.o', has_indirect=True)
    protected void array_subscr(int offset) throws Exception
    {
        pc = array_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                sp = sub(sp, 44);
                r6 = subs(r2, 0);
                if (bne(null, 18)) return;
            case 10:
                r6 = movs(r6, 0);
            case 12:
                r0 = movs(r0, r6);
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 18:
                r5 = movs(r5, 3);
                r0 = ldr(r0 + 8);
                r5 = ands(r5, r1);
                r7 = mp_type_memoryview;
                if (beq(null, 30)) return;
            case 28:
                b(null, 490);
                return;
            case 30:
                r3 = mp_type_slice;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (beq(null, 40)) return;
            case 38:
                b(null, 490);
                return;
            case 40:
                r2 = add(sp, 16);
                lr = array_subscr + 46 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 46);
                return;
            case 46:
                cmp(r0, 0);
                if (bne(null, 56)) return;
            case 50:
                r0 = array_subscr_str1_1;
            case 52:
                lr = array_subscr + 56 | 1;
                bl(this::mp_raise_NotImplementedError, 56);
                return;
            case 56:
                r3 = movs(r3, 127);
                r1 = ldrb(r4 + 4);
                r2 = movs(r2, r5);
                r1 = ands(r1, r3);
                r0 = movs(r0, 64);
                cmp(r6, 4);
                if (bne(null, 72)) return;
            case 70:
                b(null, 390);
                return;
            case 72:
                lr = array_subscr + 76 | 1;
                bl(this::mp_binary_get_size, 76);
                return;
            case 76:
                r2 = movs(r2, 3);
                r5 = movs(r5, r0);
                r2 = ands(r2, r6);
                if (bne(null, 282)) return;
            case 84:
                r3 = ldr(r6);
                r1 = array_subscr | 1;
                hint(array_subscr | 1, this::array_subscr);
                r0 = ldr(r3 + 32);
                cmp(r0, r1);
                if (bne(null, 254)) return;
            case 94:
                r3 = movs(r3, 127);
                r1 = ldrb(r6 + 4);
                r0 = movs(r0, 64);
                r1 = ands(r1, r3);
                lr = array_subscr + 106 | 1;
                bl(this::mp_binary_get_size, 106);
                return;
            case 106:
                cmp(r0, r5);
                if (beq(null, 116)) return;
            case 110:
                r0 = 0x08022dad;
                lr = array_subscr + 116 | 1;
                bl(this::mp_raise_ValueError, 116);
                return;
            case 116:
                r3 = ldr(r6 + 8);
                str(sp + 8, r3);
                r3 = ldr(r6 + 12);
                str(sp + 12, r3);
                r3 = ldr(r6);
                cmp(r3, r7);
                if (bne(null, 142)) return;
            case 130:
                r3 = ldr(r6 + 4);
                r2 = ldr(sp + 12);
                r3 = lsrs(r3, 8);
                r3 = muls(r5, r3);
                r3 = adds(r2, r3);
            case 140:
                str(sp + 12, r3);
            case 142:
                r0 = ldr(sp + 16);
                r3 = ldr(sp + 20);
                r2 = ldr(sp + 8);
                r3 = subs(r0, r3);
                r3 = adds(r3, r2);
                str(sp + 4, r3);
                r2 = ldr(r4);
                r3 = mp_type_memoryview;
                r7 = ldr(r4 + 12);
                cmp(r2, r3);
                if (bne(null, 286)) return;
            case 164:
                r3 = ldrb(r4 + 4);
                r6 = movs(r6, 0);
                cmp(r3, 127);
                if (bls(null, 12)) return;
            case 172:
                r3 = ldr(sp + 4);
                cmp(r3, r6);
                if (bne(null, 110)) return;
            case 178:
                r3 = ldr(r4 + 4);
                r3 = lsrs(r3, 8);
                r3 = muls(r5, r3);
                r7 = adds(r7, r3);
            case 186:
                r0 = muls(r5, r0);
                r2 = ldr(sp + 8);
                r1 = ldr(sp + 12);
                r2 = muls(r5, r2);
                r0 = adds(r7, r0);
                lr = array_subscr + 200 | 1;
                bl(this::memcpy, 200);
                return;
            case 200:
                r6 = ldr(sp + 16);
                r1 = ldr(sp + 20);
                r12 = mov(r6);
                r3 = ldr(r4 + 8);
                r2 = subs(r3, r1);
                r3 = ldr(sp + 8);
                r1 = muls(r5, r1);
                r3 = add(r3, r12);
                r0 = movs(r0, r3);
                r0 = muls(r5, r0);
                r2 = muls(r5, r2);
                r1 = adds(r7, r1);
                r0 = adds(r7, r0);
                lr = array_subscr + 230 | 1;
                bl(this::memmove, 230);
                return;
            case 230:
                r1 = ldr(r4 + 8);
                r3 = ldr(sp + 4);
                r2 = ldr(sp + 4);
                r0 = adds(r3, r1);
                r2 = muls(r5, r2);
                r0 = muls(r5, r0);
                r2 = rsbs(r2, 0);
                r0 = adds(r7, r0);
                r1 = movs(r1, 0);
                lr = array_subscr + 252 | 1;
                bl(this::memset, 252);
                return;
            case 252:
                b(null, 376);
                return;
            case 254:
                r2 = mp_type_bytes;
                cmp(r3, r2);
                if (bne(null, 282)) return;
            case 260:
                cmp(r5, 1);
                if (bne(null, 110)) return;
            case 264:
                r2 = movs(r2, r5);
                r1 = add(sp, 28);
                r0 = movs(r0, r6);
                lr = array_subscr + 274 | 1;
                bl(this::mp_get_buffer_raise, 274);
                return;
            case 274:
                r3 = ldr(sp + 32);
                str(sp + 8, r3);
                r3 = ldr(sp + 28);
                b(null, 140);
                return;
            case 282:
                r0 = 0x08022dce;
                b(null, 52);
                return;
            case 286:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (ble(null, 186)) return;
            case 292:
                r3 = ldr(r4 + 4);
                r1 = lsrs(r3, 8);
                r3 = ldr(sp + 4);
                cmp(r1, r3);
                if (bge(null, 330)) return;
            case 302:
                r3 = ldr(r4 + 8);
                r2 = ldr(sp + 4);
                r1 = adds(r1, r3);
                r2 = adds(r2, r3);
                r0 = movs(r0, r7);
                r2 = muls(r5, r2);
                r1 = muls(r5, r1);
                lr = array_subscr + 320 | 1;
                bl(this::m_realloc, 320);
                return;
            case 320:
                r7 = movs(r7, r0);
                r3 = ldr(r4 + 4);
                str(r4 + 12, r0);
                r3 = uxtb(r3);
                str(r4 + 4, r3);
            case 330:
                r3 = ldr(sp + 8);
                r2 = ldr(sp + 16);
                r1 = ldr(sp + 20);
                r0 = adds(r3, r2);
                r3 = ldr(sp + 4);
                r2 = ldr(r4 + 8);
                r1 = muls(r5, r1);
                r2 = adds(r3, r2);
                r2 = subs(r2, r0);
                r0 = muls(r5, r0);
                r2 = muls(r5, r2);
                r1 = adds(r7, r1);
                r0 = adds(r7, r0);
                lr = array_subscr + 360 | 1;
                bl(this::memmove, 360);
                return;
            case 360:
                r0 = ldr(sp + 16);
                r2 = ldr(sp + 8);
                r0 = muls(r5, r0);
                r2 = muls(r5, r2);
                r0 = adds(r7, r0);
                r1 = ldr(sp + 12);
                lr = array_subscr + 376 | 1;
                bl(this::memmove, 376);
                return;
            case 376:
                r2 = ldr(r4 + 8);
                r3 = ldr(sp + 4);
                r12 = mov(r2);
                r3 = add(r3, r12);
                str(r4 + 8, r3);
            case 386:
                r6 = mp_const_none_obj;
                b(null, 12);
                return;
            case 390:
                lr = array_subscr + 394 | 1;
                bl(this::mp_binary_get_size, 394);
                return;
            case 394:
                r3 = ldr(r4);
                r5 = movs(r5, r0);
                cmp(r3, r7);
                if (bne(null, 446)) return;
            case 402:
                r0 = movs(r0, 16);
                lr = array_subscr + 408 | 1;
                bl(this::m_malloc, 408);
                return;
            case 408:
                r3 = movs(r3, r0);
                r6 = movs(r6, r0);
                r4 = ldm(r4, R0, R1, R2);
                r3 = stm(r3, R0, R1, R2);
                r2 = ldr(r4);
                str(r3, r2);
                r3 = ldr(r6 + 4);
                r1 = ldr(sp + 16);
                r3 = lsrs(r3, 8);
                r3 = adds(r3, r1);
                r2 = lsls(r3, 8);
                r3 = ldr(r6 + 4);
                r3 = uxtb(r3);
                r3 = orrs(r3, r2);
                str(r6 + 4, r3);
                r3 = ldr(sp + 20);
                r3 = subs(r3, r1);
                str(r6 + 8, r3);
                b(null, 12);
                return;
            case 446:
                r3 = ldr(sp + 20);
                str(sp + 4, r3);
                r3 = ldr(sp + 16);
                str(sp + 8, r3);
                r2 = ldr(sp + 8);
                r3 = ldr(sp + 4);
                r0 = ldrb(r4 + 4);
                r1 = subs(r3, r2);
                lr = array_subscr + 466 | 1;
                bl(this::array_new, 466);
                return;
            case 466:
                r1 = ldr(sp + 16);
                r2 = ldr(sp + 20);
                r6 = movs(r6, r0);
                r2 = subs(r2, r1);
                r2 = muls(r5, r2);
                r5 = muls(r1, r5);
                r1 = ldr(r4 + 12);
                r0 = ldr(r0 + 12);
                r1 = adds(r1, r5);
                lr = array_subscr + 488 | 1;
                bl(this::memcpy, 488);
                return;
            case 488:
                b(null, 12);
                return;
            case 490:
                r2 = movs(r2, r1);
                r3 = movs(r3, 0);
                r1 = movs(r1, r0);
                r0 = ldr(r4);
                lr = array_subscr + 502 | 1;
                bl(this::mp_get_index, 502);
                return;
            case 502:
                r1 = ldr(r4);
                r2 = movs(r2, r0);
                r3 = ldrb(r4 + 4);
                cmp(r1, r7);
                if (bne(null, 542)) return;
            case 512:
                r1 = ldr(r4 + 4);
                r1 = lsrs(r1, 8);
                r2 = adds(r0, r1);
                cmp(r6, 4);
                if (beq(null, 546)) return;
            case 522:
                cmp(r3, 127);
                if (bhi(null, 528)) return;
            case 526:
                b(null, 10);
                return;
            case 528:
                r0 = movs(r0, 127);
                r1 = ldr(r4 + 12);
                r0 = ands(r0, r3);
                r3 = movs(r3, r6);
                lr = array_subscr + 540 | 1;
                bl(this::mp_binary_set_val_array, 540);
                return;
            case 540:
                b(null, 386);
                return;
            case 542:
                cmp(r6, 4);
                if (bne(null, 528)) return;
            case 546:
                r0 = movs(r0, 127);
                r1 = ldr(r4 + 12);
                r0 = ands(r0, r3);
                lr = array_subscr + 556 | 1;
                bl(this::mp_binary_get_val_array, 556);
                return;
            case 556:
                r6 = movs(r6, r0);
                b(null, 12);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134261604, size=312, name='array_binary_op', path='build/py/objarray.o', has_indirect=False)
    protected void array_binary_op(int offset) throws Exception
    {
        pc = array_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r0);
                sp = sub(sp, 40);
                r4 = movs(r4, r1);
                r5 = movs(r5, r2);
                cmp(r0, 14);
                if (beq(null, 200)) return;
            case 14:
                if (bhi(null, 26)) return;
            case 16:
                cmp(r0, 2);
                if (bne(null, 22)) return;
            case 20:
                b(null, 246);
                return;
            case 22:
                r4 = movs(r4, 0);
                b(null, 194);
                return;
            case 26:
                cmp(r0, 26);
                if (beq(null, 98)) return;
            case 30:
                cmp(r0, 46);
                if (bne(null, 22)) return;
            case 34:
                r2 = movs(r2, 1);
                r1 = add(sp, 28);
                r0 = movs(r0, r5);
                lr = array_binary_op + 44 | 1;
                bl(this::mp_get_buffer, 44);
                return;
            case 44:
                r3 = movs(r3, 3);
                cmp(r0, 0);
                if (beq(null, 218)) return;
            case 50:
                tst(r4, r3);
                if (bne(null, 94)) return;
            case 54:
                r3 = mp_type_bytearray;
                r2 = ldr(r4);
                cmp(r2, r3);
                if (bne(null, 94)) return;
            case 62:
                r2 = movs(r2, 1);
                r1 = add(sp, 16);
                r0 = movs(r0, r4);
                lr = array_binary_op + 72 | 1;
                bl(this::array_get_buffer, 72);
                return;
            case 72:
                r3 = movs(r3, 1);
                r2 = ldr(sp + 28);
                str(sp, r3);
                r1 = ldr(sp + 20);
                r3 = ldr(sp + 32);
                r0 = ldr(sp + 16);
                lr = array_binary_op + 88 | 1;
                bl(this::find_subbytes, 88);
                return;
            case 88:
                r4 = mp_const_true_obj;
                cmp(r0, 0);
                if (bne(null, 194)) return;
            case 94:
                r4 = mp_const_false_obj;
                b(null, 194);
                return;
            case 98:
                r2 = movs(r2, 1);
                r1 = add(sp, 16);
                r0 = movs(r0, r4);
                lr = array_binary_op + 108 | 1;
                bl(this::array_get_buffer, 108);
                return;
            case 108:
                r0 = movs(r0, r5);
                r2 = movs(r2, 1);
                r1 = add(sp, 28);
                lr = array_binary_op + 118 | 1;
                bl(this::mp_get_buffer_raise, 118);
                return;
            case 118:
                r3 = ldr(sp + 24);
                r2 = movs(r2, 0);
                str(sp + 12, r3);
                r3 = mov(sp);
                r0 = movs(r0, 64);
                r1 = ldrb(r3 + 12);
                lr = array_binary_op + 134 | 1;
                bl(this::mp_binary_get_size, 134);
                return;
            case 134:
                r1 = movs(r1, r0);
                r6 = movs(r6, r0);
                r0 = ldr(sp + 32);
                lr = array_binary_op + 144 | 1;
                bl(this::__aeabi_uidiv, 144);
                return;
            case 144:
                r3 = ldr(sp + 24);
                r1 = ldr(r4 + 8);
                str(sp + 12, r3);
                r3 = mov(sp);
                r1 = adds(r0, r1);
                r5 = movs(r5, r0);
                r0 = ldrb(r3 + 12);
                lr = array_binary_op + 162 | 1;
                bl(this::array_new, 162);
                return;
            case 162:
                r3 = ldr(sp + 20);
                r4 = movs(r4, r0);
                r2 = movs(r2, r3);
                r1 = ldr(sp + 16);
                r0 = ldr(r0 + 12);
                str(sp + 12, r3);
                lr = array_binary_op + 178 | 1;
                bl(this::memcpy, 178);
                return;
            case 178:
                r2 = movs(r2, r5);
                r0 = ldr(sp + 20);
                r3 = ldr(r4 + 12);
                r2 = muls(r6, r2);
                r0 = adds(r3, r0);
                r1 = ldr(sp + 28);
                lr = array_binary_op + 194 | 1;
                bl(this::memcpy, 194);
                return;
            case 194:
                r0 = movs(r0, r4);
                sp = add(sp, 40);
                pop(true, R4, R5, R6);
                return;
            case 200:
                r3 = mp_type_memoryview;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (beq(null, 22)) return;
            case 208:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = array_binary_op + 216 | 1;
                bl(this::array_extend, 216);
                return;
            case 216:
                b(null, 194);
                return;
            case 218:
                r2 = lsls(r5, 31);
                if (bmi(null, 240)) return;
            case 222:
                tst(r5, r3);
                if (bne(null, 94)) return;
            case 226:
                r3 = ldr(r5);
                r2 = mp_type_int;
                cmp(r3, r2);
                if (beq(null, 240)) return;
            case 234:
                r2 = mp_type_float;
                cmp(r3, r2);
                if (bne(null, 94)) return;
            case 240:
                r0 = movs(r0, 0);
                lr = array_binary_op + 246 | 1;
                bl(this::mp_raise_NotImplementedError, 246);
                return;
            case 246:
                r2 = movs(r2, 1);
                r1 = add(sp, 16);
                r0 = movs(r0, r4);
                lr = array_binary_op + 256 | 1;
                bl(this::array_get_buffer, 256);
                return;
            case 256:
                r2 = movs(r2, 1);
                r1 = add(sp, 28);
                r0 = movs(r0, r5);
                lr = array_binary_op + 266 | 1;
                bl(this::mp_get_buffer, 266);
                return;
            case 266:
                cmp(r0, 0);
                if (beq(null, 94)) return;
            case 270:
                r3 = ldr(sp + 32);
                r2 = ldr(sp + 20);
                str(sp, r3);
                r1 = ldr(sp + 16);
                r3 = ldr(sp + 28);
                r0 = movs(r0, r6);
                lr = array_binary_op + 286 | 1;
                bl(this::mp_seq_cmp_bytes, 286);
                return;
            case 286:
                b(null, 88);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134261916, size=180, name='array_construct', path='build/py/objarray.o', has_indirect=False)
    protected void array_construct(int offset) throws Exception
    {
        pc = array_construct + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                sp = sub(sp, 28);
                r6 = movs(r6, r1);
                cmp(r0, 1);
                if (beq(null, 30)) return;
            case 12:
                r3 = lsls(r1, 30);
                if (bne(null, 94)) return;
            case 16:
                r3 = ldr(r1);
                r2 = mp_type_bytes;
                cmp(r3, r2);
                if (beq(null, 30)) return;
            case 24:
                r2 = mp_type_bytearray;
                cmp(r3, r2);
                if (bne(null, 94)) return;
            case 30:
                r2 = movs(r2, 1);
                r1 = add(sp, 12);
                r0 = movs(r0, r6);
                lr = array_construct + 40 | 1;
                bl(this::mp_get_buffer, 40);
                return;
            case 40:
                cmp(r0, 0);
                if (beq(null, 94)) return;
            case 44:
                r2 = movs(r2, 0);
                r1 = movs(r1, r5);
                r0 = movs(r0, 64);
                lr = array_construct + 54 | 1;
                bl(this::mp_binary_get_size, 54);
                return;
            case 54:
                r1 = movs(r1, r0);
                r7 = movs(r7, r0);
                r0 = ldr(sp + 16);
                lr = array_construct + 64 | 1;
                bl(this::__aeabi_uidiv, 64);
                return;
            case 64:
                r6 = movs(r6, r0);
                r1 = movs(r1, r0);
                r0 = movs(r0, r5);
                lr = array_construct + 74 | 1;
                bl(this::array_new, 74);
                return;
            case 74:
                r2 = movs(r2, r6);
                r4 = movs(r4, r0);
                r2 = muls(r7, r2);
                r1 = ldr(sp + 12);
                r0 = ldr(r0 + 12);
                lr = array_construct + 88 | 1;
                bl(this::memcpy, 88);
                return;
            case 88:
                r0 = movs(r0, r4);
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 94:
                r0 = movs(r0, r6);
                lr = array_construct + 100 | 1;
                bl(this::mp_obj_len_maybe, 100);
                return;
            case 100:
                r7 = subs(r0, 0);
                if (beq(null, 106)) return;
            case 104:
                r7 = asrs(r0, 1);
            case 106:
                r1 = movs(r1, r7);
                r0 = movs(r0, r5);
                lr = array_construct + 114 | 1;
                bl(this::array_new, 114);
                return;
            case 114:
                r1 = movs(r1, 0);
                r4 = movs(r4, r0);
                r0 = movs(r0, r6);
                lr = array_construct + 124 | 1;
                bl(this::mp_getiter, 124);
                return;
            case 124:
                r6 = movs(r6, 0);
                str(sp, r0);
            case 128:
                r0 = ldr(sp);
                lr = array_construct + 134 | 1;
                bl(this::mp_iternext, 134);
                return;
            case 134:
                r3 = subs(r0, 0);
                if (beq(null, 88)) return;
            case 138:
                cmp(r7, 0);
                if (bne(null, 152)) return;
            case 142:
                r1 = movs(r1, r3);
                r0 = movs(r0, r4);
                lr = array_construct + 150 | 1;
                bl(this::array_append, 150);
                return;
            case 150:
                b(null, 128);
                return;
            case 152:
                r2 = adds(r6, 1);
                str(sp + 4, r2);
                r1 = ldr(r4 + 12);
                r2 = movs(r2, r6);
                r0 = movs(r0, r5);
                lr = array_construct + 166 | 1;
                bl(this::mp_binary_set_val_array, 166);
                return;
            case 166:
                r6 = ldr(sp + 4);
                b(null, 128);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262096, size=50, name='array_make_new', path='build/py/objarray.o', has_indirect=False)
    protected void array_make_new(int offset) throws Exception
    {
        pc = array_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4, r5, r6);
                r6 = movs(r6, r1);
                r5 = movs(r5, 0);
                r4 = movs(r4, r3);
                r1 = movs(r1, r2);
                r3 = movs(r3, 2);
                r2 = movs(r2, 1);
                r0 = movs(r0, r6);
                str(sp, r5);
                lr = array_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r0 = ldr(r4);
                lr = array_make_new + 28 | 1;
                bl(this::mp_obj_str_get_str, 28);
                return;
            case 28:
                r0 = ldrb(r0);
                cmp(r6, 1);
                if (bne(null, 42)) return;
            case 34:
                r1 = movs(r1, r5);
                lr = array_make_new + 40 | 1;
                bl(this::array_new, 40);
                return;
            case 40:
                pop(true, R1, R2, R4, R5, R6);
                return;
            case 42:
                r1 = ldr(r4 + 4);
                lr = array_make_new + 48 | 1;
                bl(this::array_construct, 48);
                return;
            case 48:
                b(null, 40);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262148, size=140, name='array_print', path='build/py/objarray.o', has_indirect=False)
    protected void array_print(int offset) throws Exception
    {
        pc = array_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = ldrb(r1 + 4);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                cmp(r6, 1);
                if (bne(null, 40)) return;
            case 12:
                r1 = array_print_str1_1;
                lr = array_print + 18 | 1;
                bl(this::mp_print_str, 18);
                return;
            case 18:
                r3 = movs(r3, r6);
                r2 = ldr(r5 + 8);
                r1 = ldr(r5 + 12);
                r0 = movs(r0, r4);
                lr = array_print + 30 | 1;
                bl(this::mp_str_print_quoted, 30);
                return;
            case 30:
                r1 = 0x08022c2e;
                r0 = movs(r0, r4);
                lr = array_print + 38 | 1;
                bl(this::mp_print_str, 38);
                return;
            case 38:
                pop(true, R4, R5, R6);
                return;
            case 40:
                r2 = movs(r2, r6);
                r1 = 0x08022d68;
                lr = array_print + 48 | 1;
                bl(this::mp_printf, 48);
                return;
            case 48:
                r3 = ldr(r5 + 8);
                cmp(r3, 0);
                if (beq(null, 30)) return;
            case 54:
                r1 = 0x08022d73;
                r0 = movs(r0, r4);
                lr = array_print + 62 | 1;
                bl(this::mp_print_str, 62);
                return;
            case 62:
                r6 = movs(r6, 0);
            case 64:
                r3 = ldr(r5 + 8);
                cmp(r3, r6);
                if (bhi(null, 80)) return;
            case 70:
                r1 = 0x08022d7a;
                r0 = movs(r0, r4);
                lr = array_print + 78 | 1;
                bl(this::mp_print_str, 78);
                return;
            case 78:
                b(null, 30);
                return;
            case 80:
                cmp(r6, 0);
                if (beq(null, 92)) return;
            case 84:
                r1 = 0x08022d77;
                r0 = movs(r0, r4);
                lr = array_print + 92 | 1;
                bl(this::mp_print_str, 92);
                return;
            case 92:
                r2 = movs(r2, r6);
                r1 = ldr(r5 + 12);
                r0 = ldrb(r5 + 4);
                lr = array_print + 102 | 1;
                bl(this::mp_binary_get_val_array, 102);
                return;
            case 102:
                r2 = movs(r2, 1);
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = array_print + 112 | 1;
                bl(this::mp_obj_print_helper, 112);
                return;
            case 112:
                r6 = adds(r6, 1);
                b(null, 64);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262288, size=100, name='bytearray_make_new', path='build/py/objarray.o', has_indirect=False)
    protected void bytearray_make_new(int offset) throws Exception
    {
        pc = bytearray_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                r5 = movs(r5, r3);
                str(sp, r2);
                r3 = movs(r3, 1);
                r0 = movs(r0, r4);
                lr = bytearray_make_new + 20 | 1;
                bl(this::mp_arg_check_num, 20);
                return;
            case 20:
                cmp(r4, 0);
                if (bne(null, 36)) return;
            case 24:
                r1 = movs(r1, r4);
                r0 = movs(r0, 1);
                lr = bytearray_make_new + 32 | 1;
                bl(this::array_new, 32);
                return;
            case 32:
                r4 = movs(r4, r0);
                b(null, 82);
                return;
            case 36:
                r1 = ldr(r5);
                r3 = lsls(r1, 31);
                if (bmi(null, 54)) return;
            case 42:
                r3 = lsls(r1, 30);
                if (bne(null, 86)) return;
            case 46:
                r3 = mp_type_int;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 86)) return;
            case 54:
                r0 = movs(r0, r1);
                lr = bytearray_make_new + 60 | 1;
                bl(this::mp_obj_get_int, 60);
                return;
            case 60:
                r1 = movs(r1, r0);
                r5 = movs(r5, r0);
                r0 = movs(r0, 1);
                lr = bytearray_make_new + 70 | 1;
                bl(this::array_new, 70);
                return;
            case 70:
                r2 = movs(r2, r5);
                r4 = movs(r4, r0);
                r1 = movs(r1, 0);
                r0 = ldr(r0 + 12);
                lr = bytearray_make_new + 82 | 1;
                bl(this::memset, 82);
                return;
            case 82:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5);
                return;
            case 86:
                r0 = movs(r0, 1);
                lr = bytearray_make_new + 92 | 1;
                bl(this::array_construct, 92);
                return;
            case 92:
                b(null, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262424, size=102, name='memoryview_make_new', path='build/py/objarray.o', has_indirect=False)
    protected void memoryview_make_new(int offset) throws Exception
    {
        pc = memoryview_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r3);
                r6 = movs(r6, 0);
                r3 = movs(r3, 1);
                sp = sub(sp, 36);
                r0 = movs(r0, r1);
                str(sp, r6);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = memoryview_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r2 = movs(r2, 1);
                r1 = add(sp, 20);
                r0 = ldr(r5);
                lr = memoryview_make_new + 32 | 1;
                bl(this::mp_get_buffer_raise, 32);
                return;
            case 32:
                r3 = ldr(sp + 28);
                r2 = movs(r2, r6);
                str(sp + 12, r3);
                r3 = mov(sp);
                r4 = ldrb(r3 + 12);
                r0 = movs(r0, 64);
                r1 = movs(r1, r4);
                r7 = ldr(sp + 24);
                lr = memoryview_make_new + 52 | 1;
                bl(this::mp_binary_get_size, 52);
                return;
            case 52:
                r1 = movs(r1, r0);
                r0 = movs(r0, r7);
                lr = memoryview_make_new + 60 | 1;
                bl(this::__aeabi_uidiv, 60);
                return;
            case 60:
                r2 = ldr(sp + 20);
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = memoryview_make_new + 70 | 1;
                bl(this::mp_obj_new_memoryview, 70);
                return;
            case 70:
                r2 = movs(r2, 3);
                r4 = movs(r4, r0);
                r1 = add(sp, 20);
                r0 = ldr(r5);
                lr = memoryview_make_new + 82 | 1;
                bl(this::mp_get_buffer, 82);
                return;
            case 82:
                cmp(r0, r6);
                if (beq(null, 96)) return;
            case 86:
                r3 = movs(r3, 128);
                r2 = ldrb(r4 + 4);
                r3 = rsbs(r3, 0);
                r3 = orrs(r3, r2);
                strb(r4 + 4, r3);
            case 96:
                r0 = movs(r0, r4);
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262714, size=16, name='bool_binary_op', path='build/py/objbool.o', has_indirect=False)
    protected void bool_binary_op(int offset) throws Exception
    {
        pc = bool_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r1 + 4);
                r1 = movs(r1, 1);
                r3 = lsls(r3, 1);
                r1 = orrs(r1, r3);
                lr = bool_binary_op + 14 | 1;
                bl(this::mp_binary_op, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262730, size=26, name='bool_unary_op', path='build/py/objbool.o', has_indirect=False)
    protected void bool_unary_op(int offset) throws Exception
    {
        pc = bool_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, 0);
                cmp(r0, 5);
                if (beq(null, 22)) return;
            case 8:
                r3 = ldrb(r1 + 4);
                r1 = movs(r1, 1);
                r3 = lsls(r3, 1);
                r1 = orrs(r1, r3);
                lr = bool_unary_op + 20 | 1;
                bl(this::mp_unary_op, 20);
                return;
            case 20:
                r3 = movs(r3, r0);
            case 22:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262756, size=52, name='bool_make_new', path='build/py/objbool.o', has_indirect=False)
    protected void bool_make_new(int offset) throws Exception
    {
        pc = bool_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                r5 = movs(r5, r3);
                str(sp, r2);
                r3 = movs(r3, 1);
                r0 = movs(r0, r4);
                lr = bool_make_new + 20 | 1;
                bl(this::mp_arg_check_num, 20);
                return;
            case 20:
                cmp(r4, 0);
                if (beq(null, 36)) return;
            case 24:
                r0 = ldr(r5);
                lr = bool_make_new + 30 | 1;
                bl(this::mp_obj_is_true, 30);
                return;
            case 30:
                r3 = mp_const_true_obj;
                cmp(r0, 0);
                if (bne(null, 38)) return;
            case 36:
                r3 = mp_const_false_obj;
            case 38:
                r0 = movs(r0, r3);
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262808, size=48, name='bool_print', path='build/py/objbool.o', has_indirect=False)
    protected void bool_print(int offset) throws Exception
    {
        pc = bool_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldrb(r1 + 4);
                cmp(r2, 3);
                if (bne(null, 22)) return;
            case 8:
                r1 = mp_vprintf_str1_1;
                cmp(r3, 0);
                if (bne(null, 16)) return;
            case 14:
                r1 = 0x08021a75;
            case 16:
                lr = bool_print + 20 | 1;
                bl(this::mp_print_str, 20);
                return;
            case 20:
                pop(true, R4);
                return;
            case 22:
                r1 = 0x08021b7e;
                cmp(r3, 0);
                if (bne(null, 16)) return;
            case 28:
                r1 = str1_1__2;
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262856, size=64, name='bound_meth_print', path='build/py/objboundmeth.o', has_indirect=False)
    protected void bound_meth_print(int offset) throws Exception
    {
        pc = bound_meth_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r2 = movs(r2, r1);
                r1 = bound_meth_print_str1_1;
                lr = bound_meth_print + 14 | 1;
                bl(this::mp_printf, 14);
                return;
            case 14:
                r1 = ldr(r5 + 8);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = bound_meth_print + 24 | 1;
                bl(this::mp_obj_print_helper, 24);
                return;
            case 24:
                r1 = 0x08021b5c;
                r0 = movs(r0, r4);
                lr = bound_meth_print + 32 | 1;
                bl(this::mp_print_str, 32);
                return;
            case 32:
                r1 = ldr(r5 + 4);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = bound_meth_print + 42 | 1;
                bl(this::mp_obj_print_helper, 42);
                return;
            case 42:
                r1 = 0x08025585;
                r0 = movs(r0, r4);
                lr = bound_meth_print + 50 | 1;
                bl(this::mp_print_str, 50);
                return;
            case 50:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134262920, size=30, name='bound_meth_attr', path='build/py/objboundmeth.o', has_indirect=False)
    protected void bound_meth_attr(int offset) throws Exception
    {
        pc = bound_meth_attr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r2);
                push(true, r4);
                r4 = movs(r4, r2);
                cmp(r3, 0);
                if (bne(null, 28)) return;
            case 10:
                cmp(r1, 57);
                if (bne(null, 28)) return;
            case 14:
                r0 = ldr(r0 + 4);
                lr = bound_meth_attr + 20 | 1;
                bl(this::mp_obj_fun_get_name, 20);
                return;
            case 20:
                r3 = lsls(r0, 2);
                r0 = movs(r0, 2);
                r0 = orrs(r0, r3);
                str(r4, r0);
            case 28:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263012, size=18, name='bound_meth_call', path='build/py/objboundmeth.o', has_indirect=False)
    protected void bound_meth_call(int offset) throws Exception
    {
        pc = bound_meth_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2);
                str(sp, r3);
                r3 = movs(r3, r2);
                r2 = movs(r2, r1);
                r1 = ldr(r0 + 8);
                r0 = ldr(r0 + 4);
                lr = bound_meth_call + 16 | 1;
                bl(this::mp_call_method_self_n_kw, 16);
                return;
            case 16:
                pop(true, R1, R2, R3);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263060, size=60, name='cell_print', path='build/py/objcell.o', has_indirect=False)
    protected void cell_print(int offset) throws Exception
    {
        pc = cell_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r2 = ldr(r1 + 4);
                r1 = cell_print_str1_1;
                r4 = movs(r4, r0);
                lr = cell_print + 14 | 1;
                bl(this::mp_printf, 14);
                return;
            case 14:
                r1 = ldr(r5 + 4);
                cmp(r1, 0);
                if (bne(null, 38)) return;
            case 20:
                r1 = 0x08022f8e;
                r0 = movs(r0, r4);
                lr = cell_print + 28 | 1;
                bl(this::mp_print_str, 28);
                return;
            case 28:
                r1 = 0x08025585;
                r0 = movs(r0, r4);
                lr = cell_print + 36 | 1;
                bl(this::mp_print_str, 36);
                return;
            case 36:
                pop(true, R4, R5, R6);
                return;
            case 38:
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = cell_print + 46 | 1;
                bl(this::mp_obj_print_helper, 46);
                return;
            case 46:
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263152, size=148, name='closure_call', path='build/py/objclosure.o', has_indirect=False)
    protected void closure_call(int offset) throws Exception
    {
        pc = closure_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = ldr(r0 + 8);
                sp = sub(sp, 44);
                str(sp, r1);
                r7 = adds(r5, r1);
                r1 = movs(r1, r0);
                r1 = adds(r1, 12);
                str(sp + 8, r1);
                r1 = ldr(sp);
                str(sp + 12, r3);
                r3 = lsls(r2, 1);
                r6 = movs(r6, r2);
                r2 = adds(r7, r3);
                r3 = adds(r3, r1);
                r3 = lsls(r3, 2);
                r4 = movs(r4, r0);
                str(sp + 4, r3);
                cmp(r2, 5);
                if (bhi(null, 82)) return;
            case 38:
                r5 = lsls(r5, 2);
                r2 = movs(r2, r5);
                r1 = ldr(sp + 8);
                r0 = add(sp, 20);
                lr = closure_call + 50 | 1;
                bl(this::memcpy, 50);
                return;
            case 50:
                r3 = add(sp, 20);
                r0 = adds(r3, r5);
                r2 = ldr(sp + 4);
                r1 = ldr(sp + 12);
                lr = closure_call + 62 | 1;
                bl(this::memcpy, 62);
                return;
            case 62:
                r0 = ldr(r4 + 4);
                r3 = add(sp, 20);
                r2 = movs(r2, r6);
                r1 = movs(r1, r7);
                lr = closure_call + 74 | 1;
                bl(this::mp_call_function_n_kw, 74);
                return;
            case 74:
                r4 = movs(r4, r0);
            case 76:
                r0 = movs(r0, r4);
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 82:
                r7 = lsls(r2, 2);
                r0 = movs(r0, r7);
                lr = closure_call + 90 | 1;
                bl(this::m_malloc, 90);
                return;
            case 90:
                r5 = movs(r5, r0);
                r3 = ldr(r4 + 8);
                r1 = ldr(sp + 8);
                r2 = lsls(r3, 2);
                lr = closure_call + 102 | 1;
                bl(this::memcpy, 102);
                return;
            case 102:
                r3 = ldr(r4 + 8);
                r2 = ldr(sp + 4);
                r0 = lsls(r3, 2);
                r1 = ldr(sp + 12);
                r0 = adds(r5, r0);
                lr = closure_call + 116 | 1;
                bl(this::memcpy, 116);
                return;
            case 116:
                r2 = ldr(r4 + 8);
                r3 = ldr(sp);
                r12 = mov(r2);
                r3 = add(r3, r12);
                r1 = movs(r1, r3);
                r2 = movs(r2, r6);
                r3 = movs(r3, r5);
                r0 = ldr(r4 + 4);
                lr = closure_call + 136 | 1;
                bl(this::mp_call_function_n_kw, 136);
                return;
            case 136:
                r1 = movs(r1, r7);
                r4 = movs(r4, r0);
                r0 = movs(r0, r5);
                lr = closure_call + 146 | 1;
                bl(this::m_free, 146);
                return;
            case 146:
                b(null, 76);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263300, size=112, name='closure_print', path='build/py/objclosure.o', has_indirect=False)
    protected void closure_print(int offset) throws Exception
    {
        pc = closure_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                r1 = closure_print_str1_1;
                lr = closure_print + 12 | 1;
                bl(this::mp_print_str, 12);
                return;
            case 12:
                r2 = movs(r2, 1);
                r1 = ldr(r5 + 4);
                r0 = movs(r0, r4);
                lr = closure_print + 22 | 1;
                bl(this::mp_obj_print_helper, 22);
                return;
            case 22:
                r3 = ldr(r5 + 8);
                r2 = movs(r2, r5);
                r1 = 0x08022fda;
                r0 = movs(r0, r4);
                lr = closure_print + 34 | 1;
                bl(this::mp_printf, 34);
                return;
            case 34:
                r6 = movs(r6, 0);
            case 36:
                r3 = ldr(r5 + 8);
                cmp(r3, r6);
                if (bhi(null, 52)) return;
            case 42:
                r1 = 0x08025585;
                r0 = movs(r0, r4);
                lr = closure_print + 50 | 1;
                bl(this::mp_print_str, 50);
                return;
            case 50:
                pop(true, R4, R5, R6);
                return;
            case 52:
                r3 = lsls(r6, 2);
                r3 = adds(r5, r3);
                r1 = ldr(r3 + 12);
                cmp(r1, 0);
                if (bne(null, 82)) return;
            case 62:
                r1 = 0x08022f8e;
                r0 = movs(r0, r4);
                lr = closure_print + 70 | 1;
                bl(this::mp_print_str, 70);
                return;
            case 70:
                r1 = 0x080206b7;
                r0 = movs(r0, r4);
                lr = closure_print + 78 | 1;
                bl(this::mp_print_str, 78);
                return;
            case 78:
                r6 = adds(r6, 1);
                b(null, 36);
                return;
            case 82:
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = closure_print + 90 | 1;
                bl(this::mp_obj_print_helper, 90);
                return;
            case 90:
                b(null, 70);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263460, size=40, name='complex_attr', path='build/py/objcomplex.o', has_indirect=False)
    protected void complex_attr(int offset) throws Exception
    {
        pc = complex_attr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r2);
                push(true, r4);
                r4 = movs(r4, r2);
                cmp(r3, 0);
                if (bne(null, 26)) return;
            case 10:
                r3 = movs(r3, 200);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 28)) return;
            case 18:
                r0 = ldr(r0 + 4);
            case 20:
                lr = complex_attr + 24 | 1;
                bl(this::mp_obj_new_float, 24);
                return;
            case 24:
                str(r4, r0);
            case 26:
                pop(true, R4);
                return;
            case 28:
                r3 = movs(r3, 82);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 26)) return;
            case 36:
                r0 = ldr(r0 + 8);
                b(null, 20);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263500, size=160, name='complex_print', path='build/py/objcomplex.o', has_indirect=False)
    protected void complex_print(int offset) throws Exception
    {
        pc = complex_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = ldr(r1 + 4);
                sp = sub(sp, 24);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r0 = adds(r6, 0);
                r1 = movs(r1, 0);
                lr = complex_print + 18 | 1;
                bl(this::__aeabi_fcmpeq, 18);
                return;
            case 18:
                r3 = movs(r3, 7);
                cmp(r0, 0);
                if (beq(null, 56)) return;
            case 24:
                r2 = movs(r2, 0);
                str(sp, r3);
                str(sp + 4, r2);
                r1 = add(sp, 8);
                r2 = adds(r2, 16);
                r3 = adds(r3, 96);
                r0 = ldr(r5 + 8);
                lr = complex_print + 42 | 1;
                bl(this::mp_format_float, 42);
                return;
            case 42:
                r1 = complex_print_str1_1;
                r2 = add(sp, 8);
            case 46:
                r0 = movs(r0, r4);
                lr = complex_print + 52 | 1;
                bl(this::mp_printf, 52);
                return;
            case 52:
                sp = add(sp, 24);
                pop(true, R4, R5, R6);
                return;
            case 56:
                str(sp + 4, r0);
                str(sp, r3);
                r2 = movs(r2, 16);
                r3 = movs(r3, 103);
                r1 = add(sp, 8);
                r0 = adds(r6, 0);
                lr = complex_print + 72 | 1;
                bl(this::mp_format_float, 72);
                return;
            case 72:
                r1 = 0x08023030;
                r2 = add(sp, 8);
                r0 = movs(r0, r4);
                lr = complex_print + 82 | 1;
                bl(this::mp_printf, 82);
                return;
            case 82:
                r6 = ldr(r5 + 8);
                r1 = movs(r1, 0);
                r0 = adds(r6, 0);
                lr = complex_print + 92 | 1;
                bl(this::__aeabi_fcmpge, 92);
                return;
            case 92:
                cmp(r0, 0);
                if (bne(null, 108)) return;
            case 96:
                r1 = adds(r6, 0);
                r0 = adds(r6, 0);
                lr = complex_print + 104 | 1;
                bl(this::__aeabi_fcmpun, 104);
                return;
            case 104:
                cmp(r0, 0);
                if (beq(null, 116)) return;
            case 108:
                r1 = 0x08023034;
                r0 = movs(r0, r4);
                lr = complex_print + 116 | 1;
                bl(this::mp_print_str, 116);
                return;
            case 116:
                r3 = movs(r3, 0);
                str(sp + 4, r3);
                r3 = adds(r3, 7);
                str(sp, r3);
                r2 = movs(r2, 16);
                r1 = add(sp, 8);
                r3 = adds(r3, 96);
                r0 = ldr(r5 + 8);
                lr = complex_print + 136 | 1;
                bl(this::mp_format_float, 136);
                return;
            case 136:
                r2 = add(sp, 8);
                r1 = 0x08023036;
                b(null, 46);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263688, size=156, name='complex_unary_op', path='build/py/objcomplex.o', has_indirect=False)
    protected void complex_unary_op(int offset) throws Exception
    {
        pc = complex_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r1);
                cmp(r0, 4);
                if (beq(null, 70)) return;
            case 8:
                if (bhi(null, 24)) return;
            case 10:
                cmp(r0, 0);
                if (beq(null, 20)) return;
            case 14:
                cmp(r0, 1);
                if (beq(null, 124)) return;
            case 18:
                r4 = movs(r4, 0);
            case 20:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            case 24:
                cmp(r0, 6);
                if (beq(null, 100)) return;
            case 28:
                cmp(r0, 7);
                if (bne(null, 18)) return;
            case 32:
                r0 = ldr(r1 + 4);
                r4 = ldr(r1 + 8);
                r1 = adds(r0, 0);
                lr = complex_unary_op + 42 | 1;
                bl(this::__aeabi_fmul, 42);
                return;
            case 42:
                r1 = adds(r4, 0);
                r5 = adds(r0, 0);
                r0 = adds(r4, 0);
                lr = complex_unary_op + 52 | 1;
                bl(this::__aeabi_fmul, 52);
                return;
            case 52:
                r1 = adds(r0, 0);
                r0 = adds(r5, 0);
                lr = complex_unary_op + 60 | 1;
                bl(this::__aeabi_fadd, 60);
                return;
            case 60:
                lr = complex_unary_op + 64 | 1;
                bl(this::sqrtf, 64);
                return;
            case 64:
                lr = complex_unary_op + 68 | 1;
                bl(this::mp_obj_new_float, 68);
                return;
            case 68:
                b(null, 140);
                return;
            case 70:
                r1 = movs(r1, 0);
                r0 = ldr(r4 + 4);
                lr = complex_unary_op + 78 | 1;
                bl(this::__aeabi_fcmpeq, 78);
                return;
            case 78:
                cmp(r0, 0);
                if (beq(null, 144)) return;
            case 82:
                r0 = ldr(r4 + 8);
                r1 = movs(r1, 0);
                lr = complex_unary_op + 90 | 1;
                bl(this::__aeabi_fcmpeq, 90);
                return;
            case 90:
                r4 = mp_const_true_obj;
                cmp(r0, 0);
                if (beq(null, 20)) return;
            case 96:
                r4 = mp_const_false_obj;
                b(null, 20);
                return;
            case 100:
                r0 = ldr(r1 + 4);
                lr = complex_unary_op + 106 | 1;
                bl(this::mp_float_hash, 106);
                return;
            case 106:
                r5 = movs(r5, r0);
                r0 = ldr(r4 + 8);
                lr = complex_unary_op + 114 | 1;
                bl(this::mp_float_hash, 114);
                return;
            case 114:
                r4 = movs(r4, 1);
                r5 = eors(r5, r0);
                r5 = lsls(r5, 1);
                r4 = orrs(r4, r5);
                b(null, 20);
                return;
            case 124:
                r3 = movs(r3, 128);
                r2 = ldr(r1 + 8);
                r0 = ldr(r4 + 4);
                r3 = lsls(r3, 24);
                r1 = adds(r2, r3);
                r0 = adds(r0, r3);
                lr = complex_unary_op + 140 | 1;
                bl(this::mp_obj_new_complex, 140);
                return;
            case 140:
                r4 = movs(r4, r0);
                b(null, 20);
                return;
            case 144:
                r4 = mp_const_true_obj;
                b(null, 20);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134263844, size=188, name='complex_make_new', path='build/py/objcomplex.o', has_indirect=False)
    protected void complex_make_new(int offset) throws Exception
    {
        pc = complex_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r5 = movs(r5, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                r4 = movs(r4, r3);
                str(sp, r2);
                r3 = movs(r3, 2);
                r0 = movs(r0, r5);
                lr = complex_make_new + 20 | 1;
                bl(this::mp_arg_check_num, 20);
                return;
            case 20:
                cmp(r5, 0);
                if (beq(null, 86)) return;
            case 24:
                r3 = ldr(r4);
                r2 = movs(r2, 3);
                cmp(r5, 1);
                if (beq(null, 96)) return;
            case 32:
                tst(r3, r2);
                if (bne(null, 158)) return;
            case 36:
                r2 = mp_type_complex;
                r1 = ldr(r3);
                cmp(r1, r2);
                if (bne(null, 158)) return;
            case 44:
                r5 = ldr(r3 + 4);
                r6 = ldr(r3 + 8);
            case 48:
                r4 = ldr(r4 + 4);
                r3 = lsls(r4, 30);
                if (bne(null, 170)) return;
            case 54:
                r3 = mp_type_complex;
                r2 = ldr(r4);
                cmp(r2, r3);
                if (bne(null, 170)) return;
            case 62:
                r1 = ldr(r4 + 8);
                r0 = adds(r5, 0);
                lr = complex_make_new + 70 | 1;
                bl(this::__aeabi_fsub, 70);
                return;
            case 70:
                r1 = ldr(r4 + 4);
                r5 = adds(r0, 0);
                r0 = adds(r6, 0);
            case 76:
                lr = complex_make_new + 80 | 1;
                bl(this::__aeabi_fadd, 80);
                return;
            case 80:
                r1 = adds(r0, 0);
                r0 = adds(r5, 0);
                b(null, 90);
                return;
            case 86:
                r1 = movs(r1, 0);
                r0 = adds(r1, 0);
            case 90:
                lr = complex_make_new + 94 | 1;
                bl(this::mp_obj_new_complex, 94);
                return;
            case 94:
                b(null, 138);
                return;
            case 96:
                r0 = movs(r0, r3);
                r2 = ands(r2, r3);
                cmp(r2, 2);
                if (beq(null, 116)) return;
            case 104:
                cmp(r2, 0);
                if (bne(null, 148)) return;
            case 108:
                r2 = ldr(r3);
                r1 = mp_type_str;
                cmp(r2, r1);
                if (bne(null, 142)) return;
            case 116:
                r1 = add(sp, 12);
                r0 = movs(r0, r3);
                lr = complex_make_new + 124 | 1;
                bl(this::mp_obj_str_get_data, 124);
                return;
            case 124:
                r3 = movs(r3, 0);
                str(sp, r3);
                r3 = adds(r3, 1);
                r2 = movs(r2, r3);
                r1 = ldr(sp + 12);
                lr = complex_make_new + 138 | 1;
                bl(this::mp_parse_num_decimal, 138);
                return;
            case 138:
                sp = add(sp, 16);
                pop(true, R4, R5, R6);
                return;
            case 142:
                r1 = mp_type_complex;
                cmp(r2, r1);
                if (beq(null, 138)) return;
            case 148:
                r0 = movs(r0, r3);
                lr = complex_make_new + 154 | 1;
                bl(this::mp_obj_get_float, 154);
                return;
            case 154:
                r1 = movs(r1, 0);
                b(null, 90);
                return;
            case 158:
                r0 = movs(r0, r3);
                lr = complex_make_new + 164 | 1;
                bl(this::mp_obj_get_float, 164);
                return;
            case 164:
                r6 = movs(r6, 0);
                r5 = adds(r0, 0);
                b(null, 48);
                return;
            case 170:
                r0 = movs(r0, r4);
                lr = complex_make_new + 176 | 1;
                bl(this::mp_obj_get_float, 176);
                return;
            case 176:
                r1 = adds(r6, 0);
                b(null, 76);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134264648, size=14, name='complex_binary_op', path='build/py/objcomplex.o', has_indirect=False)
    protected void complex_binary_op(int offset) throws Exception
    {
        pc = complex_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, r2);
                r2 = ldr(r1 + 8);
                r1 = ldr(r1 + 4);
                lr = complex_binary_op + 12 | 1;
                bl(this::mp_obj_complex_binary_op, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134264664, size=104, name='deque_make_new', path='build/py/objdeque.o', has_indirect=False)
    protected void deque_make_new(int offset) throws Exception
    {
        pc = deque_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, 0);
                r6 = movs(r6, r3);
                sp = sub(sp, 20);
                str(sp + 8, r1);
                str(sp + 12, r0);
                r1 = movs(r1, r2);
                r3 = movs(r3, 3);
                r2 = movs(r2, 2);
                str(sp, r7);
                r0 = ldr(sp + 8);
                lr = deque_make_new + 26 | 1;
                bl(this::mp_arg_check_num, 26);
                return;
            case 26:
                r3 = mp_const_empty_tuple_obj;
                r2 = ldr(r6);
                cmp(r2, r3);
                if (beq(null, 40)) return;
            case 34:
                r0 = movs(r0, 0);
                lr = deque_make_new + 40 | 1;
                bl(this::mp_raise_ValueError, 40);
                return;
            case 40:
                r0 = ldr(r6 + 4);
                lr = deque_make_new + 46 | 1;
                bl(this::mp_obj_get_int, 46);
                return;
            case 46:
                r5 = subs(r0, 0);
                if (blt(null, 34)) return;
            case 50:
                r0 = movs(r0, 24);
                lr = deque_make_new + 56 | 1;
                bl(this::m_malloc, 56);
                return;
            case 56:
                r3 = ldr(sp + 12);
                r5 = adds(r5, 1);
                str(r0, r3);
                r4 = movs(r4, r0);
                str(r0 + 4, r5);
                str(r0 + 12, r7);
                str(r0 + 8, r7);
                r0 = lsls(r5, 2);
                lr = deque_make_new + 76 | 1;
                bl(this::m_malloc0, 76);
                return;
            case 76:
                r3 = ldr(sp + 8);
                str(r4 + 16, r0);
                cmp(r3, 2);
                if (bls(null, 92)) return;
            case 84:
                r0 = ldr(r6 + 8);
                lr = deque_make_new + 90 | 1;
                bl(this::mp_obj_get_int, 90);
                return;
            case 90:
                str(r4 + 20, r0);
            case 92:
                r0 = movs(r0, r4);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134264768, size=68, name='deque_unary_op', path='build/py/objdeque.o', has_indirect=False)
    protected void deque_unary_op(int offset) throws Exception
    {
        pc = deque_unary_op + offset;
        switch (offset)
        {
            case 0:
                cmp(r0, 5);
                if (beq(null, 26)) return;
            case 4:
                cmp(r0, 8);
                if (beq(null, 46)) return;
            case 8:
                cmp(r0, 4);
                if (bne(null, 54)) return;
            case 12:
                r2 = ldr(r1 + 8);
                r3 = ldr(r1 + 12);
                r0 = mp_const_true_obj;
                cmp(r2, r3);
                if (bne(null, 24)) return;
            case 22:
                r0 = mp_const_false_obj;
            case 24:
                bx(lr);
                return;
            case 26:
                r3 = ldr(r1 + 12);
                r2 = ldr(r1 + 8);
                r0 = subs(r3, r2);
                if (bpl(null, 38)) return;
            case 34:
                r3 = ldr(r1 + 4);
                r0 = adds(r0, r3);
            case 38:
                r3 = lsls(r0, 1);
            case 40:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 24);
                return;
            case 46:
                r0 = ldr(r1 + 4);
                r0 = adds(r0, 6);
                r3 = lsls(r0, 3);
                b(null, 40);
                return;
            case 54:
                r0 = movs(r0, 0);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134264836, size=56, name='deque_popleft', path='build/py/objdeque.o', has_indirect=False)
    protected void deque_popleft(int offset) throws Exception
    {
        pc = deque_popleft + offset;
        switch (offset)
        {
            case 0:
                r2 = ldr(r0 + 8);
                r1 = ldr(r0 + 12);
                push(true, r4);
                r3 = movs(r3, r0);
                cmp(r2, r1);
                if (bne(null, 20)) return;
            case 12:
                r1 = 0x08023229;
                r0 = mp_type_IndexError;
                lr = deque_popleft + 20 | 1;
                bl(this::mp_raise_msg, 20);
                return;
            case 20:
                r4 = movs(r4, 0);
                r0 = ldr(r0 + 16);
                r1 = lsls(r2, 2);
                r1 = adds(r0, r1);
                r0 = ldr(r1);
                str(r1, r4);
                r1 = ldr(r3 + 4);
                r2 = adds(r2, 1);
                str(r3 + 8, r2);
                cmp(r2, r1);
                if (bne(null, 44)) return;
            case 42:
                str(r3 + 8, r4);
            case 44:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134264968, size=24, name='dict_view_getiter', path='build/py/objdict.o', has_indirect=False)
    protected void dict_view_getiter(int offset) throws Exception
    {
        assert offset == 0;
        pc = dict_view_getiter + offset;
        r3 = dict_view_it_type;
        str(r1, r3);
        r3 = ldrb(r0 + 8);
        strb(r1 + 4, r3);
        r3 = ldr(r0 + 4);
        r0 = movs(r0, r1);
        str(r1 + 8, r3);
        r3 = movs(r3, 0);
        str(r1 + 12, r3);
        bx(lr);
    }

    // function: Function(address=134264992, size=24, name='dict_getiter', path='build/py/objdict.o', has_indirect=False)
    protected void dict_getiter(int offset) throws Exception
    {
        assert offset == 0;
        pc = dict_getiter + offset;
        r3 = dict_view_it_type;
        str(r1 + 8, r0);
        str(r1, r3);
        r3 = movs(r3, 1);
        strb(r1 + 4, r3);
        r3 = movs(r3, 0);
        r0 = movs(r0, r1);
        str(r1 + 12, r3);
        bx(lr);
    }

    // function: Function(address=134265016, size=28, name='dict_values', path='build/py/objdict.o', has_indirect=False)
    protected void dict_values(int offset) throws Exception
    {
        pc = dict_values + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, 12);
                lr = dict_values + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r3 = dict_view_type;
                str(r0 + 4, r4);
                str(r0, r3);
                r3 = movs(r3, 2);
                strb(r0 + 8, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265060, size=24, name='dict_clear', path='build/py/objdict.o', has_indirect=False)
    protected void dict_clear(int offset) throws Exception
    {
        pc = dict_clear + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = dict_clear + 8 | 1;
                bl(this::mp_ensure_not_fixed, 8);
                return;
            case 8:
                r0 = adds(r4, 4);
                lr = dict_clear + 14 | 1;
                bl(this::mp_map_clear, 14);
                return;
            case 14:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265084, size=60, name='dict_unary_op', path='build/py/objdict.o', has_indirect=False)
    protected void dict_unary_op(int offset) throws Exception
    {
        pc = dict_unary_op + offset;
        switch (offset)
        {
            case 0:
                cmp(r0, 5);
                if (beq(null, 26)) return;
            case 4:
                cmp(r0, 8);
                if (beq(null, 38)) return;
            case 8:
                cmp(r0, 4);
                if (bne(null, 46)) return;
            case 12:
                r2 = movs(r2, 7);
                r3 = ldr(r1 + 4);
                r0 = mp_const_true_obj;
                r3 = bics(r3, r2);
                if (bne(null, 24)) return;
            case 22:
                r0 = mp_const_false_obj;
            case 24:
                bx(lr);
                return;
            case 26:
                r0 = ldr(r1 + 4);
                r0 = lsrs(r0, 3);
                r3 = lsls(r0, 1);
            case 32:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 24);
                return;
            case 38:
                r0 = ldr(r1 + 8);
                r0 = adds(r0, 2);
                r3 = lsls(r0, 4);
                b(null, 32);
                return;
            case 46:
                r0 = movs(r0, 0);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265144, size=92, name='dict_get_helper', path='build/py/objdict.o', has_indirect=False)
    protected void dict_get_helper(int offset) throws Exception
    {
        pc = dict_get_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = movs(r6, r0);
                r5 = movs(r5, r1);
                r4 = subs(r2, 0);
                r7 = ldr(r1);
                if (beq(null, 18)) return;
            case 12:
                r0 = movs(r0, r7);
                lr = dict_get_helper + 18 | 1;
                bl(this::mp_ensure_not_fixed, 18);
                return;
            case 18:
                r0 = adds(r7, 4);
                r2 = movs(r2, r4);
                r1 = ldr(r5 + 4);
                lr = dict_get_helper + 28 | 1;
                bl(this::mp_map_lookup, 28);
                return;
            case 28:
                cmp(r0, 0);
                if (beq(null, 38)) return;
            case 32:
                r3 = ldr(r0 + 4);
                cmp(r3, 0);
                if (bne(null, 72)) return;
            case 38:
                cmp(r6, 2);
                if (bne(null, 60)) return;
            case 42:
                r3 = mp_const_none_obj;
                cmp(r4, 2);
                if (bne(null, 62)) return;
            case 48:
                r1 = ldr(r5 + 4);
                r0 = mp_type_KeyError;
                lr = dict_get_helper + 56 | 1;
                bl(this::mp_obj_new_exception_arg1, 56);
                return;
            case 56:
                lr = dict_get_helper + 60 | 1;
                bl(this::nlr_jump, 60);
                return;
            case 60:
                r3 = ldr(r5 + 8);
            case 62:
                cmp(r4, 1);
                if (bne(null, 68)) return;
            case 66:
                str(r0 + 4, r3);
            case 68:
                r0 = movs(r0, r3);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 72:
                cmp(r4, 2);
                if (bne(null, 68)) return;
            case 76:
                r2 = movs(r2, 0);
                str(r0 + 4, r2);
                b(null, 68);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265236, size=10, name='dict_setdefault', path='build/py/objdict.o', has_indirect=False)
    protected void dict_setdefault(int offset) throws Exception
    {
        pc = dict_setdefault + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 1);
                lr = dict_setdefault + 8 | 1;
                bl(this::dict_get_helper, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265246, size=10, name='dict_pop', path='build/py/objdict.o', has_indirect=False)
    protected void dict_pop(int offset) throws Exception
    {
        pc = dict_pop + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 2);
                lr = dict_pop + 8 | 1;
                bl(this::dict_get_helper, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265256, size=10, name='dict_get', path='build/py/objdict.o', has_indirect=False)
    protected void dict_get(int offset) throws Exception
    {
        pc = dict_get + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                lr = dict_get + 8 | 1;
                bl(this::dict_get_helper, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265266, size=42, name='dict_iter_next', path='build/py/objdict.o', has_indirect=False)
    protected void dict_iter_next(int offset) throws Exception
    {
        pc = dict_iter_next + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r1);
                push(true, r4, r5, r6);
                r6 = ldr(r0 + 8);
                r4 = lsls(r3, 3);
            case 8:
                cmp(r3, r6);
                if (blo(null, 16)) return;
            case 12:
                r2 = movs(r2, 0);
                b(null, 34);
                return;
            case 16:
                r2 = ldr(r0 + 12);
                r3 = adds(r3, 1);
                r2 = adds(r2, r4);
                r5 = ldr(r2);
                cmp(r5, 0);
                if (beq(null, 38)) return;
            case 28:
                cmp(r5, 4);
                if (beq(null, 38)) return;
            case 32:
                str(r1, r3);
            case 34:
                r0 = movs(r0, r2);
                pop(true, R4, R5, R6);
                return;
            case 38:
                r4 = adds(r4, 8);
                b(null, 8);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265308, size=58, name='dict_view_it_iternext', path='build/py/objdict.o', has_indirect=False)
    protected void dict_view_it_iternext(int offset) throws Exception
    {
        pc = dict_view_it_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4);
                r1 = movs(r1, r0);
                r4 = movs(r4, r0);
                r1 = adds(r1, 12);
                r0 = ldr(r0 + 8);
                lr = dict_view_it_iternext + 14 | 1;
                bl(this::dict_iter_next, 14);
                return;
            case 14:
                cmp(r0, 0);
                if (beq(null, 46)) return;
            case 18:
                r2 = ldrb(r4 + 4);
                cmp(r2, 1);
                if (beq(null, 50)) return;
            case 24:
                cmp(r2, 2);
                if (beq(null, 54)) return;
            case 28:
                r2 = ldr(r0);
                r1 = add(sp, 8);
                str(sp + 8, r2);
                r3 = ldr(r0 + 4);
                r0 = movs(r0, 2);
                str(sp + 4, r3);
                str(sp + 12, r3);
                lr = dict_view_it_iternext + 46 | 1;
                bl(this::mp_obj_new_tuple, 46);
                return;
            case 46:
                sp = add(sp, 16);
                pop(true, R4);
                return;
            case 50:
                r0 = ldr(r0);
                b(null, 46);
                return;
            case 54:
                r0 = ldr(r0 + 4);
                b(null, 46);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265368, size=120, name='dict_view_print', path='build/py/objdict.o', has_indirect=False)
    protected void dict_view_print(int offset) throws Exception
    {
        pc = dict_view_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r3 = ldrb(r1 + 8);
                r2 = mp_dict_view_names;
                r3 = lsls(r3, 2);
                sp = sub(sp, 24);
                r1 = ldr(r3 + r2);
                lr = dict_view_print + 20 | 1;
                bl(this::mp_print_str, 20);
                return;
            case 20:
                r1 = dict_view_print_str1_1;
                r0 = movs(r0, r4);
                lr = dict_view_print + 28 | 1;
                bl(this::mp_print_str, 28);
                return;
            case 28:
                r3 = dict_view_it_type;
                r2 = add(sp, 8);
                str(sp + 8, r3);
                r3 = ldrb(r5 + 8);
                r6 = movs(r6, 1);
                strb(r2 + 4, r3);
                r3 = ldr(r5 + 4);
                str(sp + 4, r3);
                str(sp + 16, r3);
                r3 = movs(r3, 0);
                str(sp + 20, r3);
            case 50:
                r0 = add(sp, 8);
                lr = dict_view_print + 56 | 1;
                bl(this::dict_view_it_iternext, 56);
                return;
            case 56:
                r5 = subs(r0, 0);
                if (bne(null, 72)) return;
            case 60:
                r1 = 0x080232c7;
                r0 = movs(r0, r4);
                lr = dict_view_print + 68 | 1;
                bl(this::mp_print_str, 68);
                return;
            case 68:
                sp = add(sp, 24);
                pop(true, R4, R5, R6);
                return;
            case 72:
                cmp(r6, 0);
                if (bne(null, 84)) return;
            case 76:
                r1 = 0x08022d77;
                r0 = movs(r0, r4);
                lr = dict_view_print + 84 | 1;
                bl(this::mp_print_str, 84);
                return;
            case 84:
                r2 = movs(r2, 1);
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = dict_view_print + 94 | 1;
                bl(this::mp_obj_print_helper, 94);
                return;
            case 94:
                r6 = movs(r6, 0);
                b(null, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265488, size=232, name='dict_update', path='build/py/objdict.o', has_indirect=False)
    protected void dict_update(int offset) throws Exception
    {
        pc = dict_update + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = ldr(r1);
                r5 = movs(r5, r2);
                sp = sub(sp, 28);
                r7 = movs(r7, r0);
                r0 = movs(r0, r4);
                r6 = movs(r6, r1);
                lr = dict_update + 18 | 1;
                bl(this::mp_ensure_not_fixed, 18);
                return;
            case 18:
                r2 = movs(r2, 1);
                r3 = ldr(r5);
                str(sp, r2);
                r1 = lsrs(r3, 3);
                r0 = movs(r0, r7);
                r3 = movs(r3, 2);
                lr = dict_update + 34 | 1;
                bl(this::mp_arg_check_num, 34);
                return;
            case 34:
                cmp(r7, 2);
                if (bne(null, 76)) return;
            case 38:
                r3 = movs(r3, 3);
                r0 = ldr(r6 + 4);
                r3 = ands(r3, r0);
                if (bne(null, 96)) return;
            case 46:
                r1 = ldr(r0);
                r2 = dict_make_new | 1;
                hint(dict_make_new | 1, this::dict_make_new);
                r1 = ldr(r1 + 12);
                cmp(r1, r2);
                if (bne(null, 96)) return;
            case 56:
                r2 = ldr(r6);
                cmp(r0, r2);
                if (beq(null, 76)) return;
            case 62:
                str(sp + 20, r3);
            case 64:
                r1 = add(sp, 20);
                r0 = ldr(r6 + 4);
                lr = dict_update + 72 | 1;
                bl(this::dict_iter_next, 72);
                return;
            case 72:
                r7 = subs(r0, 0);
                if (bne(null, 80)) return;
            case 76:
                r6 = movs(r6, 0);
                b(null, 208);
                return;
            case 80:
                r0 = adds(r4, 4);
                r2 = movs(r2, 1);
                r1 = ldr(r7);
                lr = dict_update + 90 | 1;
                bl(this::mp_map_lookup, 90);
                return;
            case 90:
                r3 = ldr(r7 + 4);
                str(r0 + 4, r3);
                b(null, 64);
                return;
            case 96:
                r1 = movs(r1, 0);
                lr = dict_update + 102 | 1;
                bl(this::mp_getiter, 102);
                return;
            case 102:
                str(sp + 12, r0);
            case 104:
                r0 = ldr(sp + 12);
                lr = dict_update + 110 | 1;
                bl(this::mp_iternext, 110);
                return;
            case 110:
                cmp(r0, 0);
                if (beq(null, 76)) return;
            case 114:
                r1 = movs(r1, 0);
                lr = dict_update + 120 | 1;
                bl(this::mp_getiter, 120);
                return;
            case 120:
                r6 = movs(r6, r0);
                lr = dict_update + 126 | 1;
                bl(this::mp_iternext, 126);
                return;
            case 126:
                r7 = movs(r7, r0);
                r0 = movs(r0, r6);
                lr = dict_update + 134 | 1;
                bl(this::mp_iternext, 134);
                return;
            case 134:
                str(sp + 8, r0);
                r0 = movs(r0, r6);
                lr = dict_update + 142 | 1;
                bl(this::mp_iternext, 142);
                return;
            case 142:
                cmp(r7, 0);
                if (beq(null, 156)) return;
            case 146:
                r3 = ldr(sp + 8);
                cmp(r3, 0);
                if (beq(null, 156)) return;
            case 152:
                cmp(r0, 0);
                if (beq(null, 162)) return;
            case 156:
                r0 = dict_update_str1_1;
                lr = dict_update + 162 | 1;
                bl(this::mp_raise_ValueError, 162);
                return;
            case 162:
                r0 = adds(r4, 4);
                r2 = movs(r2, 1);
                r1 = movs(r1, r7);
                lr = dict_update + 172 | 1;
                bl(this::mp_map_lookup, 172);
                return;
            case 172:
                r3 = ldr(sp + 8);
                str(r0 + 4, r3);
                b(null, 104);
                return;
            case 178:
                r3 = ldr(r5 + 8);
                r7 = lsls(r6, 3);
                r7 = adds(r3, r7);
                r1 = ldr(r7);
                cmp(r1, 0);
                if (beq(null, 206)) return;
            case 190:
                cmp(r1, 4);
                if (beq(null, 206)) return;
            case 194:
                r0 = adds(r4, 4);
                r2 = movs(r2, 1);
                lr = dict_update + 202 | 1;
                bl(this::mp_map_lookup, 202);
                return;
            case 202:
                r3 = ldr(r7 + 4);
                str(r0 + 4, r3);
            case 206:
                r6 = adds(r6, 1);
            case 208:
                r3 = ldr(r5 + 4);
                cmp(r3, r6);
                if (bhi(null, 178)) return;
            case 214:
                r0 = mp_const_none_obj;
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265720, size=72, name='dict_popitem', path='build/py/objdict.o', has_indirect=False)
    protected void dict_popitem(int offset) throws Exception
    {
        pc = dict_popitem + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = movs(r4, r0);
                r5 = movs(r5, 0);
                sp = sub(sp, 20);
                lr = dict_popitem + 12 | 1;
                bl(this::mp_ensure_not_fixed, 12);
                return;
            case 12:
                r1 = add(sp, 4);
                r0 = movs(r0, r4);
                str(sp + 4, r5);
                lr = dict_popitem + 22 | 1;
                bl(this::dict_iter_next, 22);
                return;
            case 22:
                cmp(r0, r5);
                if (bne(null, 34)) return;
            case 26:
                r1 = dict_popitem_str1_1;
                r0 = mp_type_KeyError;
                lr = dict_popitem + 34 | 1;
                bl(this::mp_raise_msg, 34);
                return;
            case 34:
                r3 = ldr(r4 + 4);
                r1 = add(sp, 8);
                r3 = subs(r3, 8);
                str(r4 + 4, r3);
                r3 = ldr(r0);
                str(sp + 8, r3);
                r3 = ldr(r0 + 4);
                str(sp + 12, r3);
                r3 = movs(r3, 4);
                r0 = stm(r0, R3, R5);
                r0 = movs(r0, 2);
                lr = dict_popitem + 60 | 1;
                bl(this::mp_obj_new_tuple, 60);
                return;
            case 60:
                sp = add(sp, 20);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134265792, size=220, name='dict_binary_op', path='build/py/objdict.o', has_indirect=False)
    protected void dict_binary_op(int offset) throws Exception
    {
        pc = dict_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                r5 = movs(r5, r2);
                cmp(r0, 2);
                if (beq(null, 38)) return;
            case 10:
                r3 = movs(r3, 0);
                cmp(r0, 46);
                if (bne(null, 34)) return;
            case 16:
                r0 = adds(r1, 4);
                r2 = movs(r2, 0);
                r1 = movs(r1, r5);
                lr = dict_binary_op + 26 | 1;
                bl(this::mp_map_lookup, 26);
                return;
            case 26:
                r3 = mp_const_true_obj;
                cmp(r0, 0);
                if (bne(null, 34)) return;
            case 32:
                r3 = mp_const_false_obj;
            case 34:
                r0 = movs(r0, r3);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 38:
                r2 = movs(r2, 3);
                r3 = movs(r3, r5);
                r3 = ands(r3, r2);
                tst(r1, r2);
                if (bne(null, 124)) return;
            case 48:
                r1 = mp_type_ordereddict;
                r2 = ldr(r4);
                cmp(r2, r1);
                if (bne(null, 124)) return;
            case 56:
                cmp(r3, 0);
                if (bne(null, 32)) return;
            case 60:
                r1 = ldr(r5);
                cmp(r1, r2);
                if (bne(null, 128)) return;
            case 66:
                str(sp, r3);
                str(sp + 4, r3);
            case 70:
                r1 = mov(sp);
                r0 = movs(r0, r4);
                lr = dict_binary_op + 78 | 1;
                bl(this::dict_iter_next, 78);
                return;
            case 78:
                r1 = add(sp, 4);
                r7 = movs(r7, r0);
                r0 = movs(r0, r5);
                lr = dict_binary_op + 88 | 1;
                bl(this::dict_iter_next, 88);
                return;
            case 88:
                r6 = movs(r6, r0);
                cmp(r7, 0);
                if (beq(null, 194)) return;
            case 94:
                cmp(r0, 0);
                if (beq(null, 32)) return;
            case 98:
                r1 = ldr(r6);
                r0 = ldr(r7);
                lr = dict_binary_op + 106 | 1;
                bl(this::mp_obj_equal, 106);
                return;
            case 106:
                cmp(r0, 0);
                if (beq(null, 32)) return;
            case 110:
                r1 = ldr(r6 + 4);
                r0 = ldr(r7 + 4);
                lr = dict_binary_op + 118 | 1;
                bl(this::mp_obj_equal, 118);
                return;
            case 118:
                cmp(r0, 0);
                if (bne(null, 70)) return;
            case 122:
                b(null, 32);
                return;
            case 124:
                cmp(r3, 0);
                if (bne(null, 32)) return;
            case 128:
                r3 = mp_type_dict;
                r2 = ldr(r5);
                cmp(r2, r3);
                if (bne(null, 32)) return;
            case 136:
                r2 = ldr(r5 + 4);
                r3 = ldr(r4 + 4);
                r3 = eors(r3, r2);
                r2 = movs(r2, 7);
                r3 = bics(r3, r2);
                if (bne(null, 32)) return;
            case 148:
                str(sp + 4, r3);
            case 150:
                r1 = add(sp, 4);
                r0 = movs(r0, r4);
                lr = dict_binary_op + 158 | 1;
                bl(this::dict_iter_next, 158);
                return;
            case 158:
                r6 = subs(r0, 0);
                if (bne(null, 166)) return;
            case 162:
                r3 = mp_const_true_obj;
                b(null, 34);
                return;
            case 166:
                r0 = adds(r5, 4);
                r2 = movs(r2, 0);
                r1 = ldr(r6);
                lr = dict_binary_op + 176 | 1;
                bl(this::mp_map_lookup, 176);
                return;
            case 176:
                cmp(r0, 0);
                if (beq(null, 32)) return;
            case 180:
                r1 = ldr(r0 + 4);
                r0 = ldr(r6 + 4);
                lr = dict_binary_op + 188 | 1;
                bl(this::mp_obj_equal, 188);
                return;
            case 188:
                cmp(r0, 0);
                if (bne(null, 150)) return;
            case 192:
                b(null, 32);
                return;
            case 194:
                r3 = mp_const_true_obj;
                cmp(r0, 0);
                if (bne(null, 32)) return;
            case 200:
                b(null, 34);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266012, size=26, name='dict_view_binary_op', path='build/py/objdict.o', has_indirect=False)
    protected void dict_view_binary_op(int offset) throws Exception
    {
        pc = dict_view_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = ldrb(r1 + 8);
                r3 = movs(r3, 0);
                cmp(r4, 1);
                if (bne(null, 22)) return;
            case 10:
                cmp(r0, 46);
                if (bne(null, 22)) return;
            case 14:
                r1 = ldr(r1 + 4);
                lr = dict_view_binary_op + 20 | 1;
                bl(this::dict_binary_op, 20);
                return;
            case 20:
                r3 = movs(r3, r0);
            case 22:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266040, size=164, name='dict_print', path='build/py/objdict.o', has_indirect=False)
    protected void dict_print(int offset) throws Exception
    {
        pc = dict_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                sp = sub(sp, 20);
                r7 = movs(r7, r1);
                r5 = movs(r5, r2);
                cmp(r2, 3);
                if (beq(null, 16)) return;
            case 14:
                r5 = movs(r5, 1);
            case 16:
                r3 = ldr(r7);
                r2 = mp_type_dict;
                cmp(r3, r2);
                if (beq(null, 34)) return;
            case 24:
                r2 = ldrh(r3 + 6);
                r1 = dict_print_str1_1;
                r0 = movs(r0, r4);
                lr = dict_print + 34 | 1;
                bl(this::mp_printf, 34);
                return;
            case 34:
                r1 = 0x0802323c;
                r0 = movs(r0, r4);
                lr = dict_print + 42 | 1;
                bl(this::mp_print_str, 42);
                return;
            case 42:
                r3 = movs(r3, 0);
                str(sp + 12, r3);
                r3 = adds(r3, 1);
            case 48:
                r1 = add(sp, 12);
                r0 = movs(r0, r7);
                str(sp + 4, r3);
                lr = dict_print + 58 | 1;
                bl(this::dict_iter_next, 58);
                return;
            case 58:
                r6 = subs(r0, 0);
                if (bne(null, 90)) return;
            case 62:
                r1 = 0x0802ab1a;
                r0 = movs(r0, r4);
                lr = dict_print + 70 | 1;
                bl(this::mp_print_str, 70);
                return;
            case 70:
                r3 = ldr(r7);
                r2 = mp_type_dict;
                cmp(r3, r2);
                if (beq(null, 86)) return;
            case 78:
                r1 = 0x08022c2e;
                r0 = movs(r0, r4);
                lr = dict_print + 86 | 1;
                bl(this::mp_print_str, 86);
                return;
            case 86:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 90:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (bne(null, 104)) return;
            case 96:
                r1 = 0x08022d77;
                r0 = movs(r0, r4);
                lr = dict_print + 104 | 1;
                bl(this::mp_print_str, 104);
                return;
            case 104:
                r2 = movs(r2, r5);
                r1 = ldr(r6);
                r0 = movs(r0, r4);
                lr = dict_print + 114 | 1;
                bl(this::mp_obj_print_helper, 114);
                return;
            case 114:
                r1 = 0x080226b8;
                r0 = movs(r0, r4);
                lr = dict_print + 122 | 1;
                bl(this::mp_print_str, 122);
                return;
            case 122:
                r2 = movs(r2, r5);
                r1 = ldr(r6 + 4);
                r0 = movs(r0, r4);
                lr = dict_print + 132 | 1;
                bl(this::mp_obj_print_helper, 132);
                return;
            case 132:
                r3 = movs(r3, 0);
                b(null, 48);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266204, size=28, name='dict_items', path='build/py/objdict.o', has_indirect=False)
    protected void dict_items(int offset) throws Exception
    {
        pc = dict_items + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, 12);
                lr = dict_items + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r3 = dict_view_type;
                str(r0 + 4, r4);
                str(r0, r3);
                r3 = movs(r3, 0);
                strb(r0 + 8, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266232, size=28, name='dict_keys', path='build/py/objdict.o', has_indirect=False)
    protected void dict_keys(int offset) throws Exception
    {
        pc = dict_keys + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, 12);
                lr = dict_keys + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r3 = dict_view_type;
                str(r0 + 4, r4);
                str(r0, r3);
                r3 = movs(r3, 1);
                strb(r0 + 8, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266336, size=76, name='dict_fromkeys', path='build/py/objdict.o', has_indirect=False)
    protected void dict_fromkeys(int offset) throws Exception
    {
        pc = dict_fromkeys + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                r7 = movs(r7, r0);
                r1 = movs(r1, 0);
                r0 = ldr(r6 + 4);
                lr = dict_fromkeys + 14 | 1;
                bl(this::mp_getiter, 14);
                return;
            case 14:
                r4 = mp_const_none_obj;
                r5 = movs(r5, r0);
                cmp(r7, 2);
                if (bls(null, 24)) return;
            case 22:
                r4 = ldr(r6 + 8);
            case 24:
                r0 = ldr(r6 + 4);
                lr = dict_fromkeys + 30 | 1;
                bl(this::mp_obj_len_maybe, 30);
                return;
            case 30:
                cmp(r0, 0);
                if (bne(null, 54)) return;
            case 34:
                lr = dict_fromkeys + 38 | 1;
                bl(this::mp_obj_new_dict, 38);
                return;
            case 38:
                r6 = movs(r6, r0);
            case 40:
                r0 = movs(r0, r5);
                lr = dict_fromkeys + 46 | 1;
                bl(this::mp_iternext, 46);
                return;
            case 46:
                r1 = subs(r0, 0);
                if (bne(null, 58)) return;
            case 50:
                r0 = movs(r0, r6);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 54:
                r0 = asrs(r0, 1);
                b(null, 34);
                return;
            case 58:
                r3 = adds(r6, 4);
                r2 = movs(r2, 1);
                r0 = movs(r0, r3);
                lr = dict_fromkeys + 68 | 1;
                bl(this::mp_map_lookup, 68);
                return;
            case 68:
                str(r0 + 4, r4);
                b(null, 40);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266412, size=86, name='dict_copy', path='build/py/objdict.o', has_indirect=False)
    protected void dict_copy(int offset) throws Exception
    {
        pc = dict_copy + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = ldr(r0 + 8);
                lr = dict_copy + 10 | 1;
                bl(this::mp_obj_new_dict, 10);
                return;
            case 10:
                r3 = ldr(r5);
                r1 = ldr(r0 + 4);
                str(r0, r3);
                r3 = ldr(r5 + 4);
                r4 = movs(r4, r0);
                r2 = lsrs(r3, 3);
                r3 = movs(r3, 7);
                r3 = ands(r3, r1);
                r1 = movs(r1, 1);
                r2 = lsls(r2, 3);
                r3 = orrs(r3, r2);
                str(r0 + 4, r3);
                r2 = ldrb(r5 + 4);
                r2 = lsls(r2, 31);
                r3 = lsrs(r2, 31);
                r2 = ldrb(r0 + 4);
                r2 = bics(r2, r1);
                r2 = orrs(r2, r3);
                r3 = movs(r3, 2);
                r2 = bics(r2, r3);
                strb(r0 + 4, r2);
                r3 = ldrb(r5 + 4);
                r2 = uxtb(r2);
                r3 = lsrs(r3, 2);
                r3 = ands(r3, r1);
                r1 = adds(r1, 3);
                r2 = bics(r2, r1);
                r3 = lsls(r3, 2);
                r3 = orrs(r3, r2);
                strb(r0 + 4, r3);
                r3 = ldr(r5 + 8);
                r1 = ldr(r5 + 12);
                r2 = lsls(r3, 3);
                r0 = ldr(r0 + 12);
                lr = dict_copy + 82 | 1;
                bl(this::memcpy, 82);
                return;
            case 82:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266500, size=80, name='dict_make_new', path='build/py/objdict.o', has_indirect=True)
    protected void dict_make_new(int offset) throws Exception
    {
        pc = dict_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 36);
                r0 = movs(r0, 0);
                r6 = movs(r6, r3);
                r5 = movs(r5, r1);
                str(sp + 4, r2);
                lr = dict_make_new + 18 | 1;
                bl(this::mp_obj_new_dict, 18);
                return;
            case 18:
                r3 = mp_type_ordereddict;
                r4 = movs(r4, r0);
                str(r0, r7);
                cmp(r7, r3);
                if (bne(null, 36)) return;
            case 28:
                r3 = movs(r3, 4);
                r2 = ldrb(r0 + 4);
                r3 = orrs(r3, r2);
                strb(r0 + 4, r3);
            case 36:
                r3 = ldr(sp + 4);
                r3 = orrs(r3, r5);
                if (beq(null, 70)) return;
            case 42:
                r3 = ldr(r6);
                r2 = lsls(r5, 2);
                r2 = adds(r6, r2);
                r1 = ldr(sp + 4);
                r0 = add(sp, 20);
                str(sp + 12, r4);
                str(sp + 16, r3);
                lr = dict_make_new + 60 | 1;
                bl(this::mp_map_init_fixed_table, 60);
                return;
            case 60:
                r0 = adds(r5, 1);
                r2 = add(sp, 20);
                r1 = add(sp, 12);
                lr = dict_make_new + 70 | 1;
                bl(this::dict_update, 70);
                return;
            case 70:
                r0 = movs(r0, r4);
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266636, size=64, name='dict_subscr', path='build/py/objdict.o', has_indirect=False)
    protected void dict_subscr(int offset) throws Exception
    {
        pc = dict_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                cmp(r2, 0);
                if (bne(null, 16)) return;
            case 8:
                lr = dict_subscr + 12 | 1;
                bl(this::mp_obj_dict_delete, 12);
                return;
            case 12:
                r0 = mp_const_none_obj;
                b(null, 46);
                return;
            case 16:
                cmp(r2, 4);
                if (bne(null, 48)) return;
            case 20:
                r0 = adds(r0, 4);
                r2 = movs(r2, 0);
                lr = dict_subscr + 28 | 1;
                bl(this::mp_map_lookup, 28);
                return;
            case 28:
                cmp(r0, 0);
                if (bne(null, 44)) return;
            case 32:
                r1 = movs(r1, r4);
                r0 = mp_type_KeyError;
                lr = dict_subscr + 40 | 1;
                bl(this::mp_obj_new_exception_arg1, 40);
                return;
            case 40:
                lr = dict_subscr + 44 | 1;
                bl(this::nlr_jump, 44);
                return;
            case 44:
                r0 = ldr(r0 + 4);
            case 46:
                pop(true, R4);
                return;
            case 48:
                lr = dict_subscr + 52 | 1;
                bl(this::mp_obj_dict_store, 52);
                return;
            case 52:
                b(null, 12);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266700, size=40, name='enumerate_iternext', path='build/py/objenumerate.o', has_indirect=False)
    protected void enumerate_iternext(int offset) throws Exception
    {
        pc = enumerate_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r4 = movs(r4, r0);
                r0 = ldr(r0 + 4);
                lr = enumerate_iternext + 10 | 1;
                bl(this::mp_iternext, 10);
                return;
            case 10:
                cmp(r0, 0);
                if (beq(null, 38)) return;
            case 14:
                r3 = ldr(r4 + 8);
                str(sp + 4, r0);
                r1 = adds(r3, 1);
                str(r4 + 8, r1);
                r1 = movs(r1, 1);
                r3 = lsls(r3, 1);
                r3 = orrs(r3, r1);
                r0 = movs(r0, 2);
                r1 = mov(sp);
                str(sp, r3);
                lr = enumerate_iternext + 38 | 1;
                bl(this::mp_obj_new_tuple, 38);
                return;
            case 38:
                pop(true, R1, R2, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134266740, size=60, name='enumerate_make_new', path='build/py/objenumerate.o', has_indirect=False)
    protected void enumerate_make_new(int offset) throws Exception
    {
        pc = enumerate_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r6 = movs(r6, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                r3 = allowed_args_6525;
                r5 = add(sp, 8);
                str(sp, r3);
                str(sp + 4, r5);
                r3 = movs(r3, 2);
                lr = enumerate_make_new + 24 | 1;
                bl(this::mp_arg_parse_all_kw_array, 24);
                return;
            case 24:
                r0 = movs(r0, 12);
                lr = enumerate_make_new + 30 | 1;
                bl(this::m_malloc, 30);
                return;
            case 30:
                r1 = movs(r1, 0);
                r4 = movs(r4, r0);
                str(r0, r6);
                r0 = ldr(sp + 8);
                lr = enumerate_make_new + 42 | 1;
                bl(this::mp_getiter, 42);
                return;
            case 42:
                str(r4 + 4, r0);
                r0 = movs(r0, r4);
                r3 = ldr(r5 + 4);
                str(r4 + 8, r3);
                sp = add(sp, 16);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134267092, size=88, name='exc_add_strn', path='build/py/objexcept.o', has_indirect=True)
    protected void exc_add_strn(int offset) throws Exception
    {
        pc = exc_add_strn + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r3 = ldr(r0 + 8);
                r7 = movs(r7, r1);
                r1 = ldr(r0 + 4);
                r5 = movs(r5, r2);
                r2 = adds(r3, r2);
                r4 = movs(r4, r0);
                cmp(r2, r1);
                if (blo(null, 54)) return;
            case 18:
                r2 = ldrb(r0);
                cmp(r2, 0);
                if (beq(null, 82)) return;
            case 24:
                r6 = movs(r6, r5);
                r6 = adds(r6, 16);
                r6 = adds(r6, r1);
                r3 = movs(r3, 1);
                r2 = movs(r2, r6);
                r0 = ldr(r0 + 12);
                lr = exc_add_strn + 40 | 1;
                bl(this::m_realloc_maybe, 40);
                return;
            case 40:
                cmp(r0, 0);
                if (bne(null, 76)) return;
            case 44:
                r3 = ldr(r4 + 4);
                strb(r4, r0);
                r5 = subs(r3, 1);
                r3 = ldr(r4 + 8);
                r5 = subs(r5, r3);
            case 54:
                r3 = ldr(r4 + 12);
                r2 = ldr(r4 + 8);
                r1 = movs(r1, r7);
                r0 = adds(r3, r2);
                r2 = movs(r2, r5);
                lr = exc_add_strn + 68 | 1;
                bl(this::memcpy, 68);
                return;
            case 68:
                r3 = ldr(r4 + 8);
                r5 = adds(r3, r5);
                str(r4 + 8, r5);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 76:
                str(r4 + 4, r6);
                str(r4 + 12, r0);
                b(null, 54);
                return;
            case 82:
                r1 = subs(r1, 1);
                r5 = subs(r1, r3);
                b(null, 54);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134267764, size=52, name='filter_iternext', path='build/py/objfilter.o', has_indirect=False)
    protected void filter_iternext(int offset) throws Exception
    {
        pc = filter_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r0);
            case 4:
                r0 = ldr(r4 + 8);
                lr = filter_iternext + 10 | 1;
                bl(this::mp_iternext, 10);
                return;
            case 10:
                str(sp + 4, r0);
                cmp(r0, 0);
                if (beq(null, 46)) return;
            case 16:
                r5 = ldr(r4 + 4);
                r3 = mp_const_none_obj;
                cmp(r5, r3);
                if (beq(null, 36)) return;
            case 24:
                r3 = add(sp, 4);
                r2 = movs(r2, 0);
                r1 = movs(r1, 1);
                r0 = movs(r0, r5);
                lr = filter_iternext + 36 | 1;
                bl(this::mp_call_function_n_kw, 36);
                return;
            case 36:
                lr = filter_iternext + 40 | 1;
                bl(this::mp_obj_is_true, 40);
                return;
            case 40:
                cmp(r0, 0);
                if (beq(null, 4)) return;
            case 44:
                r0 = ldr(sp + 4);
            case 46:
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134267816, size=50, name='filter_make_new', path='build/py/objfilter.o', has_indirect=False)
    protected void filter_make_new(int offset) throws Exception
    {
        pc = filter_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r3);
                r6 = movs(r6, 0);
                r3 = movs(r3, 2);
                r7 = movs(r7, r0);
                str(sp, r6);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = filter_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r0 = movs(r0, 12);
                lr = filter_make_new + 28 | 1;
                bl(this::m_malloc, 28);
                return;
            case 28:
                str(r0, r7);
                r3 = ldr(r5);
                r4 = movs(r4, r0);
                str(r0 + 4, r3);
                r1 = movs(r1, r6);
                r0 = ldr(r5 + 4);
                lr = filter_make_new + 44 | 1;
                bl(this::mp_getiter, 44);
                return;
            case 44:
                str(r4 + 8, r0);
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134267868, size=88, name='float_print', path='build/py/objfloat.o', has_indirect=False)
    protected void float_print(int offset) throws Exception
    {
        pc = float_print + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                sp = sub(sp, 24);
                str(sp + 4, r3);
                r3 = adds(r3, 7);
                str(sp, r3);
                r2 = movs(r2, 16);
                r3 = adds(r3, 96);
                r1 = add(sp, 8);
                r0 = ldr(r0 + 4);
                lr = float_print + 28 | 1;
                bl(this::mp_format_float, 28);
                return;
            case 28:
                r1 = add(sp, 8);
                r0 = movs(r0, r4);
                lr = float_print + 36 | 1;
                bl(this::mp_print_str, 36);
                return;
            case 36:
                r1 = movs(r1, 46);
                r0 = add(sp, 8);
                lr = float_print + 44 | 1;
                bl(this::strchr, 44);
                return;
            case 44:
                cmp(r0, 0);
                if (bne(null, 80)) return;
            case 48:
                r1 = movs(r1, 101);
                r0 = add(sp, 8);
                lr = float_print + 56 | 1;
                bl(this::strchr, 56);
                return;
            case 56:
                cmp(r0, 0);
                if (bne(null, 80)) return;
            case 60:
                r1 = movs(r1, 110);
                r0 = add(sp, 8);
                lr = float_print + 68 | 1;
                bl(this::strchr, 68);
                return;
            case 68:
                cmp(r0, 0);
                if (bne(null, 80)) return;
            case 72:
                r1 = 0x08026497;
                r0 = movs(r0, r4);
                lr = float_print + 80 | 1;
                bl(this::mp_print_str, 80);
                return;
            case 80:
                sp = add(sp, 24);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134268272, size=92, name='float_make_new', path='build/py/objfloat.o', has_indirect=False)
    protected void float_make_new(int offset) throws Exception
    {
        pc = float_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r1);
                r4 = movs(r4, 0);
                sp = sub(sp, 24);
                r1 = movs(r1, r2);
                r0 = movs(r0, r6);
                r5 = movs(r5, r3);
                str(sp, r4);
                r3 = movs(r3, 1);
                r2 = movs(r2, r4);
                lr = float_make_new + 24 | 1;
                bl(this::mp_arg_check_num, 24);
                return;
            case 24:
                r0 = movs(r0, 0);
                cmp(r6, r4);
                if (beq(null, 80)) return;
            case 30:
                r2 = movs(r2, 1);
                r1 = add(sp, 12);
                r0 = ldr(r5);
                lr = float_make_new + 40 | 1;
                bl(this::mp_get_buffer, 40);
                return;
            case 40:
                cmp(r0, 0);
                if (beq(null, 62)) return;
            case 44:
                str(sp, r4);
                r3 = movs(r3, r4);
                r2 = movs(r2, r4);
                r1 = ldr(sp + 16);
                r0 = ldr(sp + 12);
                lr = float_make_new + 58 | 1;
                bl(this::mp_parse_num_decimal, 58);
                return;
            case 58:
                sp = add(sp, 24);
                pop(true, R4, R5, R6);
                return;
            case 62:
                r0 = ldr(r5);
                r3 = lsls(r0, 30);
                if (bne(null, 76)) return;
            case 68:
                r3 = mp_type_float;
                r2 = ldr(r0);
                cmp(r2, r3);
                if (beq(null, 58)) return;
            case 76:
                lr = float_make_new + 80 | 1;
                bl(this::mp_obj_get_float, 80);
                return;
            case 80:
                lr = float_make_new + 84 | 1;
                bl(this::mp_obj_new_float, 84);
                return;
            case 84:
                b(null, 58);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134268364, size=100, name='float_unary_op', path='build/py/objfloat.o', has_indirect=False)
    protected void float_unary_op(int offset) throws Exception
    {
        pc = float_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r1);
                r5 = ldr(r1 + 4);
                cmp(r0, 4);
                if (beq(null, 60)) return;
            case 10:
                if (bhi(null, 26)) return;
            case 12:
                cmp(r0, 0);
                if (beq(null, 22)) return;
            case 16:
                cmp(r0, 1);
                if (beq(null, 46)) return;
            case 20:
                r4 = movs(r4, 0);
            case 22:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            case 26:
                cmp(r0, 6);
                if (beq(null, 78)) return;
            case 30:
                cmp(r0, 7);
                if (bne(null, 20)) return;
            case 34:
                r1 = movs(r1, 0);
                r0 = adds(r5, 0);
                lr = float_unary_op + 42 | 1;
                bl(this::__aeabi_fcmplt, 42);
                return;
            case 42:
                cmp(r0, 0);
                if (beq(null, 22)) return;
            case 46:
                r3 = movs(r3, 128);
                r3 = lsls(r3, 24);
                r0 = adds(r5, r3);
                lr = float_unary_op + 56 | 1;
                bl(this::mp_obj_new_float, 56);
                return;
            case 56:
                r4 = movs(r4, r0);
                b(null, 22);
                return;
            case 60:
                r1 = movs(r1, 0);
                r0 = adds(r5, 0);
                lr = float_unary_op + 68 | 1;
                bl(this::__aeabi_fcmpeq, 68);
                return;
            case 68:
                r4 = mp_const_true_obj;
                cmp(r0, 0);
                if (beq(null, 22)) return;
            case 74:
                r4 = mp_const_false_obj;
                b(null, 22);
                return;
            case 78:
                r0 = adds(r5, 0);
                lr = float_unary_op + 84 | 1;
                bl(this::mp_float_hash, 84);
                return;
            case 84:
                r4 = movs(r4, 1);
                r0 = lsls(r0, 1);
                r4 = orrs(r4, r0);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269028, size=36, name='float_binary_op', path='build/py/objfloat.o', has_indirect=False)
    protected void float_binary_op(int offset) throws Exception
    {
        pc = float_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = ldr(r1 + 4);
                r3 = lsls(r2, 30);
                if (bne(null, 26)) return;
            case 8:
                r3 = mp_type_complex;
                r4 = ldr(r2);
                cmp(r4, r3);
                if (bne(null, 26)) return;
            case 16:
                r3 = movs(r3, r2);
                r2 = movs(r2, 0);
                lr = float_binary_op + 24 | 1;
                bl(this::mp_obj_complex_binary_op, 24);
                return;
            case 24:
                pop(true, R4);
                return;
            case 26:
                lr = float_binary_op + 30 | 1;
                bl(this::mp_obj_float_binary_op, 30);
                return;
            case 30:
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269064, size=24, name='fun_builtin_0_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_builtin_0_call(int offset) throws Exception
    {
        pc = fun_builtin_0_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                r3 = movs(r3, r2);
                str(sp, r2);
                lr = fun_builtin_0_call + 18 | 1;
                bl(this::mp_arg_check_num, 18);
                return;
            case 18:
                r3 = ldr(r4 + 4);
                blx(r3, 22);
                return;
            case 22:
                pop(true, R1, R2, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269088, size=30, name='fun_builtin_1_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_builtin_1_call(int offset) throws Exception
    {
        pc = fun_builtin_1_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r3);
                r3 = movs(r3, 0);
                r5 = movs(r5, r0);
                str(sp, r3);
                r3 = adds(r3, 1);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = fun_builtin_1_call + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r3 = ldr(r5 + 4);
                r0 = ldr(r4);
                blx(r3, 28);
                return;
            case 28:
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269118, size=30, name='fun_builtin_2_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_builtin_2_call(int offset) throws Exception
    {
        pc = fun_builtin_2_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r3);
                r3 = movs(r3, 0);
                r5 = movs(r5, r0);
                str(sp, r3);
                r3 = adds(r3, 2);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = fun_builtin_2_call + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r4 = ldm(r4, R0, R1);
                r3 = ldr(r5 + 4);
                blx(r3, 28);
                return;
            case 28:
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269148, size=30, name='fun_builtin_3_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_builtin_3_call(int offset) throws Exception
    {
        pc = fun_builtin_3_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r3);
                r3 = movs(r3, 0);
                r5 = movs(r5, r0);
                str(sp, r3);
                r3 = adds(r3, 3);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = fun_builtin_3_call + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r4 = ldm(r4, R0, R1, R2);
                r3 = ldr(r5 + 4);
                blx(r3, 28);
                return;
            case 28:
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269180, size=132, name='fun_bc_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_bc_call(int offset) throws Exception
    {
        pc = fun_bc_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r6 = movs(r6, r0);
                sp = sub(sp, 20);
                r5 = movs(r5, r3);
                str(sp + 8, r1);
                str(sp + 12, r2);
                lr = fun_bc_call + 16 | 1;
                bl(this::mp_stack_check, 16);
                return;
            case 16:
                r0 = ldr(r6 + 8);
                lr = fun_bc_call + 22 | 1;
                bl(this::mp_decode_uint_value, 22);
                return;
            case 22:
                str(sp + 4, r0);
                r0 = ldr(r6 + 8);
                lr = fun_bc_call + 30 | 1;
                bl(this::mp_decode_uint_skip, 30);
                return;
            case 30:
                lr = fun_bc_call + 34 | 1;
                bl(this::mp_decode_uint_value, 34);
                return;
            case 34:
                r3 = movs(r3, r0);
                r0 = movs(r0, 3);
                r0 = muls(r3, r0);
                r3 = ldr(sp + 4);
                r7 = movs(r7, 0);
                r0 = adds(r0, r3);
                r0 = lsls(r0, 2);
                r0 = adds(r0, 24);
                lr = fun_bc_call + 54 | 1;
                bl(this::mp_pystack_alloc, 54);
                return;
            case 54:
                r4 = movs(r4, r0);
                r3 = movs(r3, r5);
                r2 = ldr(sp + 12);
                str(r0, r6);
                str(r0 + 4, r7);
                r1 = ldr(sp + 8);
                lr = fun_bc_call + 70 | 1;
                bl(this::mp_setup_code_state, 70);
                return;
            case 70:
                r5 = mp_state_ctx;
                r1 = movs(r1, r7);
                r3 = ldr(r5 + 24);
                r0 = movs(r0, r4);
                str(r4 + 16, r3);
                r3 = ldr(r6 + 4);
                str(r5 + 24, r3);
                lr = fun_bc_call + 88 | 1;
                bl(this::mp_execute_bytecode, 88);
                return;
            case 88:
                r3 = ldr(r4 + 16);
                r2 = movs(r2, r0);
                str(r5 + 24, r3);
                cmp(r0, r7);
                if (bne(null, 112)) return;
            case 98:
                r3 = ldr(r4 + 8);
                r0 = ldr(r3);
            case 102:
                str(r5 + 16, r4);
                cmp(r2, 0);
                if (beq(null, 122)) return;
            case 108:
                lr = fun_bc_call + 112 | 1;
                bl(this::nlr_jump, 112);
                return;
            case 112:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 5);
                r3 = lsls(r3, 2);
                r0 = ldr(r3 + r4);
                b(null, 102);
                return;
            case 122:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269312, size=76, name='fun_builtin_var_call', path='build/py/objfun.o', has_indirect=False)
    protected void fun_builtin_var_call(int offset) throws Exception
    {
        pc = fun_builtin_var_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                r7 = movs(r7, r2);
                r4 = movs(r4, r0);
                r1 = ldrb(r0 + 4);
                r2 = ldrh(r0 + 4);
                r1 = lsls(r1, 31);
                sp = sub(sp, 28);
                r1 = lsrs(r1, 31);
                r6 = movs(r6, r3);
                r2 = lsrs(r2, 1);
                r3 = ldrh(r0 + 6);
                str(sp, r1);
                r0 = movs(r0, r5);
                r1 = movs(r1, r7);
                lr = fun_builtin_var_call + 34 | 1;
                bl(this::mp_arg_check_num, 34);
                return;
            case 34:
                r3 = ldrb(r4 + 4);
                r3 = lsls(r3, 31);
                if (bpl(null, 66)) return;
            case 40:
                r2 = lsls(r5, 2);
                r2 = adds(r6, r2);
                r1 = movs(r1, r7);
                r0 = add(sp, 12);
                lr = fun_builtin_var_call + 52 | 1;
                bl(this::mp_map_init_fixed_table, 52);
                return;
            case 52:
                r3 = ldr(r4 + 8);
                r2 = add(sp, 12);
                r1 = movs(r1, r6);
                r0 = movs(r0, r5);
                blx(r3, 62);
                return;
            case 62:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 66:
                r3 = ldr(r4 + 8);
                r1 = movs(r1, r6);
                r0 = movs(r0, r5);
                blx(r3, 74);
                return;
            case 74:
                b(null, 62);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269452, size=32, name='fun_bc_print', path='build/py/objfun.o', has_indirect=False)
    protected void fun_bc_print(int offset) throws Exception
    {
        pc = fun_bc_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r4 = movs(r4, r1);
                lr = fun_bc_print + 12 | 1;
                bl(this::mp_obj_fun_get_name, 12);
                return;
            case 12:
                r3 = movs(r3, r4);
                r2 = movs(r2, r0);
                r1 = fun_bc_print_str1_1;
                r0 = movs(r0, r5);
                lr = fun_bc_print + 24 | 1;
                bl(this::mp_printf, 24);
                return;
            case 24:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269660, size=80, name='gen_wrap_call', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_wrap_call(int offset) throws Exception
    {
        pc = gen_wrap_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r0 = ldr(r0 + 8);
                r6 = movs(r6, r2);
                r7 = movs(r7, r3);
                str(sp + 4, r1);
                lr = gen_wrap_call + 16 | 1;
                bl(this::mp_decode_uint_value, 16);
                return;
            case 16:
                r4 = movs(r4, r0);
                r0 = ldr(r5 + 8);
                lr = gen_wrap_call + 24 | 1;
                bl(this::mp_decode_uint_skip, 24);
                return;
            case 24:
                lr = gen_wrap_call + 28 | 1;
                bl(this::mp_decode_uint_value, 28);
                return;
            case 28:
                r3 = movs(r3, r0);
                r0 = movs(r0, 3);
                r0 = muls(r3, r0);
                r4 = adds(r4, 8);
                r0 = adds(r0, r4);
                r0 = lsls(r0, 2);
                lr = gen_wrap_call + 44 | 1;
                bl(this::m_malloc, 44);
                return;
            case 44:
                r3 = mp_type_gen_instance;
                r4 = movs(r4, r0);
                str(r0, r3);
                r3 = ldr(r5 + 4);
                r2 = movs(r2, r6);
                str(r0 + 4, r3);
                r3 = movs(r3, 0);
                str(r0 + 8, r5);
                str(r0 + 12, r3);
                r1 = ldr(sp + 4);
                r3 = movs(r3, r7);
                r0 = adds(r0, 8);
                lr = gen_wrap_call + 72 | 1;
                bl(this::mp_setup_code_state, 72);
                return;
            case 72:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269740, size=28, name='gen_instance_pend_throw', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_pend_throw(int offset) throws Exception
    {
        pc = gen_instance_pend_throw + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 16);
                r0 = adds(r0, 28);
                push(true, r4);
                cmp(r3, r0);
                if (bne(null, 16)) return;
            case 10:
                r0 = gen_instance_pend_throw_str1_1;
                lr = gen_instance_pend_throw + 16 | 1;
                bl(this::mp_raise_TypeError, 16);
                return;
            case 16:
                r0 = ldr(r3);
                str(r3, r1);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269768, size=32, name='gen_instance_print', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_print(int offset) throws Exception
    {
        pc = gen_instance_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = ldr(r1 + 8);
                r4 = movs(r4, r1);
                lr = gen_instance_print + 12 | 1;
                bl(this::mp_obj_fun_get_name, 12);
                return;
            case 12:
                r3 = movs(r3, r4);
                r2 = movs(r2, r0);
                r1 = gen_instance_print_str1_1;
                r0 = movs(r0, r5);
                lr = gen_instance_print + 24 | 1;
                bl(this::mp_printf, 24);
                return;
            case 24:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134269800, size=16, name='unlikely_gen_instance_throw_part_0', path='build/py/objgenerator.o', has_indirect=False)
    protected void unlikely_gen_instance_throw_part_0(int offset) throws Exception
    {
        pc = unlikely_gen_instance_throw_part_0 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = mp_type_StopIteration;
                lr = unlikely_gen_instance_throw_part_0 + 8 | 1;
                bl(this::mp_obj_new_exception, 8);
                return;
            case 8:
                lr = unlikely_gen_instance_throw_part_0 + 12 | 1;
                bl(this::nlr_jump, 12);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270000, size=88, name='gen_resume_and_raise', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_resume_and_raise(int offset) throws Exception
    {
        pc = gen_resume_and_raise + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r3 = add(sp, 4);
                lr = gen_resume_and_raise + 8 | 1;
                bl(this::mp_obj_gen_resume, 8);
                return;
            case 8:
                cmp(r0, 1);
                if (beq(null, 42)) return;
            case 12:
                r4 = mp_const_none_obj;
                cmp(r0, 2);
                if (beq(null, 46)) return;
            case 18:
                r3 = ldr(sp + 4);
                cmp(r3, r4);
                if (beq(null, 76)) return;
            case 24:
                cmp(r3, 0);
                if (beq(null, 76)) return;
            case 28:
                r2 = add(sp, 4);
                r1 = movs(r1, 1);
                r0 = mp_type_StopIteration;
                lr = gen_resume_and_raise + 38 | 1;
                bl(this::mp_obj_new_exception_args, 38);
                return;
            case 38:
                lr = gen_resume_and_raise + 42 | 1;
                bl(this::nlr_jump, 42);
                return;
            case 42:
                r0 = ldr(sp + 4);
            case 44:
                pop(true, R1, R2, R4);
                return;
            case 46:
                r0 = ldr(sp + 4);
                lr = gen_resume_and_raise + 52 | 1;
                bl(this::mp_obj_get_type, 52);
                return;
            case 52:
                r1 = mp_type_StopIteration;
                lr = gen_resume_and_raise + 58 | 1;
                bl(this::mp_obj_is_subclass_fast, 58);
                return;
            case 58:
                cmp(r0, 0);
                if (bne(null, 66)) return;
            case 62:
                r0 = ldr(sp + 4);
                b(null, 38);
                return;
            case 66:
                r0 = ldr(sp + 4);
                lr = gen_resume_and_raise + 72 | 1;
                bl(this::mp_obj_exception_get_value, 72);
                return;
            case 72:
                cmp(r0, r4);
                if (bne(null, 62)) return;
            case 76:
                r0 = movs(r0, 0);
                b(null, 44);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270088, size=36, name='gen_instance_throw', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_throw(int offset) throws Exception
    {
        pc = gen_instance_throw + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, r1);
                cmp(r0, 2);
                if (bne(null, 26)) return;
            case 8:
                r2 = ldr(r1 + 4);
            case 10:
                r1 = mp_const_none_obj;
                r0 = ldr(r3);
                lr = gen_instance_throw + 18 | 1;
                bl(this::gen_resume_and_raise, 18);
                return;
            case 18:
                cmp(r0, 0);
                if (bne(null, 30)) return;
            case 22:
                lr = gen_instance_throw + 26 | 1;
                bl(this::unlikely_gen_instance_throw_part_0, 26);
                return;
            case 26:
                r2 = ldr(r1 + 8);
                b(null, 10);
                return;
            case 30:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270124, size=18, name='gen_instance_send', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_send(int offset) throws Exception
    {
        pc = gen_instance_send + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                lr = gen_instance_send + 8 | 1;
                bl(this::gen_resume_and_raise, 8);
                return;
            case 8:
                cmp(r0, 0);
                if (bne(null, 16)) return;
            case 12:
                lr = gen_instance_send + 16 | 1;
                bl(this::unlikely_gen_instance_throw_part_0, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270144, size=16, name='gen_instance_iternext', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_iternext(int offset) throws Exception
    {
        pc = gen_instance_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                r1 = mp_const_none_obj;
                lr = gen_instance_iternext + 10 | 1;
                bl(this::gen_resume_and_raise, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270160, size=96, name='gen_instance_close', path='build/py/objgenerator.o', has_indirect=False)
    protected void gen_instance_close(int offset) throws Exception
    {
        pc = gen_instance_close + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r4 = mp_const_none_obj;
                r3 = add(sp, 4);
                r2 = mp_const_GeneratorExit_obj;
                r1 = movs(r1, r4);
                lr = gen_instance_close + 14 | 1;
                bl(this::mp_obj_gen_resume, 14);
                return;
            case 14:
                cmp(r0, 1);
                if (beq(null, 26)) return;
            case 18:
                cmp(r0, 2);
                if (beq(null, 34)) return;
            case 22:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R4);
                return;
            case 26:
                r1 = gen_instance_close_str1_1;
                r0 = mp_type_RuntimeError;
                lr = gen_instance_close + 34 | 1;
                bl(this::mp_raise_msg, 34);
                return;
            case 34:
                r0 = ldr(sp + 4);
                lr = gen_instance_close + 40 | 1;
                bl(this::mp_obj_get_type, 40);
                return;
            case 40:
                r1 = mp_type_GeneratorExit;
                lr = gen_instance_close + 46 | 1;
                bl(this::mp_obj_is_subclass_fast, 46);
                return;
            case 46:
                cmp(r0, 0);
                if (bne(null, 22)) return;
            case 50:
                r0 = ldr(sp + 4);
                lr = gen_instance_close + 56 | 1;
                bl(this::mp_obj_get_type, 56);
                return;
            case 56:
                r1 = mp_type_StopIteration;
                lr = gen_instance_close + 62 | 1;
                bl(this::mp_obj_is_subclass_fast, 62);
                return;
            case 62:
                cmp(r0, 0);
                if (bne(null, 22)) return;
            case 66:
                r0 = ldr(sp + 4);
                lr = gen_instance_close + 72 | 1;
                bl(this::nlr_jump, 72);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270256, size=84, name='it_iternext', path='build/py/objgetitemiter.o', has_indirect=False)
    protected void it_iternext(int offset) throws Exception
    {
        pc = it_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                sp = sub(sp, 60);
                r5 = movs(r5, r0);
                r0 = add(sp, 4);
                lr = it_iternext + 12 | 1;
                bl(this::nlr_push, 12);
                return;
            case 12:
                r1 = subs(r0, 0);
                if (bne(null, 50)) return;
            case 16:
                r2 = adds(r5, 4);
                r0 = movs(r0, 1);
                lr = it_iternext + 24 | 1;
                bl(this::mp_call_method_n_kw, 24);
                return;
            case 24:
                r2 = movs(r2, 1);
                r3 = ldr(r5 + 12);
                r4 = movs(r4, r0);
                r3 = asrs(r3, 1);
                r3 = adds(r3, 1);
                r3 = lsls(r3, 1);
                r3 = orrs(r3, r2);
                str(r5 + 12, r3);
                lr = it_iternext + 44 | 1;
                bl(this::nlr_pop, 44);
                return;
            case 44:
                r0 = movs(r0, r4);
                sp = add(sp, 60);
                pop(true, R4, R5);
                return;
            case 50:
                r0 = ldr(sp + 8);
                r2 = mp_type_StopIteration;
                r3 = ldr(r0);
                cmp(r3, r2);
                if (beq(null, 72)) return;
            case 60:
                r2 = mp_type_IndexError;
                r4 = movs(r4, 0);
                cmp(r3, r2);
                if (beq(null, 44)) return;
            case 68:
                lr = it_iternext + 72 | 1;
                bl(this::nlr_jump, 72);
                return;
            case 72:
                r4 = movs(r4, 0);
                b(null, 44);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270364, size=128, name='int_to_bytes', path='build/py/objint.o', has_indirect=False)
    protected void int_to_bytes(int offset) throws Exception
    {
        pc = int_to_bytes + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r0 = ldr(r1 + 4);
                sp = sub(sp, 28);
                r7 = movs(r7, r1);
                lr = int_to_bytes + 12 | 1;
                bl(this::mp_obj_get_int, 12);
                return;
            case 12:
                r4 = subs(r0, 0);
                if (bge(null, 22)) return;
            case 16:
                r0 = movs(r0, 0);
                lr = int_to_bytes + 22 | 1;
                bl(this::mp_raise_ValueError, 22);
                return;
            case 22:
                r3 = ldr(r7 + 8);
                r2 = 0xfffffa22;
                str(sp + 4, r3);
                r5 = adds(r3, r2);
                r3 = subs(r5, 1);
                r5 = sbcs(r5, r3);
                r1 = movs(r1, r0);
                r0 = add(sp, 8);
                lr = int_to_bytes + 42 | 1;
                bl(this::vstr_init_len, 42);
                return;
            case 42:
                r6 = ldr(sp + 16);
                r2 = movs(r2, r4);
                r1 = movs(r1, 0);
                r0 = movs(r0, r6);
                lr = int_to_bytes + 54 | 1;
                bl(this::memset, 54);
                return;
            case 54:
                r0 = ldr(r7);
                r5 = uxtb(r5);
                r3 = lsls(r0, 31);
                if (bmi(null, 84)) return;
            case 62:
                r3 = movs(r3, r6);
                r2 = movs(r2, r4);
                r1 = movs(r1, r5);
                lr = int_to_bytes + 72 | 1;
                bl(this::mp_obj_int_to_bytes_impl, 72);
                return;
            case 72:
                r1 = add(sp, 8);
                r0 = mp_type_bytes;
                lr = int_to_bytes + 80 | 1;
                bl(this::mp_obj_new_str_from_vstr, 80);
                return;
            case 80:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 84:
                r3 = asrs(r0, 1);
                r0 = movs(r0, r4);
                cmp(r4, 4);
                if (bls(null, 94)) return;
            case 92:
                r0 = movs(r0, 4);
            case 94:
                r1 = 0x000005de;
                r7 = ldr(sp + 4);
                r2 = movs(r2, 0);
                cmp(r7, r1);
                if (beq(null, 106)) return;
            case 104:
                r2 = subs(r4, r0);
            case 106:
                r2 = adds(r6, r2);
                r1 = movs(r1, r5);
                lr = int_to_bytes + 114 | 1;
                bl(this::mp_binary_set_int, 114);
                return;
            case 114:
                b(null, 72);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134270492, size=108, name='int_from_bytes', path='build/py/objint.o', has_indirect=False)
    protected void int_from_bytes(int offset) throws Exception
    {
        pc = int_from_bytes + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                sp = sub(sp, 28);
                r2 = movs(r2, 1);
                r1 = add(sp, 12);
                r0 = ldr(r4 + 4);
                lr = int_from_bytes + 16 | 1;
                bl(this::mp_get_buffer_raise, 16);
                return;
            case 16:
                r3 = ldr(r4 + 8);
                r1 = 0x000005de;
                r2 = ldr(sp + 12);
                cmp(r3, r1);
                if (bne(null, 54)) return;
            case 26:
                r6 = movs(r6, 1);
                r1 = ldr(sp + 16);
                r6 = rsbs(r6, 0);
                r4 = subs(r1, 1);
                str(sp + 4, r1);
                r4 = adds(r2, r4);
            case 38:
                r1 = ldr(sp + 16);
                r0 = movs(r0, 0);
                r5 = movs(r5, r1);
            case 44:
                cmp(r5, 0);
                if (bne(null, 60)) return;
            case 48:
                lr = int_from_bytes + 52 | 1;
                bl(this::mp_obj_new_int_from_uint, 52);
                return;
            case 52:
                b(null, 82);
                return;
            case 54:
                r4 = movs(r4, r2);
                r6 = movs(r6, 1);
                b(null, 38);
                return;
            case 60:
                r7 = 0x003fffff;
                r5 = subs(r5, 1);
                cmp(r0, r7);
                if (bls(null, 86)) return;
            case 68:
                r0 = 0xfffffa22;
                r3 = adds(r3, r0);
                r0 = subs(r3, 1);
                r3 = sbcs(r3, r0);
                r0 = uxtb(r3);
                lr = int_from_bytes + 82 | 1;
                bl(this::mp_obj_int_from_bytes_impl, 82);
                return;
            case 82:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 86:
                r7 = ldrb(r4);
                r0 = lsls(r0, 8);
                r0 = orrs(r0, r7);
                r4 = adds(r4, r6);
                b(null, 44);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134272808, size=28, name='list_getiter', path='build/py/objlist.o', has_indirect=False)
    protected void list_getiter(int offset) throws Exception
    {
        assert offset == 0;
        pc = list_getiter + offset;
        r3 = mp_type_polymorph_iter;
        str(r1 + 8, r0);
        str(r1, r3);
        r3 = list_it_iternext | 1;
        hint(list_it_iternext | 1, this::list_it_iternext);
        r0 = movs(r0, r1);
        str(r1 + 4, r3);
        r3 = movs(r3, 0);
        str(r1 + 12, r3);
        bx(lr);
    }

    // function: Function(address=134272836, size=56, name='list_reverse', path='build/py/objlist.o', has_indirect=False)
    protected void list_reverse(int offset) throws Exception
    {
        pc = list_reverse + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                r1 = ldr(r0 + 8);
                push(true, r4, r5, r6, r7);
                r2 = lsrs(r1, 31);
                r4 = 0x3fffffff;
                r2 = adds(r2, r1);
                r2 = asrs(r2, 1);
                r6 = adds(r1, r4);
            case 16:
                cmp(r2, r3);
                if (bgt(null, 24)) return;
            case 20:
                r0 = mp_const_none_obj;
                pop(true, R4, R5, R6, R7);
                return;
            case 24:
                r5 = ldr(r0 + 12);
                r1 = subs(r6, r3);
                r4 = lsls(r3, 2);
                r1 = lsls(r1, 2);
                r4 = adds(r5, r4);
                r5 = ldr(r5 + r1);
                r7 = ldr(r4);
                str(r4, r5);
                r4 = ldr(r0 + 12);
                r3 = adds(r3, 1);
                str(r4 + r1, r7);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134272892, size=28, name='list_it_iternext', path='build/py/objlist.o', has_indirect=True)
    protected void list_it_iternext(int offset) throws Exception
    {
        pc = list_it_iternext + offset;
        switch (offset)
        {
            case 0:
                r1 = ldr(r0 + 8);
                push(true, r4);
                r3 = ldr(r0 + 12);
                r4 = ldr(r1 + 8);
                r2 = movs(r2, r0);
                r0 = movs(r0, 0);
                cmp(r3, r4);
                if (bhs(null, 26)) return;
            case 16:
                r1 = ldr(r1 + 12);
                r0 = lsls(r3, 2);
                r3 = adds(r3, 1);
                r0 = ldr(r0 + r1);
                str(r2 + 12, r3);
            case 26:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273000, size=76, name='list_insert', path='build/py/objlist.o', has_indirect=False)
    protected void list_insert(int offset) throws Exception
    {
        pc = list_insert + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                r6 = movs(r6, r2);
                r4 = asrs(r1, 1);
                r3 = ldr(r0 + 8);
                if (bpl(null, 50)) return;
            case 12:
                r4 = adds(r4, r3);
                if (bpl(null, 50)) return;
            case 16:
                r4 = movs(r4, 0);
            case 18:
                r5 = mp_const_none_obj;
                r0 = movs(r0, r7);
                r1 = movs(r1, r5);
                lr = list_insert + 28 | 1;
                bl(this::mp_obj_list_append, 28);
                return;
            case 28:
                r3 = ldr(r7 + 8);
                r1 = subs(r3, 1);
                r3 = lsls(r3, 2);
            case 34:
                r2 = ldr(r7 + 12);
                r0 = subs(r3, 4);
                cmp(r4, r1);
                if (blt(null, 58)) return;
            case 42:
                r4 = lsls(r4, 2);
                r0 = movs(r0, r5);
                str(r4 + r2, r6);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 50:
                cmp(r4, r3);
                if (bls(null, 18)) return;
            case 54:
                r4 = movs(r4, r3);
                b(null, 18);
                return;
            case 58:
                r3 = adds(r2, r3);
                r3 = subs(r3, 8);
                r3 = ldr(r3);
                r1 = subs(r1, 1);
                str(r2 + r0, r3);
                r3 = movs(r3, r0);
                b(null, 34);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273076, size=44, name='list_clear', path='build/py/objlist.o', has_indirect=False)
    protected void list_clear(int offset) throws Exception
    {
        pc = list_clear + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, 0);
                r3 = ldr(r0 + 4);
                r4 = movs(r4, r0);
                str(r0 + 8, r5);
                r1 = lsls(r3, 2);
                r2 = movs(r2, 16);
                r0 = ldr(r0 + 12);
                lr = list_clear + 20 | 1;
                bl(this::m_realloc, 20);
                return;
            case 20:
                r3 = movs(r3, 4);
                r1 = movs(r1, r5);
                str(r4 + 12, r0);
                str(r4 + 4, r3);
                r2 = movs(r2, 16);
                lr = list_clear + 34 | 1;
                bl(this::memset, 34);
                return;
            case 34:
                r0 = mp_const_none_obj;
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273420, size=18, name='list_index', path='build/py/objlist.o', has_indirect=False)
    protected void list_index(int offset) throws Exception
    {
        pc = list_index + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = ldr(r1);
                r2 = movs(r2, r0);
                r3 = movs(r3, r1);
                r0 = ldr(r4 + 12);
                r1 = ldr(r4 + 8);
                lr = list_index + 16 | 1;
                bl(this::mp_seq_index_obj, 16);
                return;
            case 16:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273440, size=124, name='list_pop', path='build/py/objlist.o', has_indirect=False)
    protected void list_pop(int offset) throws Exception
    {
        pc = list_pop + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = ldr(r1);
                r3 = movs(r3, r1);
                r1 = ldr(r4 + 8);
                r2 = movs(r2, r0);
                cmp(r1, 0);
                if (bne(null, 22)) return;
            case 14:
                r1 = list_pop_str1_1;
                r0 = mp_type_IndexError;
                lr = list_pop + 22 | 1;
                bl(this::mp_raise_msg, 22);
                return;
            case 22:
                r0 = ldr(r4);
                cmp(r2, 1);
                if (beq(null, 110)) return;
            case 28:
                r2 = ldr(r3 + 4);
            case 30:
                r3 = movs(r3, 0);
                lr = list_pop + 36 | 1;
                bl(this::mp_get_index, 36);
                return;
            case 36:
                r1 = ldr(r4 + 12);
                r2 = ldr(r4 + 8);
                r6 = lsls(r0, 2);
                r3 = adds(r1, r6);
                r2 = subs(r2, 1);
                r5 = ldr(r3);
                r6 = adds(r6, 4);
                str(r4 + 8, r2);
                r2 = subs(r2, r0);
                r2 = lsls(r2, 2);
                r1 = adds(r1, r6);
                r0 = movs(r0, r3);
                lr = list_pop + 64 | 1;
                bl(this::memmove, 64);
                return;
            case 64:
                r1 = movs(r1, 0);
                r3 = ldr(r4 + 8);
                r0 = ldr(r4 + 12);
                r2 = lsls(r3, 2);
                str(r2 + r0, r1);
                r1 = ldr(r4 + 4);
                cmp(r1, 4);
                if (bls(null, 106)) return;
            case 80:
                r3 = lsls(r3, 1);
                cmp(r1, r3);
                if (bls(null, 106)) return;
            case 86:
                r2 = lsrs(r1, 1);
                r2 = lsls(r2, 2);
                r1 = lsls(r1, 2);
                r0 = ldr(r4 + 12);
                lr = list_pop + 98 | 1;
                bl(this::m_realloc, 98);
                return;
            case 98:
                r3 = ldr(r4 + 4);
                str(r4 + 12, r0);
                r3 = lsrs(r3, 1);
                str(r4 + 4, r3);
            case 106:
                r0 = movs(r0, r5);
                pop(true, R4, R5, R6);
                return;
            case 110:
                r2 = movs(r2, 1);
                r2 = rsbs(r2, 0);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273596, size=36, name='list_extend_from_iter', path='build/py/objlist.o', has_indirect=False)
    protected void list_extend_from_iter(int offset) throws Exception
    {
        pc = list_extend_from_iter + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, 0);
                lr = list_extend_from_iter + 12 | 1;
                bl(this::mp_getiter, 12);
                return;
            case 12:
                r5 = movs(r5, r0);
            case 14:
                r0 = movs(r0, r5);
                lr = list_extend_from_iter + 20 | 1;
                bl(this::mp_iternext, 20);
                return;
            case 20:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                cmp(r1, 0);
                if (bne(null, 30)) return;
            case 28:
                pop(true, R4, R5, R6);
                return;
            case 30:
                lr = list_extend_from_iter + 34 | 1;
                bl(this::mp_obj_list_append, 34);
                return;
            case 34:
                b(null, 14);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273632, size=14, name='list_count', path='build/py/objlist.o', has_indirect=False)
    protected void list_count(int offset) throws Exception
    {
        pc = list_count + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, r1);
                r1 = ldr(r0 + 8);
                r0 = ldr(r0 + 12);
                lr = list_count + 12 | 1;
                bl(this::mp_seq_count_obj, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273648, size=84, name='list_print', path='build/py/objlist.o', has_indirect=False)
    protected void list_print(int offset) throws Exception
    {
        pc = list_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r7 = movs(r7, r1);
                r6 = movs(r6, r2);
                cmp(r2, 3);
                if (beq(null, 14)) return;
            case 12:
                r6 = movs(r6, 1);
            case 14:
                r1 = 0x08022d75;
                r0 = movs(r0, r5);
                lr = list_print + 22 | 1;
                bl(this::mp_print_str, 22);
                return;
            case 22:
                r4 = movs(r4, 0);
            case 24:
                r3 = ldr(r7 + 8);
                cmp(r3, r4);
                if (bhi(null, 40)) return;
            case 30:
                r0 = movs(r0, r5);
                r1 = 0x08022d7a;
                lr = list_print + 38 | 1;
                bl(this::mp_print_str, 38);
                return;
            case 38:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 40:
                cmp(r4, 0);
                if (beq(null, 52)) return;
            case 44:
                r1 = 0x08022d77;
                r0 = movs(r0, r5);
                lr = list_print + 52 | 1;
                bl(this::mp_print_str, 52);
                return;
            case 52:
                r1 = ldr(r7 + 12);
                r3 = lsls(r4, 2);
                r2 = movs(r2, r6);
                r1 = ldr(r3 + r1);
                r0 = movs(r0, r5);
                lr = list_print + 66 | 1;
                bl(this::mp_obj_print_helper, 66);
                return;
            case 66:
                r4 = adds(r4, 1);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273732, size=56, name='list_unary_op', path='build/py/objlist.o', has_indirect=False)
    protected void list_unary_op(int offset) throws Exception
    {
        pc = list_unary_op + offset;
        switch (offset)
        {
            case 0:
                cmp(r0, 5);
                if (beq(null, 24)) return;
            case 4:
                cmp(r0, 8);
                if (beq(null, 34)) return;
            case 8:
                cmp(r0, 4);
                if (bne(null, 42)) return;
            case 12:
                r3 = ldr(r1 + 8);
                r0 = mp_const_true_obj;
                cmp(r3, 0);
                if (bne(null, 22)) return;
            case 20:
                r0 = mp_const_false_obj;
            case 22:
                bx(lr);
                return;
            case 24:
                r3 = ldr(r1 + 8);
                r3 = lsls(r3, 1);
            case 28:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 22);
                return;
            case 34:
                r3 = ldr(r1 + 4);
                r3 = adds(r3, 4);
                r3 = lsls(r3, 3);
                b(null, 28);
                return;
            case 42:
                r0 = movs(r0, 0);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273788, size=116, name='list_extend', path='build/py/objlist.o', has_indirect=False)
    protected void list_extend(int offset) throws Exception
    {
        pc = list_extend + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, 3);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r6 = ands(r6, r1);
                if (bne(null, 98)) return;
            case 12:
                r3 = mp_type_list;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 98)) return;
            case 20:
                r2 = ldr(r1 + 8);
                r3 = ldr(r0 + 8);
                r1 = ldr(r0 + 4);
                r2 = adds(r3, r2);
                cmp(r2, r1);
                if (bls(null, 68)) return;
            case 32:
                r2 = adds(r2, 4);
                r2 = lsls(r2, 2);
                r1 = lsls(r1, 2);
                r0 = ldr(r0 + 12);
                lr = list_extend + 44 | 1;
                bl(this::m_realloc, 44);
                return;
            case 44:
                r2 = ldr(r5 + 8);
                r3 = ldr(r4 + 8);
                str(r4 + 12, r0);
                r3 = adds(r3, r2);
                r2 = adds(r3, 4);
                r3 = lsls(r3, 2);
                str(r4 + 4, r2);
                r0 = adds(r0, r3);
                r2 = movs(r2, 16);
                r1 = movs(r1, r6);
                lr = list_extend + 68 | 1;
                bl(this::memset, 68);
                return;
            case 68:
                r3 = ldr(r4 + 8);
                r1 = ldr(r5 + 12);
                r0 = lsls(r3, 2);
                r3 = ldr(r4 + 12);
                r0 = adds(r3, r0);
                r3 = ldr(r5 + 8);
                r2 = lsls(r3, 2);
                lr = list_extend + 86 | 1;
                bl(this::memcpy, 86);
                return;
            case 86:
                r3 = ldr(r5 + 8);
                r2 = ldr(r4 + 8);
                r3 = adds(r2, r3);
                str(r4 + 8, r3);
            case 94:
                r0 = mp_const_none_obj;
                pop(true, R4, R5, R6);
                return;
            case 98:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = list_extend + 106 | 1;
                bl(this::list_extend_from_iter, 106);
                return;
            case 106:
                b(null, 94);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273956, size=22, name='list_new', path='build/py/objlist.o', has_indirect=False)
    protected void list_new(int offset) throws Exception
    {
        pc = list_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, 16);
                lr = list_new + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r4 = movs(r4, r0);
                r1 = movs(r1, r5);
                lr = list_new + 18 | 1;
                bl(this::mp_obj_list_init, 18);
                return;
            case 18:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134273980, size=216, name='list_binary_op', path='build/py/objlist.o', has_indirect=False)
    protected void list_binary_op(int offset) throws Exception
    {
        pc = list_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r5 = movs(r5, r1);
                r6 = movs(r6, r2);
                cmp(r0, 14);
                if (beq(null, 148)) return;
            case 10:
                if (bhi(null, 20)) return;
            case 12:
                cmp(r0, 4);
                if (bls(null, 160)) return;
            case 16:
                r4 = movs(r4, 0);
                b(null, 142);
                return;
            case 20:
                cmp(r0, 26);
                if (beq(null, 80)) return;
            case 24:
                cmp(r0, 28);
                if (bne(null, 16)) return;
            case 28:
                r1 = add(sp, 12);
                r0 = movs(r0, r2);
                lr = list_binary_op + 36 | 1;
                bl(this::mp_obj_get_int_maybe, 36);
                return;
            case 36:
                r4 = movs(r4, 0);
                cmp(r0, r4);
                if (beq(null, 142)) return;
            case 42:
                r3 = ldr(sp + 12);
                cmp(r3, r4);
                if (bge(null, 50)) return;
            case 48:
                str(sp + 12, r4);
            case 50:
                r3 = ldr(r5 + 8);
                r0 = ldr(sp + 12);
                r0 = muls(r3, r0);
                lr = list_binary_op + 60 | 1;
                bl(this::list_new, 60);
                return;
            case 60:
                r3 = ldr(r0 + 12);
                r4 = movs(r4, r0);
                str(sp, r3);
                r2 = ldr(r5 + 8);
                r3 = ldr(sp + 12);
                r1 = movs(r1, 4);
                r0 = ldr(r5 + 12);
                lr = list_binary_op + 78 | 1;
                bl(this::mp_seq_multiply, 78);
                return;
            case 78:
                b(null, 142);
                return;
            case 80:
                r3 = movs(r3, 3);
                r4 = movs(r4, 0);
                r3 = ands(r3, r2);
                cmp(r3, r4);
                if (bne(null, 142)) return;
            case 90:
                r4 = movs(r4, r3);
                r2 = mp_type_list;
                r3 = ldr(r6);
                cmp(r3, r2);
                if (bne(null, 142)) return;
            case 100:
                r3 = ldr(r1 + 8);
                r2 = ldr(r6 + 8);
                r0 = adds(r3, r2);
                lr = list_binary_op + 110 | 1;
                bl(this::list_new, 110);
                return;
            case 110:
                r4 = movs(r4, r0);
                r3 = ldr(r5 + 8);
                r1 = ldr(r5 + 12);
                r2 = lsls(r3, 2);
                r0 = ldr(r0 + 12);
                lr = list_binary_op + 124 | 1;
                bl(this::memcpy, 124);
                return;
            case 124:
                r0 = ldr(r5 + 8);
                r3 = ldr(r4 + 12);
                r0 = lsls(r0, 2);
                r0 = adds(r3, r0);
                r3 = ldr(r6 + 8);
                r1 = ldr(r6 + 12);
                r2 = lsls(r3, 2);
                lr = list_binary_op + 142 | 1;
                bl(this::memcpy, 142);
                return;
            case 142:
                r0 = movs(r0, r4);
                sp = add(sp, 16);
                pop(true, R4, R5, R6);
                return;
            case 148:
                r1 = movs(r1, r2);
                r0 = movs(r0, r5);
                lr = list_binary_op + 156 | 1;
                bl(this::list_extend, 156);
                return;
            case 156:
                r4 = movs(r4, r5);
                b(null, 142);
                return;
            case 160:
                r3 = lsls(r2, 30);
                if (bne(null, 172)) return;
            case 164:
                r3 = mp_type_list;
                r2 = ldr(r2);
                cmp(r2, r3);
                if (beq(null, 180)) return;
            case 172:
                cmp(r0, 2);
                if (bne(null, 16)) return;
            case 176:
                r4 = mp_const_false_obj;
                b(null, 142);
                return;
            case 180:
                r3 = ldr(r6 + 8);
                str(sp, r3);
                r2 = ldr(r1 + 8);
                r3 = ldr(r6 + 12);
                r1 = ldr(r1 + 12);
                lr = list_binary_op + 194 | 1;
                bl(this::mp_seq_cmp_objs, 194);
                return;
            case 194:
                r4 = mp_const_true_obj;
                cmp(r0, 0);
                if (beq(null, 176)) return;
            case 200:
                b(null, 142);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274196, size=48, name='list_make_new', path='build/py/objlist.o', has_indirect=False)
    protected void list_make_new(int offset) throws Exception
    {
        pc = list_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, 0);
                r1 = movs(r1, r2);
                r6 = movs(r6, r3);
                str(sp, r4);
                r3 = movs(r3, 1);
                r2 = movs(r2, r4);
                r0 = movs(r0, r5);
                lr = list_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                cmp(r5, r4);
                if (bne(null, 34)) return;
            case 26:
                r0 = movs(r0, r5);
                lr = list_make_new + 32 | 1;
                bl(this::list_new, 32);
                return;
            case 32:
                pop(true, R1, R2, R4, R5, R6);
                return;
            case 34:
                r0 = movs(r0, r4);
                lr = list_make_new + 40 | 1;
                bl(this::list_new, 40);
                return;
            case 40:
                r1 = ldr(r6);
                lr = list_make_new + 46 | 1;
                bl(this::list_extend_from_iter, 46);
                return;
            case 46:
                b(null, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274278, size=12, name='list_copy', path='build/py/objlist.o', has_indirect=False)
    protected void list_copy(int offset) throws Exception
    {
        pc = list_copy + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = ldr(r0 + 12);
                r0 = ldr(r0 + 8);
                lr = list_copy + 10 | 1;
                bl(this::mp_obj_new_list, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274332, size=440, name='list_subscr', path='build/py/objlist.o', has_indirect=False)
    protected void list_subscr(int offset) throws Exception
    {
        pc = list_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, 3);
                r4 = movs(r4, r0);
                sp = sub(sp, 44);
                r6 = movs(r6, r1);
                r0 = movs(r0, r2);
                r7 = ands(r7, r1);
                cmp(r2, 0);
                if (bne(null, 122)) return;
            case 18:
                cmp(r7, 0);
                if (bne(null, 108)) return;
            case 22:
                r3 = mp_type_slice;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 108)) return;
            case 30:
                r2 = add(sp, 16);
                r0 = ldr(r4 + 8);
                lr = list_subscr + 38 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 38);
                return;
            case 38:
                cmp(r0, 0);
                if (bne(null, 48)) return;
            case 42:
                r0 = movs(r0, 0);
                lr = list_subscr + 48 | 1;
                bl(this::mp_raise_NotImplementedError, 48);
                return;
            case 48:
                r1 = ldr(sp + 20);
                r3 = ldr(sp + 16);
                r2 = ldr(r4 + 8);
                r0 = ldr(r4 + 12);
                r5 = subs(r3, r1);
                r2 = subs(r2, r1);
                r3 = lsls(r3, 2);
                r1 = lsls(r1, 2);
                r1 = adds(r0, r1);
                r2 = lsls(r2, 2);
                r0 = adds(r0, r3);
                lr = list_subscr + 74 | 1;
                bl(this::memmove, 74);
                return;
            case 74:
                r3 = ldr(r4 + 8);
                r2 = lsls(r5, 2);
                r0 = adds(r5, r3);
                r3 = ldr(r4 + 12);
                r0 = lsls(r0, 2);
                r0 = adds(r3, r0);
                r2 = rsbs(r2, 0);
                r1 = movs(r1, r7);
                lr = list_subscr + 94 | 1;
                bl(this::memset, 94);
                return;
            case 94:
                r3 = ldr(r4 + 8);
                r5 = adds(r3, r5);
                str(r4 + 8, r5);
            case 100:
                r5 = mp_const_none_obj;
            case 102:
                r0 = movs(r0, r5);
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 108:
                r1 = add(sp, 28);
                r0 = movs(r0, 2);
                str(sp + 28, r4);
                str(sp + 32, r6);
                lr = list_subscr + 120 | 1;
                bl(this::list_pop, 120);
                return;
            case 120:
                b(null, 100);
                return;
            case 122:
                cmp(r2, 4);
                if (bne(null, 216)) return;
            case 126:
                r0 = ldr(r4 + 8);
                cmp(r7, 0);
                if (bne(null, 196)) return;
            case 132:
                r3 = mp_type_slice;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 196)) return;
            case 140:
                r2 = add(sp, 28);
                lr = list_subscr + 146 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 146);
                return;
            case 146:
                cmp(r0, 0);
                if (bne(null, 164)) return;
            case 150:
                r2 = add(sp, 28);
                r1 = ldr(r4 + 12);
                r0 = ldr(r4 + 8);
                lr = list_subscr + 160 | 1;
                bl(this::mp_seq_extract_slice, 160);
                return;
            case 160:
                r5 = movs(r5, r0);
                b(null, 102);
                return;
            case 164:
                r3 = ldr(sp + 28);
                r0 = ldr(sp + 32);
                r0 = subs(r0, r3);
                lr = list_subscr + 174 | 1;
                bl(this::list_new, 174);
                return;
            case 174:
                r3 = ldr(r0 + 8);
                r1 = ldr(r4 + 12);
                r2 = lsls(r3, 2);
                r3 = ldr(sp + 28);
                r5 = movs(r5, r0);
                r3 = lsls(r3, 2);
                r1 = adds(r1, r3);
                r0 = ldr(r0 + 12);
                lr = list_subscr + 194 | 1;
                bl(this::memcpy, 194);
                return;
            case 194:
                b(null, 102);
                return;
            case 196:
                r3 = movs(r3, 0);
                r1 = movs(r1, r0);
                r2 = movs(r2, r6);
                r0 = ldr(r4);
                lr = list_subscr + 208 | 1;
                bl(this::mp_get_index, 208);
                return;
            case 208:
                r3 = ldr(r4 + 12);
                r0 = lsls(r0, 2);
                r5 = ldr(r0 + r3);
                b(null, 102);
                return;
            case 216:
                r5 = mp_const_none_obj;
                cmp(r7, 0);
                if (bne(null, 418)) return;
            case 222:
                r3 = mp_type_slice;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 418)) return;
            case 230:
                r2 = add(sp, 12);
                r1 = add(sp, 8);
                lr = list_subscr + 238 | 1;
                bl(this::mp_obj_get_array, 238);
                return;
            case 238:
                r2 = add(sp, 28);
                r1 = movs(r1, r6);
                r0 = ldr(r4 + 8);
                lr = list_subscr + 248 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 248);
                return;
            case 248:
                cmp(r0, 0);
                if (beq(null, 42)) return;
            case 252:
                r3 = ldr(sp + 28);
                r2 = ldr(sp + 8);
                r1 = ldr(sp + 32);
                r6 = adds(r3, r2);
                str(sp + 4, r1);
                r6 = subs(r6, r1);
                r0 = ldr(r4 + 12);
                cmp(r6, 0);
                if (ble(null, 352)) return;
            case 270:
                r3 = ldr(r4 + 8);
                r1 = ldr(r4 + 4);
                r2 = adds(r6, r3);
                cmp(r2, r1);
                if (bls(null, 296)) return;
            case 280:
                r2 = lsls(r2, 2);
                r1 = lsls(r1, 2);
                lr = list_subscr + 288 | 1;
                bl(this::m_realloc, 288);
                return;
            case 288:
                r3 = ldr(r4 + 8);
                str(r4 + 12, r0);
                r3 = adds(r3, r6);
                str(r4 + 4, r3);
            case 296:
                r2 = ldr(sp + 8);
                r3 = ldr(sp + 28);
                r1 = ldr(r4 + 8);
                r3 = adds(r3, r2);
                r2 = subs(r6, r3);
                r2 = adds(r2, r1);
                r1 = ldr(sp + 32);
                r0 = ldr(r4 + 12);
                r3 = lsls(r3, 2);
                r1 = lsls(r1, 2);
                r1 = adds(r0, r1);
                r2 = lsls(r2, 2);
                r0 = adds(r0, r3);
                lr = list_subscr + 326 | 1;
                bl(this::memmove, 326);
                return;
            case 326:
                r3 = ldr(sp + 8);
                r1 = ldr(sp + 12);
                r2 = lsls(r3, 2);
                r3 = ldr(sp + 28);
                r0 = lsls(r3, 2);
                r3 = ldr(r4 + 12);
                r0 = adds(r3, r0);
                lr = list_subscr + 344 | 1;
                bl(this::memmove, 344);
                return;
            case 344:
                r3 = ldr(r4 + 8);
                r6 = adds(r3, r6);
                str(r4 + 8, r6);
                b(null, 102);
                return;
            case 352:
                r3 = lsls(r3, 2);
                r1 = ldr(sp + 12);
                r0 = adds(r0, r3);
                r2 = lsls(r2, 2);
                lr = list_subscr + 364 | 1;
                bl(this::memcpy, 364);
                return;
            case 364:
                r1 = ldr(sp + 32);
                r2 = ldr(r4 + 8);
                r3 = ldr(r4 + 12);
                r2 = subs(r2, r1);
                r1 = lsls(r1, 2);
                str(sp + 4, r3);
                r1 = adds(r3, r1);
                r0 = ldr(sp + 28);
                r3 = ldr(sp + 8);
                r2 = lsls(r2, 2);
                r0 = adds(r0, r3);
                r3 = ldr(sp + 4);
                r0 = lsls(r0, 2);
                r0 = adds(r3, r0);
                lr = list_subscr + 396 | 1;
                bl(this::memmove, 396);
                return;
            case 396:
                r3 = ldr(r4 + 8);
                r2 = lsls(r6, 2);
                r0 = adds(r6, r3);
                r3 = ldr(r4 + 12);
                r0 = lsls(r0, 2);
                r2 = rsbs(r2, 0);
                r0 = adds(r3, r0);
                r1 = movs(r1, r7);
                lr = list_subscr + 416 | 1;
                bl(this::memset, 416);
                return;
            case 416:
                b(null, 344);
                return;
            case 418:
                r2 = movs(r2, r0);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = list_subscr + 428 | 1;
                bl(this::mp_obj_list_store, 428);
                return;
            case 428:
                b(null, 102);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274772, size=72, name='map_iternext', path='build/py/objmap.o', has_indirect=False)
    protected void map_iternext(int offset) throws Exception
    {
        pc = map_iternext + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 4);
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r0 = lsls(r3, 2);
                lr = map_iternext + 12 | 1;
                bl(this::m_malloc, 12);
                return;
            case 12:
                r6 = movs(r6, 0);
                r7 = movs(r7, r0);
            case 16:
                r1 = ldr(r5 + 4);
                cmp(r1, r6);
                if (bhi(null, 34)) return;
            case 22:
                r3 = movs(r3, r7);
                r2 = movs(r2, 0);
                r0 = ldr(r5 + 8);
                lr = map_iternext + 32 | 1;
                bl(this::mp_call_function_n_kw, 32);
                return;
            case 32:
                b(null, 62);
                return;
            case 34:
                r3 = lsls(r6, 2);
                str(sp + 4, r3);
                r3 = adds(r5, r3);
                r0 = ldr(r3 + 12);
                lr = map_iternext + 46 | 1;
                bl(this::mp_iternext, 46);
                return;
            case 46:
                r4 = subs(r0, 0);
                if (bne(null, 64)) return;
            case 50:
                r1 = ldr(r5 + 4);
                r0 = movs(r0, r7);
                r1 = lsls(r1, 2);
                lr = map_iternext + 60 | 1;
                bl(this::m_free, 60);
                return;
            case 60:
                r0 = movs(r0, r4);
            case 62:
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 64:
                r3 = lsls(r6, 2);
                str(r7 + r3, r0);
                r6 = adds(r6, 1);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274844, size=88, name='map_make_new', path='build/py/objmap.o', has_indirect=False)
    protected void map_make_new(int offset) throws Exception
    {
        pc = map_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                r7 = movs(r7, 0);
                sp = sub(sp, 20);
                r1 = movs(r1, r2);
                str(sp + 12, r0);
                r6 = movs(r6, r3);
                r0 = movs(r0, r5);
                r3 = 0x0000ffff;
                r2 = movs(r2, 2);
                str(sp, r7);
                lr = map_make_new + 26 | 1;
                bl(this::mp_arg_check_num, 26);
                return;
            case 26:
                r3 = adds(r5, 2);
                r3 = lsls(r3, 2);
                r0 = movs(r0, r3);
                str(sp + 8, r3);
                lr = map_make_new + 38 | 1;
                bl(this::m_malloc, 38);
                return;
            case 38:
                r4 = movs(r4, r0);
                r3 = ldr(sp + 12);
                r5 = subs(r5, 1);
                str(r0, r3);
                str(r0 + 4, r5);
                r3 = ldr(r6);
                r5 = ldr(sp + 8);
                str(r0 + 8, r3);
                r5 = subs(r5, 8);
            case 56:
                r7 = adds(r7, 4);
                cmp(r5, r7);
                if (bne(null, 68)) return;
            case 62:
                r0 = movs(r0, r4);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 68:
                r1 = movs(r1, 0);
                r0 = ldr(r6 + r7);
                lr = map_make_new + 76 | 1;
                bl(this::mp_getiter, 76);
                return;
            case 76:
                r3 = adds(r4, r7);
                str(r3 + 8, r0);
                b(null, 56);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134274932, size=92, name='module_print', path='build/py/objmodule.o', has_indirect=False)
    protected void module_print(int offset) throws Exception
    {
        pc = module_print + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r1 + 4);
                push(true, r4, r5, r6);
                r2 = movs(r2, 0);
                r5 = movs(r5, r0);
                r6 = movs(r6, r1);
                r0 = adds(r3, 4);
                r1 = movs(r1, 230);
                lr = module_print + 18 | 1;
                bl(this::mp_map_lookup, 18);
                return;
            case 18:
                r4 = 0x0802b305;
                cmp(r0, 0);
                if (beq(null, 32)) return;
            case 24:
                r0 = ldr(r0 + 4);
                lr = module_print + 30 | 1;
                bl(this::mp_obj_str_get_str, 30);
                return;
            case 30:
                r4 = movs(r4, r0);
            case 32:
                r0 = ldr(r6 + 4);
                r2 = movs(r2, 0);
                r0 = adds(r0, 4);
                r1 = movs(r1, 102);
                lr = module_print + 44 | 1;
                bl(this::mp_map_lookup, 44);
                return;
            case 44:
                cmp(r0, 0);
                if (beq(null, 68)) return;
            case 48:
                r0 = ldr(r0 + 4);
                lr = module_print + 54 | 1;
                bl(this::mp_obj_str_get_str, 54);
                return;
            case 54:
                r2 = movs(r2, r4);
                r3 = movs(r3, r0);
                r1 = module_print_str1_1;
                r0 = movs(r0, r5);
                lr = module_print + 66 | 1;
                bl(this::mp_printf, 66);
                return;
            case 66:
                pop(true, R4, R5, R6);
                return;
            case 68:
                r2 = movs(r2, r4);
                r1 = 0x080240ec;
                r0 = movs(r0, r5);
                lr = module_print + 78 | 1;
                bl(this::mp_printf, 78);
                return;
            case 78:
                b(null, 66);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275024, size=104, name='module_attr', path='build/py/objmodule.o', has_indirect=False)
    protected void module_attr(int offset) throws Exception
    {
        pc = module_attr + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = movs(r6, r2);
                r2 = ldr(r2);
                r4 = movs(r4, r1);
                r0 = ldr(r0 + 4);
                r1 = movs(r1, 2);
                cmp(r2, 0);
                if (bne(null, 36)) return;
            case 16:
                r4 = lsls(r4, r1);
                r0 = adds(r0, 4);
                r1 = orrs(r1, r4);
                lr = module_attr + 26 | 1;
                bl(this::mp_map_lookup, 26);
                return;
            case 26:
                cmp(r0, 0);
                if (beq(null, 34)) return;
            case 30:
                r3 = ldr(r0 + 4);
            case 32:
                str(r6, r3);
            case 34:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 36:
                r3 = ldrb(r0 + 4);
                tst(r3, r1);
                if (beq(null, 70)) return;
            case 42:
                r3 = mp_module_builtins_globals;
                cmp(r0, r3);
                if (bne(null, 34)) return;
            case 48:
                r5 = movs(r5, 214);
                r7 = mp_state_ctx;
                r5 = lsls(r5, 1);
                r3 = ldr(r7 + r5);
                cmp(r3, 0);
                if (bne(null, 68)) return;
            case 60:
                r0 = movs(r0, 1);
                lr = module_attr + 66 | 1;
                bl(this::mp_obj_new_dict, 66);
                return;
            case 66:
                str(r7 + r5, r0);
            case 68:
                r0 = ldr(r7 + r5);
            case 70:
                r1 = movs(r1, 2);
                r2 = ldr(r6 + 4);
                r4 = lsls(r4, 2);
                r1 = orrs(r1, r4);
                cmp(r2, 0);
                if (bne(null, 90)) return;
            case 82:
                lr = module_attr + 86 | 1;
                bl(this::mp_obj_dict_delete, 86);
                return;
            case 86:
                r3 = movs(r3, 0);
                b(null, 32);
                return;
            case 90:
                lr = module_attr + 94 | 1;
                bl(this::mp_obj_dict_store, 94);
                return;
            case 94:
                b(null, 86);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275328, size=8, name='object___init__', path='build/py/objobject.o', has_indirect=False)
    protected void object___init__(int offset) throws Exception
    {
        assert offset == 0;
        pc = object___init__ + offset;
        r0 = mp_const_none_obj;
        bx(lr);
    }

    // function: Function(address=134275336, size=48, name='object___new__', path='build/py/objobject.o', has_indirect=False)
    protected void object___new__(int offset) throws Exception
    {
        pc = object___new__ + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2);
                r3 = lsls(r0, 30);
                if (bne(null, 22)) return;
            case 6:
                r3 = mp_type_type;
                r2 = ldr(r0);
                cmp(r2, r3);
                if (bne(null, 22)) return;
            case 14:
                r3 = mp_obj_instance_make_new | 1;
                hint(mp_obj_instance_make_new | 1, this::mp_obj_instance_make_new);
                r2 = ldr(r0 + 12);
                cmp(r2, r3);
                if (beq(null, 28)) return;
            case 22:
                r0 = object___new___str1_1;
                lr = object___new__ + 28 | 1;
                bl(this::mp_raise_TypeError, 28);
                return;
            case 28:
                r1 = add(sp, 4);
                lr = object___new__ + 34 | 1;
                bl(this::mp_obj_new_instance, 34);
                return;
            case 34:
                pop(true, R1, R2, R3);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275384, size=28, name='object_make_new', path='build/py/objobject.o', has_indirect=False)
    protected void object_make_new(int offset) throws Exception
    {
        pc = object_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                str(sp, r2);
                r3 = movs(r3, r2);
                lr = object_make_new + 18 | 1;
                bl(this::mp_arg_check_num, 18);
                return;
            case 18:
                r0 = movs(r0, 4);
                lr = object_make_new + 24 | 1;
                bl(this::m_malloc, 24);
                return;
            case 24:
                str(r0, r4);
                pop(true, R1, R2, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275412, size=8, name='polymorph_it_iternext', path='build/py/objpolyiter.o', has_indirect=False)
    protected void polymorph_it_iternext(int offset) throws Exception
    {
        pc = polymorph_it_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = ldr(r0 + 4);
                blx(r3, 6);
                return;
            case 6:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275420, size=22, name='property_deleter', path='build/py/objproperty.o', has_indirect=False)
    protected void property_deleter(int offset) throws Exception
    {
        pc = property_deleter + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r0 = movs(r0, 16);
                r5 = movs(r5, r1);
                lr = property_deleter + 12 | 1;
                bl(this::m_malloc, 12);
                return;
            case 12:
                r3 = movs(r3, r0);
                r4 = ldm(r4, R1, R2, R6);
                r3 = stm(r3, R1, R2, R6);
                str(r0 + 12, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275442, size=26, name='property_setter', path='build/py/objproperty.o', has_indirect=False)
    protected void property_setter(int offset) throws Exception
    {
        pc = property_setter + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r0 = movs(r0, 16);
                r5 = movs(r5, r1);
                lr = property_setter + 12 | 1;
                bl(this::m_malloc, 12);
                return;
            case 12:
                r3 = movs(r3, r0);
                r4 = ldm(r4, R1, R2, R6);
                r3 = stm(r3, R1, R2, R6);
                r2 = ldr(r4);
                str(r3, r2);
                str(r0 + 8, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275468, size=26, name='property_getter', path='build/py/objproperty.o', has_indirect=False)
    protected void property_getter(int offset) throws Exception
    {
        pc = property_getter + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r0 = movs(r0, 16);
                r5 = movs(r5, r1);
                lr = property_getter + 12 | 1;
                bl(this::m_malloc, 12);
                return;
            case 12:
                r3 = movs(r3, r0);
                r4 = ldm(r4, R1, R2, R6);
                r3 = stm(r3, R1, R2, R6);
                r2 = ldr(r4);
                str(r3, r2);
                str(r0 + 4, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275496, size=56, name='property_make_new', path='build/py/objproperty.o', has_indirect=False)
    protected void property_make_new(int offset) throws Exception
    {
        pc = property_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r5 = movs(r5, r0);
                sp = sub(sp, 28);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                r3 = allowed_args_6527;
                r4 = add(sp, 8);
                str(sp, r3);
                str(sp + 4, r4);
                r3 = movs(r3, 4);
                lr = property_make_new + 26 | 1;
                bl(this::mp_arg_parse_all_kw_array, 26);
                return;
            case 26:
                r0 = movs(r0, 16);
                lr = property_make_new + 32 | 1;
                bl(this::m_malloc, 32);
                return;
            case 32:
                r3 = ldr(sp + 8);
                str(r0, r5);
                str(r0 + 4, r3);
                r3 = ldr(r4 + 4);
                str(r0 + 8, r3);
                r3 = ldr(r4 + 8);
                str(r0 + 12, r3);
                sp = add(sp, 28);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275556, size=24, name='none_print', path='build/py/objnone.o', has_indirect=False)
    protected void none_print(int offset) throws Exception
    {
        pc = none_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = none_print_str1_1;
                cmp(r2, 3);
                if (beq(null, 10)) return;
            case 8:
                r1 = 0x08021b79;
            case 10:
                lr = none_print + 14 | 1;
                bl(this::mp_print_str, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275580, size=72, name='namedtuple_asdict', path='build/py/objnamedtuple.o', has_indirect=False)
    protected void namedtuple_asdict(int offset) throws Exception
    {
        pc = namedtuple_asdict + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r3 = ldr(r0);
                r6 = movs(r6, r0);
                r3 = adds(r3, 64);
                r0 = ldr(r0 + 4);
                str(sp + 4, r3);
                lr = namedtuple_asdict + 16 | 1;
                bl(this::mp_obj_new_dict, 16);
                return;
            case 16:
                r3 = mp_type_ordereddict;
                r4 = movs(r4, r0);
                str(r0, r3);
                r3 = movs(r3, 4);
                r5 = movs(r5, 0);
                r7 = movs(r7, 2);
                r2 = ldrb(r0 + 4);
                r3 = orrs(r3, r2);
                strb(r0 + 4, r3);
            case 34:
                r3 = ldr(r6 + 4);
                cmp(r3, r5);
                if (bhi(null, 44)) return;
            case 40:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 44:
                r1 = ldr(sp + 4);
                r3 = lsls(r5, 2);
                r1 = ldr(r1 + r3);
                r2 = adds(r6, r3);
                r1 = lsls(r1, 2);
                r1 = orrs(r1, r7);
                r2 = ldr(r2 + 8);
                r0 = movs(r0, r4);
                lr = namedtuple_asdict + 64 | 1;
                bl(this::mp_obj_dict_store, 64);
                return;
            case 64:
                r5 = adds(r5, 1);
                b(null, 34);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275652, size=36, name='namedtuple_print', path='build/py/objnamedtuple.o', has_indirect=True)
    protected void namedtuple_print(int offset) throws Exception
    {
        pc = namedtuple_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r1);
                r5 = movs(r5, r0);
                r3 = ldr(r1);
                r1 = 0x08023417;
                r2 = ldrh(r3 + 6);
                lr = namedtuple_print + 16 | 1;
                bl(this::mp_printf, 16);
                return;
            case 16:
                r1 = ldr(r4);
                r0 = movs(r0, r5);
                r1 = adds(r1, 64);
                r2 = movs(r2, r4);
                lr = namedtuple_print + 28 | 1;
                bl(this::mp_obj_attrtuple_print_helper, 28);
                return;
            case 28:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275720, size=64, name='namedtuple_attr', path='build/py/objnamedtuple.o', has_indirect=True)
    protected void namedtuple_attr(int offset) throws Exception
    {
        pc = namedtuple_attr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r2);
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r4 = movs(r4, r2);
                cmp(r3, 0);
                if (bne(null, 42)) return;
            case 12:
                cmp(r1, 197);
                if (bne(null, 22)) return;
            case 16:
                r3 = namedtuple_asdict_obj;
                r4 = stm(r4, R3, R5);
            case 20:
                pop(true, R4, R5, R6);
                return;
            case 22:
                r0 = ldr(r0);
                lr = namedtuple_attr + 28 | 1;
                bl(this::mp_obj_namedtuple_find_field, 28);
                return;
            case 28:
                r3 = adds(r0, 1);
                if (beq(null, 20)) return;
            case 32:
                r0 = adds(r0, 2);
                r0 = lsls(r0, 2);
                r3 = ldr(r0 + r5);
                str(r4, r3);
                b(null, 20);
                return;
            case 42:
                r1 = namedtuple_attr_str1_1;
                r0 = mp_type_AttributeError;
                lr = namedtuple_attr + 50 | 1;
                bl(this::mp_raise_msg, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134275784, size=176, name='namedtuple_make_new', path='build/py/objnamedtuple.o', has_indirect=True)
    protected void namedtuple_make_new(int offset) throws Exception
    {
        pc = namedtuple_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r2);
                sp = sub(sp, 28);
                str(sp + 20, r3);
                r3 = ldr(r0 + 60);
                r5 = adds(r1, r7);
                str(sp + 16, r0);
                str(sp + 12, r1);
                cmp(r5, r3);
                if (beq(null, 36)) return;
            case 20:
                r2 = ldrh(r0 + 6);
                r1 = namedtuple_make_new_str1_1;
                str(sp, r5);
                r0 = mp_type_TypeError;
                lr = namedtuple_make_new + 32 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 32);
                return;
            case 32:
                lr = namedtuple_make_new + 36 | 1;
                bl(this::nlr_jump, 36);
                return;
            case 36:
                r1 = movs(r1, 0);
                r0 = movs(r0, r5);
                lr = namedtuple_make_new + 44 | 1;
                bl(this::mp_obj_new_tuple, 44);
                return;
            case 44:
                r3 = ldr(sp + 16);
                r6 = movs(r6, r0);
                str(r0, r3);
                r3 = ldr(sp + 12);
                r1 = ldr(sp + 20);
                r4 = lsls(r3, 2);
                r2 = movs(r2, r4);
                r0 = adds(r0, 8);
                lr = namedtuple_make_new + 64 | 1;
                bl(this::memcpy, 64);
                return;
            case 64:
                r0 = movs(r0, r4);
                r0 = adds(r0, 8);
                r2 = lsls(r7, 2);
                r0 = adds(r6, r0);
                r1 = movs(r1, 0);
                lr = namedtuple_make_new + 78 | 1;
                bl(this::memset, 78);
                return;
            case 78:
                r3 = ldr(sp + 20);
                r5 = adds(r5, r7);
                r4 = adds(r3, r4);
            case 84:
                r3 = ldr(sp + 12);
                cmp(r3, r5);
                if (blo(null, 96)) return;
            case 90:
                r0 = movs(r0, r6);
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 96:
                r0 = ldr(r4);
                lr = namedtuple_make_new + 102 | 1;
                bl(this::mp_obj_str_get_qstr, 102);
                return;
            case 102:
                r7 = movs(r7, r0);
                r1 = movs(r1, r0);
                r0 = ldr(sp + 16);
                lr = namedtuple_make_new + 112 | 1;
                bl(this::mp_obj_namedtuple_find_field, 112);
                return;
            case 112:
                r3 = adds(r0, 1);
                if (bne(null, 128)) return;
            case 116:
                r2 = movs(r2, r7);
                r1 = 0x08024495;
            case 120:
                r0 = mp_type_TypeError;
                lr = namedtuple_make_new + 126 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 126);
                return;
            case 126:
                b(null, 32);
                return;
            case 128:
                r0 = lsls(r0, 2);
                r0 = adds(r6, r0);
                r3 = ldr(r0 + 8);
                cmp(r3, 0);
                if (beq(null, 144)) return;
            case 138:
                r2 = movs(r2, r7);
                r1 = 0x080244b6;
                b(null, 120);
                return;
            case 144:
                r3 = ldr(r4 + 4);
                r4 = adds(r4, 8);
                str(r0 + 8, r3);
                r3 = ldr(sp + 12);
                r3 = adds(r3, 2);
                str(sp + 12, r3);
                b(null, 84);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276016, size=144, name='new_namedtuple_type', path='build/py/objnamedtuple.o', has_indirect=False)
    protected void new_namedtuple_type(int offset) throws Exception
    {
        pc = new_namedtuple_type + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4);
                str(sp + 4, r1);
                lr = new_namedtuple_type + 8 | 1;
                bl(this::mp_obj_str_get_qstr, 8);
                return;
            case 8:
                r3 = movs(r3, 3);
                r2 = ldr(sp + 4);
                r4 = movs(r4, r0);
                r3 = ands(r3, r2);
                cmp(r3, 2);
                if (beq(null, 32)) return;
            case 20:
                cmp(r3, 0);
                if (bne(null, 42)) return;
            case 24:
                r3 = mp_type_str;
                r2 = ldr(r2);
                cmp(r2, r3);
                if (bne(null, 42)) return;
            case 32:
                r1 = add(sp, 4);
                r0 = movs(r0, 1);
                lr = new_namedtuple_type + 40 | 1;
                bl(this::mp_obj_str_split, 40);
                return;
            case 40:
                str(sp + 4, r0);
            case 42:
                r2 = add(sp, 12);
                r1 = add(sp, 8);
                r0 = ldr(sp + 4);
                lr = new_namedtuple_type + 52 | 1;
                bl(this::mp_obj_get_array, 52);
                return;
            case 52:
                r1 = ldr(sp + 12);
                r0 = ldr(sp + 8);
                lr = new_namedtuple_type + 60 | 1;
                bl(this::mp_obj_new_namedtuple_base, 60);
                return;
            case 60:
                r3 = mp_type_type;
                strh(r0 + 6, r4);
                str(r0, r3);
                r3 = namedtuple_print | 1;
                hint(namedtuple_print | 1, this::namedtuple_print);
                str(r0 + 8, r3);
                r3 = namedtuple_make_new | 1;
                hint(namedtuple_make_new | 1, this::namedtuple_make_new);
                str(r0 + 12, r3);
                r3 = mp_obj_tuple_unary_op | 1;
                hint(mp_obj_tuple_unary_op | 1, this::mp_obj_tuple_unary_op);
                str(r0 + 20, r3);
                r3 = mp_obj_tuple_binary_op | 1;
                hint(mp_obj_tuple_binary_op | 1, this::mp_obj_tuple_binary_op);
                str(r0 + 24, r3);
                r3 = namedtuple_attr | 1;
                hint(namedtuple_attr | 1, this::namedtuple_attr);
                str(r0 + 28, r3);
                r3 = mp_obj_tuple_subscr | 1;
                hint(mp_obj_tuple_subscr | 1, this::mp_obj_tuple_subscr);
                str(r0 + 32, r3);
                r3 = mp_obj_tuple_getiter | 1;
                hint(mp_obj_tuple_getiter | 1, this::mp_obj_tuple_getiter);
                str(r0 + 36, r3);
                r3 = mp_type_tuple;
                str(r0 + 52, r3);
                sp = add(sp, 16);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276160, size=50, name='range_it_iternext', path='build/py/objrange.o', has_indirect=False)
    protected void range_it_iternext(int offset) throws Exception
    {
        pc = range_it_iternext + offset;
        switch (offset)
        {
            case 0:
                r2 = ldr(r0 + 12);
                push(true, r4);
                r3 = movs(r3, r0);
                cmp(r2, 0);
                if (ble(null, 22)) return;
            case 10:
                r1 = ldr(r0 + 4);
                r0 = ldr(r0 + 8);
                cmp(r1, r0);
                if (blt(null, 36)) return;
            case 18:
                r0 = movs(r0, 0);
            case 20:
                pop(true, R4);
                return;
            case 22:
                r0 = movs(r0, 0);
                cmp(r2, r0);
                if (beq(null, 20)) return;
            case 28:
                r1 = ldr(r3 + 4);
                r4 = ldr(r3 + 8);
                cmp(r1, r4);
                if (ble(null, 20)) return;
            case 36:
                r0 = movs(r0, 1);
                r1 = ldr(r3 + 4);
                r4 = lsls(r1, 1);
                r2 = adds(r2, r1);
                r0 = orrs(r0, r4);
                str(r3 + 4, r2);
                b(null, 20);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276210, size=32, name='range_len', path='build/py/objrange.o', has_indirect=False)
    protected void range_len(int offset) throws Exception
    {
        pc = range_len + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 8);
                r2 = ldr(r0 + 4);
                r1 = ldr(r0 + 12);
                r3 = subs(r3, r2);
                r3 = adds(r3, r1);
                push(true, r4);
                r0 = adds(r3, 1);
                cmp(r1, 0);
                if (ble(null, 20)) return;
            case 18:
                r0 = subs(r3, 1);
            case 20:
                lr = range_len + 24 | 1;
                bl(this::__divsi3, 24);
                return;
            case 24:
                r3 = mvns(r3, r0);
                r3 = asrs(r3, 31);
                r0 = ands(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276244, size=52, name='range_unary_op', path='build/py/objrange.o', has_indirect=False)
    protected void range_unary_op(int offset) throws Exception
    {
        pc = range_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                lr = range_unary_op + 10 | 1;
                bl(this::range_len, 10);
                return;
            case 10:
                r3 = movs(r3, r0);
                cmp(r4, 4);
                if (beq(null, 24)) return;
            case 16:
                cmp(r4, 5);
                if (beq(null, 34)) return;
            case 20:
                r0 = movs(r0, 0);
                b(null, 32);
                return;
            case 24:
                r0 = mp_const_true_obj;
                cmp(r3, 0);
                if (bgt(null, 32)) return;
            case 30:
                r0 = mp_const_false_obj;
            case 32:
                pop(true, R4);
                return;
            case 34:
                r3 = lsls(r0, 1);
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276296, size=24, name='range_getiter', path='build/py/objrange.o', has_indirect=False)
    protected void range_getiter(int offset) throws Exception
    {
        assert offset == 0;
        pc = range_getiter + offset;
        r3 = ldr(r0 + 4);
        str(r1 + 4, r3);
        r3 = ldr(r0 + 8);
        str(r1 + 8, r3);
        r3 = ldr(r0 + 12);
        r0 = movs(r0, r1);
        str(r1 + 12, r3);
        r3 = range_it_type;
        str(r1, r3);
        bx(lr);
    }

    // function: Function(address=134276320, size=132, name='range_subscr', path='build/py/objrange.o', has_indirect=False)
    protected void range_subscr(int offset) throws Exception
    {
        pc = range_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = movs(r4, r0);
                sp = sub(sp, 28);
                r5 = movs(r5, r1);
                r0 = movs(r0, 0);
                cmp(r2, 4);
                if (bne(null, 90)) return;
            case 14:
                r0 = movs(r0, r4);
                lr = range_subscr + 20 | 1;
                bl(this::range_len, 20);
                return;
            case 20:
                r3 = lsls(r5, 30);
                if (bne(null, 94)) return;
            case 24:
                r3 = mp_type_slice;
                r2 = ldr(r5);
                cmp(r2, r3);
                if (bne(null, 94)) return;
            case 32:
                r2 = add(sp, 12);
                r1 = movs(r1, r5);
                lr = range_subscr + 40 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 40);
                return;
            case 40:
                r0 = movs(r0, 16);
                lr = range_subscr + 46 | 1;
                bl(this::m_malloc, 46);
                return;
            case 46:
                r3 = mp_type_range;
                r2 = ldr(r4 + 12);
                str(r0, r3);
                r3 = ldr(sp + 12);
                r1 = ldr(r4 + 4);
                r3 = muls(r2, r3);
                r3 = adds(r3, r1);
                str(r0 + 4, r3);
                r3 = ldr(sp + 16);
                r1 = ldr(r4 + 4);
                str(sp + 4, r3);
                r3 = muls(r2, r3);
                r3 = adds(r3, r1);
                r1 = ldr(sp + 20);
                str(r0 + 8, r3);
                r2 = muls(r1, r2);
                str(r0 + 12, r2);
                cmp(r1, 0);
                if (bge(null, 90)) return;
            case 84:
                r2 = ldr(r4 + 12);
                r3 = subs(r3, r2);
                str(r0 + 8, r3);
            case 90:
                sp = add(sp, 28);
                pop(true, R4, R5);
                return;
            case 94:
                r3 = movs(r3, 0);
                r1 = movs(r1, r0);
                r2 = movs(r2, r5);
                r0 = ldr(r4);
                lr = range_subscr + 106 | 1;
                bl(this::mp_get_index, 106);
                return;
            case 106:
                r3 = ldr(r4 + 12);
                r0 = muls(r3, r0);
                r3 = ldr(r4 + 4);
                r0 = adds(r0, r3);
                r3 = movs(r3, 1);
                r0 = lsls(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 90);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276452, size=104, name='range_make_new', path='build/py/objrange.o', has_indirect=False)
    protected void range_make_new(int offset) throws Exception
    {
        pc = range_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                r7 = movs(r7, 0);
                sp = sub(sp, 20);
                r1 = movs(r1, r2);
                str(sp + 12, r0);
                r5 = movs(r5, r3);
                r2 = movs(r2, 1);
                r3 = movs(r3, 3);
                r0 = movs(r0, r6);
                str(sp, r7);
                lr = range_make_new + 26 | 1;
                bl(this::mp_arg_check_num, 26);
                return;
            case 26:
                r0 = movs(r0, 16);
                lr = range_make_new + 32 | 1;
                bl(this::m_malloc, 32);
                return;
            case 32:
                r3 = ldr(sp + 12);
                r4 = movs(r4, r0);
                str(r0, r3);
                r3 = movs(r3, 1);
                str(r0 + 4, r7);
                str(r0 + 12, r3);
                r0 = ldr(r5);
                cmp(r6, r3);
                if (bne(null, 62)) return;
            case 50:
                lr = range_make_new + 54 | 1;
                bl(this::mp_obj_get_int, 54);
                return;
            case 54:
                str(r4 + 8, r0);
            case 56:
                r0 = movs(r0, r4);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 62:
                lr = range_make_new + 66 | 1;
                bl(this::mp_obj_get_int, 66);
                return;
            case 66:
                str(r4 + 4, r0);
                r0 = ldr(r5 + 4);
                lr = range_make_new + 74 | 1;
                bl(this::mp_obj_get_int, 74);
                return;
            case 74:
                str(r4 + 8, r0);
                cmp(r6, 3);
                if (bne(null, 56)) return;
            case 80:
                r0 = ldr(r5 + 8);
                lr = range_make_new + 86 | 1;
                bl(this::mp_obj_get_int, 86);
                return;
            case 86:
                str(r4 + 12, r0);
                cmp(r0, 0);
                if (bne(null, 56)) return;
            case 92:
                r0 = range_make_new_str1_1;
                lr = range_make_new + 98 | 1;
                bl(this::mp_raise_ValueError, 98);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276556, size=56, name='range_print', path='build/py/objrange.o', has_indirect=False)
    protected void range_print(int offset) throws Exception
    {
        pc = range_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r2 = ldr(r1 + 4);
                r3 = ldr(r1 + 8);
                r1 = range_print_str1_1;
                r4 = movs(r4, r0);
                lr = range_print + 16 | 1;
                bl(this::mp_printf, 16);
                return;
            case 16:
                r2 = ldr(r5 + 12);
                cmp(r2, 1);
                if (bne(null, 32)) return;
            case 22:
                r1 = 0x08022c2e;
                r0 = movs(r0, r4);
                lr = range_print + 30 | 1;
                bl(this::mp_print_str, 30);
                return;
            case 30:
                pop(true, R4, R5, R6);
                return;
            case 32:
                r1 = 0x08024577;
                r0 = movs(r0, r4);
                lr = range_print + 40 | 1;
                bl(this::mp_printf, 40);
                return;
            case 40:
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276612, size=96, name='range_binary_op', path='build/py/objrange.o', has_indirect=False)
    protected void range_binary_op(int offset) throws Exception
    {
        pc = range_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r3 = movs(r3, 0);
                r4 = movs(r4, r2);
                r2 = movs(r2, 3);
                r5 = movs(r5, r1);
                r2 = ands(r2, r4);
                cmp(r2, r3);
                if (bne(null, 80)) return;
            case 16:
                r1 = mp_type_range;
                r6 = ldr(r4);
                r3 = movs(r3, r2);
                cmp(r6, r1);
                if (bne(null, 80)) return;
            case 26:
                cmp(r0, 2);
                if (bne(null, 80)) return;
            case 30:
                r0 = movs(r0, r5);
                lr = range_binary_op + 36 | 1;
                bl(this::range_len, 36);
                return;
            case 36:
                r6 = movs(r6, r0);
                r0 = movs(r0, r4);
                lr = range_binary_op + 44 | 1;
                bl(this::range_len, 44);
                return;
            case 44:
                r3 = mp_const_false_obj;
                cmp(r6, r0);
                if (bne(null, 80)) return;
            case 50:
                r3 = mp_const_true_obj;
                cmp(r6, 0);
                if (beq(null, 80)) return;
            case 56:
                r2 = ldr(r5 + 4);
                r1 = ldr(r4 + 4);
                r3 = mp_const_false_obj;
                cmp(r2, r1);
                if (bne(null, 80)) return;
            case 66:
                cmp(r6, 1);
                if (beq(null, 78)) return;
            case 70:
                r1 = ldr(r5 + 12);
                r2 = ldr(r4 + 12);
                cmp(r1, r2);
                if (bne(null, 80)) return;
            case 78:
                r3 = mp_const_true_obj;
            case 80:
                r0 = movs(r0, r3);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276708, size=52, name='range_attr', path='build/py/objrange.o', has_indirect=False)
    protected void range_attr(int offset) throws Exception
    {
        pc = range_attr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r2);
                push(true, r4);
                r4 = movs(r4, r2);
                cmp(r3, 0);
                if (bne(null, 26)) return;
            case 10:
                r3 = adds(r3, 243);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 28)) return;
            case 18:
                r0 = ldr(r0 + 4);
            case 20:
                lr = range_attr + 24 | 1;
                bl(this::mp_obj_new_int, 24);
                return;
            case 24:
                str(r4, r0);
            case 26:
                pop(true, R4);
                return;
            case 28:
                r3 = movs(r3, 252);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 40)) return;
            case 36:
                r0 = ldr(r0 + 8);
                b(null, 20);
                return;
            case 40:
                r3 = movs(r3, 253);
                r3 = lsls(r3, 1);
                cmp(r1, r3);
                if (bne(null, 26)) return;
            case 48:
                r0 = ldr(r0 + 12);
                b(null, 20);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276760, size=30, name='reversed_iternext', path='build/py/objreversed.o', has_indirect=False)
    protected void reversed_iternext(int offset) throws Exception
    {
        pc = reversed_iternext + offset;
        switch (offset)
        {
            case 0:
                r1 = ldr(r0 + 8);
                r3 = movs(r3, r0);
                push(true, r4);
                r0 = subs(r1, 0);
                if (beq(null, 28)) return;
            case 10:
                r2 = movs(r2, 1);
                r1 = subs(r1, 1);
                str(r3 + 8, r1);
                r1 = lsls(r1, 1);
                r1 = orrs(r1, r2);
                r0 = ldr(r3 + 4);
                r2 = adds(r2, 3);
                lr = reversed_iternext + 28 | 1;
                bl(this::mp_obj_subscr, 28);
                return;
            case 28:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276790, size=84, name='reversed_make_new', path='build/py/objreversed.o', has_indirect=False)
    protected void reversed_make_new(int offset) throws Exception
    {
        pc = reversed_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4, r5, r6);
                r5 = movs(r5, r3);
                r4 = movs(r4, 0);
                r3 = movs(r3, 1);
                r6 = movs(r6, r0);
                str(sp, r4);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = reversed_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r2 = add(sp, 8);
                r1 = movs(r1, 70);
                r0 = ldr(r5);
                lr = reversed_make_new + 32 | 1;
                bl(this::mp_load_method_maybe, 32);
                return;
            case 32:
                r3 = ldr(sp + 8);
                cmp(r3, r4);
                if (beq(null, 56)) return;
            case 38:
                r1 = movs(r1, r4);
                r0 = movs(r0, r4);
                r2 = add(sp, 8);
                lr = reversed_make_new + 48 | 1;
                bl(this::mp_call_method_n_kw, 48);
                return;
            case 48:
                r4 = movs(r4, r0);
            case 50:
                r0 = movs(r0, r4);
                sp = add(sp, 16);
                pop(true, R4, R5, R6);
                return;
            case 56:
                r0 = movs(r0, 12);
                lr = reversed_make_new + 62 | 1;
                bl(this::m_malloc, 62);
                return;
            case 62:
                str(r0, r6);
                r3 = ldr(r5);
                r4 = movs(r4, r0);
                str(r0 + 4, r3);
                r0 = ldr(r5);
                lr = reversed_make_new + 76 | 1;
                bl(this::mp_obj_len, 76);
                return;
            case 76:
                lr = reversed_make_new + 80 | 1;
                bl(this::mp_obj_get_int, 80);
                return;
            case 80:
                str(r4 + 8, r0);
                b(null, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276876, size=36, name='is_set_or_frozenset', path='build/py/objset.o', has_indirect=False)
    protected void is_set_or_frozenset(int offset) throws Exception
    {
        pc = is_set_or_frozenset + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 0);
                r2 = lsls(r0, 30);
                if (bne(null, 24)) return;
            case 6:
                r0 = ldr(r0);
                r2 = mp_type_set;
                r3 = adds(r3, 1);
                cmp(r0, r2);
                if (beq(null, 24)) return;
            case 16:
                r3 = mp_type_frozenset;
                r0 = subs(r0, r3);
                r3 = rsbs(r0, 0);
                r3 = adcs(r3, r0);
            case 24:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276912, size=28, name='set_getiter', path='build/py/objset.o', has_indirect=False)
    protected void set_getiter(int offset) throws Exception
    {
        assert offset == 0;
        pc = set_getiter + offset;
        r3 = mp_type_polymorph_iter;
        str(r1 + 8, r0);
        str(r1, r3);
        r3 = set_it_iternext | 1;
        hint(set_it_iternext | 1, this::set_it_iternext);
        r0 = movs(r0, r1);
        str(r1 + 4, r3);
        r3 = movs(r3, 0);
        str(r1 + 12, r3);
        bx(lr);
    }

    // function: Function(address=134276940, size=20, name='text_set_add', path='build/py/objset.o', has_indirect=False)
    protected void text_set_add(int offset) throws Exception
    {
        pc = text_set_add + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = adds(r0, 4);
                r2 = movs(r2, 1);
                lr = text_set_add + 10 | 1;
                bl(this::mp_set_lookup, 10);
                return;
            case 10:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276960, size=20, name='set_discard', path='build/py/objset.o', has_indirect=False)
    protected void set_discard(int offset) throws Exception
    {
        pc = set_discard + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = adds(r0, 4);
                r2 = movs(r2, 2);
                lr = set_discard + 10 | 1;
                bl(this::mp_set_lookup, 10);
                return;
            case 10:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134276980, size=38, name='set_update_int', path='build/py/objset.o', has_indirect=False)
    protected void set_update_int(int offset) throws Exception
    {
        pc = set_update_int + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, 0);
                lr = set_update_int + 12 | 1;
                bl(this::mp_getiter, 12);
                return;
            case 12:
                r4 = movs(r4, r0);
            case 14:
                r0 = movs(r0, r4);
                lr = set_update_int + 20 | 1;
                bl(this::mp_iternext, 20);
                return;
            case 20:
                r1 = subs(r0, 0);
                if (bne(null, 26)) return;
            case 24:
                pop(true, R4, R5, R6);
                return;
            case 26:
                r3 = adds(r5, 4);
                r2 = movs(r2, 1);
                r0 = movs(r0, r3);
                lr = set_update_int + 36 | 1;
                bl(this::mp_set_lookup, 36);
                return;
            case 36:
                b(null, 14);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277020, size=36, name='set_update', path='build/py/objset.o', has_indirect=False)
    protected void set_update(int offset) throws Exception
    {
        pc = set_update + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r0);
                r5 = movs(r5, r1);
                r4 = movs(r4, 1);
            case 8:
                cmp(r4, r6);
                if (blo(null, 16)) return;
            case 12:
                r0 = mp_const_none_obj;
                pop(true, R4, R5, R6);
                return;
            case 16:
                r3 = lsls(r4, 2);
                r1 = ldr(r5 + r3);
                r0 = ldr(r5);
                lr = set_update + 26 | 1;
                bl(this::set_update_int, 26);
                return;
            case 26:
                r4 = adds(r4, 1);
                b(null, 8);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277056, size=44, name='set_symmetric_difference_update', path='build/py/objset.o', has_indirect=False)
    protected void set_symmetric_difference_update(int offset) throws Exception
    {
        pc = set_symmetric_difference_update + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, 0);
                lr = set_symmetric_difference_update + 12 | 1;
                bl(this::mp_getiter, 12);
                return;
            case 12:
                r4 = movs(r4, r0);
            case 14:
                r0 = movs(r0, r4);
                lr = set_symmetric_difference_update + 20 | 1;
                bl(this::mp_iternext, 20);
                return;
            case 20:
                r1 = subs(r0, 0);
                if (bne(null, 28)) return;
            case 24:
                r0 = mp_const_none_obj;
                pop(true, R4, R5, R6);
                return;
            case 28:
                r3 = adds(r5, 4);
                r2 = movs(r2, 3);
                r0 = movs(r0, r3);
                lr = set_symmetric_difference_update + 38 | 1;
                bl(this::mp_set_lookup, 38);
                return;
            case 38:
                b(null, 14);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277100, size=60, name='set_isdisjoint', path='build/py/objset.o', has_indirect=False)
    protected void set_isdisjoint(int offset) throws Exception
    {
        pc = set_isdisjoint + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                sp = sub(sp, 20);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r1 = mov(sp);
                lr = set_isdisjoint + 14 | 1;
                bl(this::mp_getiter, 14);
                return;
            case 14:
                r4 = movs(r4, r0);
            case 16:
                r0 = movs(r0, r4);
                lr = set_isdisjoint + 22 | 1;
                bl(this::mp_iternext, 22);
                return;
            case 22:
                r1 = subs(r0, 0);
                if (bne(null, 32)) return;
            case 26:
                r0 = mp_const_true_obj;
            case 28:
                sp = add(sp, 20);
                pop(true, R4, R5);
                return;
            case 32:
                r3 = adds(r5, 4);
                r2 = movs(r2, 0);
                r0 = movs(r0, r3);
                lr = set_isdisjoint + 42 | 1;
                bl(this::mp_set_lookup, 42);
                return;
            case 42:
                cmp(r0, 0);
                if (beq(null, 16)) return;
            case 46:
                r0 = mp_const_false_obj;
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277160, size=42, name='set_copy', path='build/py/objset.o', has_indirect=False)
    protected void set_copy(int offset) throws Exception
    {
        pc = set_copy + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r0 = movs(r0, 16);
                lr = set_copy + 10 | 1;
                bl(this::m_malloc, 10);
                return;
            case 10:
                r5 = movs(r5, r0);
                r3 = ldr(r4);
                r1 = ldr(r4 + 4);
                r0 = stm(r0, R3);
                lr = set_copy + 22 | 1;
                bl(this::mp_set_init, 22);
                return;
            case 22:
                r3 = ldr(r4 + 8);
                r0 = ldr(r5 + 12);
                str(r5 + 8, r3);
                r3 = ldr(r4 + 4);
                r1 = ldr(r4 + 12);
                r2 = lsls(r3, 2);
                lr = set_copy + 38 | 1;
                bl(this::memcpy, 38);
                return;
            case 38:
                r0 = movs(r0, r5);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277202, size=20, name='set_union', path='build/py/objset.o', has_indirect=False)
    protected void set_union(int offset) throws Exception
    {
        pc = set_union + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                lr = set_union + 8 | 1;
                bl(this::set_copy, 8);
                return;
            case 8:
                r4 = movs(r4, r0);
                r1 = movs(r1, r5);
                lr = set_union + 16 | 1;
                bl(this::set_update_int, 16);
                return;
            case 16:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277222, size=20, name='set_symmetric_difference', path='build/py/objset.o', has_indirect=False)
    protected void set_symmetric_difference(int offset) throws Exception
    {
        pc = set_symmetric_difference + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                lr = set_symmetric_difference + 8 | 1;
                bl(this::set_copy, 8);
                return;
            case 8:
                r4 = movs(r4, r0);
                r1 = movs(r1, r5);
                lr = set_symmetric_difference + 16 | 1;
                bl(this::set_symmetric_difference_update, 16);
                return;
            case 16:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277244, size=16, name='set_clear', path='build/py/objset.o', has_indirect=False)
    protected void set_clear(int offset) throws Exception
    {
        pc = set_clear + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = adds(r0, 4);
                lr = set_clear + 8 | 1;
                bl(this::mp_set_clear, 8);
                return;
            case 8:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277260, size=80, name='set_diff_int', path='build/py/objset.o', has_indirect=False)
    protected void set_diff_int(int offset) throws Exception
    {
        pc = set_diff_int + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                str(sp + 4, r0);
                r4 = ldr(r1);
                cmp(r2, 0);
                if (bne(null, 20)) return;
            case 12:
                r0 = movs(r0, r4);
                lr = set_diff_int + 18 | 1;
                bl(this::set_copy, 18);
                return;
            case 18:
                r4 = movs(r4, r0);
            case 20:
                r5 = movs(r5, 1);
            case 22:
                r3 = ldr(sp + 4);
                cmp(r5, r3);
                if (blo(null, 32)) return;
            case 28:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 32:
                r3 = lsls(r5, 2);
                r0 = ldr(r6 + r3);
                r7 = adds(r4, 4);
                cmp(r4, r0);
                if (bne(null, 52)) return;
            case 42:
                r0 = movs(r0, r7);
                lr = set_diff_int + 48 | 1;
                bl(this::mp_set_clear, 48);
                return;
            case 48:
                r5 = adds(r5, 1);
                b(null, 22);
                return;
            case 52:
                r1 = movs(r1, 0);
                lr = set_diff_int + 58 | 1;
                bl(this::mp_getiter, 58);
                return;
            case 58:
                str(sp, r0);
            case 60:
                r0 = ldr(sp);
                lr = set_diff_int + 66 | 1;
                bl(this::mp_iternext, 66);
                return;
            case 66:
                r1 = subs(r0, 0);
                if (beq(null, 48)) return;
            case 70:
                r2 = movs(r2, 2);
                r0 = movs(r0, r7);
                lr = set_diff_int + 78 | 1;
                bl(this::mp_set_lookup, 78);
                return;
            case 78:
                b(null, 60);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277340, size=16, name='set_diff_update', path='build/py/objset.o', has_indirect=False)
    protected void set_diff_update(int offset) throws Exception
    {
        pc = set_diff_update + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 1);
                lr = set_diff_update + 8 | 1;
                bl(this::set_diff_int, 8);
                return;
            case 8:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277356, size=10, name='set_diff', path='build/py/objset.o', has_indirect=False)
    protected void set_diff(int offset) throws Exception
    {
        pc = set_diff + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                lr = set_diff + 8 | 1;
                bl(this::set_diff_int, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277368, size=180, name='set_print', path='build/py/objset.o', has_indirect=False)
    protected void set_print(int offset) throws Exception
    {
        pc = set_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r6 = movs(r6, 0);
                r3 = lsls(r1, 30);
                if (bne(null, 22)) return;
            case 12:
                r3 = ldr(r1);
                r6 = mp_type_frozenset;
                r6 = subs(r3, r6);
                r3 = rsbs(r6, 0);
                r6 = adcs(r6, r3);
            case 22:
                r3 = ldr(r5 + 8);
                cmp(r3, 0);
                if (bne(null, 50)) return;
            case 28:
                cmp(r6, 0);
                if (beq(null, 40)) return;
            case 32:
                r1 = set_print_str1_1;
                r0 = movs(r0, r4);
                lr = set_print + 40 | 1;
                bl(this::mp_print_str, 40);
                return;
            case 40:
                r1 = 0x080247b3;
            case 42:
                r0 = movs(r0, r4);
                lr = set_print + 48 | 1;
                bl(this::mp_print_str, 48);
                return;
            case 48:
                pop(true, R0, R1, R2, R4, R5, R6, R7);
                return;
            case 50:
                cmp(r6, 0);
                if (beq(null, 62)) return;
            case 54:
                r1 = 0x080247b9;
                r0 = movs(r0, r4);
                lr = set_print + 62 | 1;
                bl(this::mp_print_str, 62);
                return;
            case 62:
                r1 = 0x0802323c;
                r0 = movs(r0, r4);
                lr = set_print + 70 | 1;
                bl(this::mp_print_str, 70);
                return;
            case 70:
                r7 = movs(r7, 0);
                r3 = movs(r3, 1);
            case 74:
                r2 = ldr(r5 + 4);
                cmp(r2, r7);
                if (bhi(null, 96)) return;
            case 80:
                r1 = 0x0802ab1a;
                r0 = movs(r0, r4);
                lr = set_print + 88 | 1;
                bl(this::mp_print_str, 88);
                return;
            case 88:
                cmp(r6, 0);
                if (beq(null, 48)) return;
            case 92:
                r1 = 0x08022c2e;
                b(null, 42);
                return;
            case 96:
                r2 = lsls(r7, 2);
                str(sp + 4, r2);
                r2 = ldr(r5 + 12);
                r1 = lsls(r7, 2);
                r2 = ldr(r2 + r1);
                cmp(r2, 0);
                if (beq(null, 142)) return;
            case 110:
                cmp(r2, 4);
                if (beq(null, 142)) return;
            case 114:
                cmp(r3, 0);
                if (bne(null, 126)) return;
            case 118:
                r1 = 0x08022d77;
                r0 = movs(r0, r4);
                lr = set_print + 126 | 1;
                bl(this::mp_print_str, 126);
                return;
            case 126:
                r3 = ldr(r5 + 12);
                r1 = lsls(r7, 2);
                r1 = ldr(r3 + r1);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = set_print + 140 | 1;
                bl(this::mp_obj_print_helper, 140);
                return;
            case 140:
                r3 = movs(r3, 0);
            case 142:
                r7 = adds(r7, 1);
                b(null, 74);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277548, size=40, name='set_remove', path='build/py/objset.o', has_indirect=False)
    protected void set_remove(int offset) throws Exception
    {
        pc = set_remove + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = adds(r0, 4);
                r2 = movs(r2, 2);
                r4 = movs(r4, r1);
                lr = set_remove + 12 | 1;
                bl(this::mp_set_lookup, 12);
                return;
            case 12:
                cmp(r0, 0);
                if (bne(null, 28)) return;
            case 16:
                r1 = movs(r1, r4);
                r0 = mp_type_KeyError;
                lr = set_remove + 24 | 1;
                bl(this::mp_obj_new_exception_arg1, 24);
                return;
            case 24:
                lr = set_remove + 28 | 1;
                bl(this::nlr_jump, 28);
                return;
            case 28:
                r0 = mp_const_none_obj;
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277588, size=32, name='text_set_pop', path='build/py/objset.o', has_indirect=False)
    protected void text_set_pop(int offset) throws Exception
    {
        pc = text_set_pop + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = adds(r0, 4);
                lr = text_set_pop + 8 | 1;
                bl(this::mp_set_remove_first, 8);
                return;
            case 8:
                cmp(r0, 0);
                if (bne(null, 20)) return;
            case 12:
                r1 = set_pop_str1_1;
                r0 = mp_type_KeyError;
                lr = text_set_pop + 20 | 1;
                bl(this::mp_raise_msg, 20);
                return;
            case 20:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277620, size=42, name='set_it_iternext', path='build/py/objset.o', has_indirect=True)
    protected void set_it_iternext(int offset) throws Exception
    {
        pc = set_it_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = ldr(r0 + 8);
                r3 = ldr(r0 + 12);
                r5 = ldr(r4 + 4);
                r1 = lsls(r3, 2);
            case 10:
                cmp(r3, r5);
                if (blo(null, 18)) return;
            case 14:
                r2 = movs(r2, 0);
                b(null, 34);
                return;
            case 18:
                r2 = ldr(r4 + 12);
                r3 = adds(r3, 1);
                r2 = ldr(r2 + r1);
                cmp(r2, 0);
                if (beq(null, 38)) return;
            case 28:
                cmp(r2, 4);
                if (beq(null, 38)) return;
            case 32:
                str(r0 + 12, r3);
            case 34:
                r0 = movs(r0, r2);
                pop(true, R4, R5);
                return;
            case 38:
                r1 = adds(r1, 4);
                b(null, 10);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277664, size=116, name='set_unary_op', path='build/py/objset.o', has_indirect=False)
    protected void set_unary_op(int offset) throws Exception
    {
        pc = set_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                cmp(r0, 5);
                if (beq(null, 28)) return;
            case 8:
                cmp(r0, 6);
                if (beq(null, 38)) return;
            case 12:
                cmp(r0, 4);
                if (bne(null, 100)) return;
            case 16:
                r3 = ldr(r1 + 8);
                r0 = mp_const_true_obj;
                cmp(r3, 0);
                if (bne(null, 26)) return;
            case 24:
                r0 = mp_const_false_obj;
            case 26:
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 28:
                r0 = movs(r0, 1);
                r3 = ldr(r1 + 8);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                b(null, 26);
                return;
            case 38:
                r4 = movs(r4, 3);
                r0 = movs(r0, 0);
                r4 = ands(r4, r1);
                cmp(r4, r0);
                if (bne(null, 26)) return;
            case 48:
                r3 = mp_type_frozenset;
                r5 = ldr(r1);
                r0 = movs(r0, r4);
                cmp(r5, r3);
                if (bne(null, 26)) return;
            case 58:
                r7 = ldr(r1 + 4);
            case 60:
                cmp(r7, r4);
                if (bne(null, 72)) return;
            case 64:
                r0 = movs(r0, 1);
                r5 = lsls(r5, 1);
                r0 = orrs(r0, r5);
                b(null, 26);
                return;
            case 72:
                r2 = ldr(r6 + 12);
                r3 = lsls(r4, 2);
                r1 = ldr(r3 + r2);
                cmp(r1, 0);
                if (beq(null, 96)) return;
            case 82:
                cmp(r1, 4);
                if (beq(null, 96)) return;
            case 86:
                r0 = movs(r0, 6);
                lr = set_unary_op + 92 | 1;
                bl(this::mp_unary_op, 92);
                return;
            case 92:
                r0 = asrs(r0, 1);
                r5 = adds(r5, r0);
            case 96:
                r4 = adds(r4, 1);
                b(null, 60);
                return;
            case 100:
                r0 = movs(r0, 0);
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277836, size=100, name='set_intersect_int_part_4', path='build/py/objset.o', has_indirect=False)
    protected void set_intersect_int_part_4(int offset) throws Exception
    {
        pc = set_intersect_int_part_4 + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                r1 = movs(r1, 0);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                str(sp + 4, r2);
                lr = set_intersect_int_part_4 + 16 | 1;
                bl(this::mp_obj_new_set, 16);
                return;
            case 16:
                r1 = movs(r1, 0);
                r4 = movs(r4, r0);
                r0 = movs(r0, r6);
                lr = set_intersect_int_part_4 + 26 | 1;
                bl(this::mp_getiter, 26);
                return;
            case 26:
                r7 = movs(r7, r0);
            case 28:
                r0 = movs(r0, r7);
                lr = set_intersect_int_part_4 + 34 | 1;
                bl(this::mp_iternext, 34);
                return;
            case 34:
                r6 = subs(r0, 0);
                if (bne(null, 72)) return;
            case 38:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (beq(null, 68)) return;
            case 44:
                r3 = ldr(r5 + 4);
                r0 = ldr(r5 + 12);
                r1 = lsls(r3, 2);
                lr = set_intersect_int_part_4 + 54 | 1;
                bl(this::m_free, 54);
                return;
            case 54:
                r3 = ldr(r4 + 4);
                str(r5 + 4, r3);
                r3 = ldr(r4 + 8);
                str(r5 + 8, r3);
                r3 = ldr(r4 + 12);
                r4 = mp_const_none_obj;
                str(r5 + 12, r3);
            case 68:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 72:
                r0 = adds(r5, 4);
                r2 = movs(r2, 0);
                r1 = movs(r1, r6);
                lr = set_intersect_int_part_4 + 82 | 1;
                bl(this::mp_set_lookup, 82);
                return;
            case 82:
                cmp(r0, 0);
                if (beq(null, 28)) return;
            case 86:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_intersect_int_part_4 + 94 | 1;
                bl(this::text_set_add, 94);
                return;
            case 94:
                b(null, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277936, size=24, name='set_intersect_update', path='build/py/objset.o', has_indirect=False)
    protected void set_intersect_update(int offset) throws Exception
    {
        pc = set_intersect_update + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = mp_const_none_obj;
                cmp(r0, r1);
                if (beq(null, 16)) return;
            case 8:
                r2 = movs(r2, 1);
                lr = set_intersect_update + 14 | 1;
                bl(this::set_intersect_int_part_4, 14);
                return;
            case 14:
                r3 = movs(r3, r0);
            case 16:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277960, size=20, name='set_intersect', path='build/py/objset.o', has_indirect=False)
    protected void set_intersect(int offset) throws Exception
    {
        pc = set_intersect + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                cmp(r0, r1);
                if (bne(null, 12)) return;
            case 6:
                lr = set_intersect + 10 | 1;
                bl(this::set_copy, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            case 12:
                r2 = movs(r2, 0);
                lr = set_intersect + 18 | 1;
                bl(this::set_intersect_int_part_4, 18);
                return;
            case 18:
                b(null, 10);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134277992, size=82, name='set_make_new', path='build/py/objset.o', has_indirect=False)
    protected void set_make_new(int offset) throws Exception
    {
        pc = set_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                r5 = movs(r5, 0);
                r6 = movs(r6, r0);
                r1 = movs(r1, r2);
                r7 = movs(r7, r3);
                str(sp, r5);
                r3 = movs(r3, 1);
                r2 = movs(r2, r5);
                r0 = movs(r0, r4);
                lr = set_make_new + 24 | 1;
                bl(this::mp_arg_check_num, 24);
                return;
            case 24:
                cmp(r4, r5);
                if (bne(null, 44)) return;
            case 28:
                r1 = movs(r1, r4);
                r0 = movs(r0, r4);
                lr = set_make_new + 36 | 1;
                bl(this::mp_obj_new_set, 36);
                return;
            case 36:
                r4 = movs(r4, r0);
            case 38:
                str(r4, r6);
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 44:
                r1 = movs(r1, r5);
                r0 = movs(r0, r5);
                lr = set_make_new + 52 | 1;
                bl(this::mp_obj_new_set, 52);
                return;
            case 52:
                r1 = movs(r1, r5);
                r4 = movs(r4, r0);
                r0 = ldr(r7);
                lr = set_make_new + 62 | 1;
                bl(this::mp_getiter, 62);
                return;
            case 62:
                r5 = movs(r5, r0);
            case 64:
                r0 = movs(r0, r5);
                lr = set_make_new + 70 | 1;
                bl(this::mp_iternext, 70);
                return;
            case 70:
                r1 = subs(r0, 0);
                if (beq(null, 38)) return;
            case 74:
                r0 = movs(r0, r4);
                lr = set_make_new + 80 | 1;
                bl(this::mp_obj_set_store, 80);
                return;
            case 80:
                b(null, 64);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278076, size=180, name='set_issubset_internal', path='build/py/objset.o', has_indirect=False)
    protected void set_issubset_internal(int offset) throws Exception
    {
        pc = set_issubset_internal + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 36);
                r4 = movs(r4, r0);
                str(sp + 12, r0);
                str(sp + 8, r1);
                str(sp + 4, r2);
                r7 = movs(r7, 0);
                lr = set_issubset_internal + 18 | 1;
                bl(this::is_set_or_frozenset, 18);
                return;
            case 18:
                cmp(r0, r7);
                if (bne(null, 38)) return;
            case 22:
                r2 = movs(r2, r7);
                r3 = add(sp, 12);
                r1 = movs(r1, 1);
                r0 = mp_type_set;
                lr = set_issubset_internal + 34 | 1;
                bl(this::set_make_new, 34);
                return;
            case 34:
                r4 = movs(r4, r0);
                r7 = adds(r7, 1);
            case 38:
                r5 = ldr(sp + 8);
                r6 = movs(r6, 0);
                r0 = movs(r0, r5);
                lr = set_issubset_internal + 48 | 1;
                bl(this::is_set_or_frozenset, 48);
                return;
            case 48:
                cmp(r0, r6);
                if (bne(null, 68)) return;
            case 52:
                r2 = movs(r2, r6);
                r3 = add(sp, 8);
                r1 = movs(r1, 1);
                r0 = mp_type_set;
                lr = set_issubset_internal + 64 | 1;
                bl(this::set_make_new, 64);
                return;
            case 64:
                r5 = movs(r5, r0);
                r6 = adds(r6, 1);
            case 68:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (beq(null, 86)) return;
            case 74:
                r3 = mp_const_false_obj;
                r2 = ldr(r5 + 8);
                str(sp + 4, r3);
                r3 = ldr(r4 + 8);
                cmp(r3, r2);
                if (beq(null, 114)) return;
            case 86:
                r3 = mp_type_polymorph_iter;
                str(sp + 24, r4);
                str(sp + 16, r3);
                r3 = set_it_iternext | 1;
                hint(set_it_iternext | 1, this::set_it_iternext);
                str(sp + 20, r3);
                r3 = movs(r3, 0);
                str(sp + 28, r3);
            case 100:
                r0 = add(sp, 16);
                lr = set_issubset_internal + 106 | 1;
                bl(this::set_it_iternext, 106);
                return;
            case 106:
                r1 = subs(r0, 0);
                if (bne(null, 140)) return;
            case 110:
                r3 = mp_const_true_obj;
            case 112:
                str(sp + 4, r3);
            case 114:
                cmp(r7, 0);
                if (beq(null, 124)) return;
            case 118:
                r0 = adds(r4, 4);
                lr = set_issubset_internal + 124 | 1;
                bl(this::mp_set_clear, 124);
                return;
            case 124:
                cmp(r6, 0);
                if (beq(null, 134)) return;
            case 128:
                r0 = adds(r5, 4);
                lr = set_issubset_internal + 134 | 1;
                bl(this::mp_set_clear, 134);
                return;
            case 134:
                r0 = ldr(sp + 4);
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 140:
                r3 = adds(r5, 4);
                r2 = movs(r2, 0);
                r0 = movs(r0, r3);
                lr = set_issubset_internal + 150 | 1;
                bl(this::mp_set_lookup, 150);
                return;
            case 150:
                cmp(r0, 0);
                if (bne(null, 100)) return;
            case 154:
                r3 = mp_const_false_obj;
                b(null, 112);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278256, size=16, name='set_issuperset', path='build/py/objset.o', has_indirect=False)
    protected void set_issuperset(int offset) throws Exception
    {
        pc = set_issuperset + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, r1);
                push(true, r4);
                r1 = movs(r1, r0);
                r2 = movs(r2, 0);
                r0 = movs(r0, r3);
                lr = set_issuperset + 14 | 1;
                bl(this::set_issubset_internal, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278272, size=10, name='set_issubset', path='build/py/objset.o', has_indirect=False)
    protected void set_issubset(int offset) throws Exception
    {
        pc = set_issubset + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                lr = set_issubset + 8 | 1;
                bl(this::set_issubset_internal, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278284, size=300, name='set_binary_op', path='build/py/objset.o', has_indirect=False)
    protected void set_binary_op(int offset) throws Exception
    {
        pc = set_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                r6 = movs(r6, r2);
                str(sp, r1);
                str(sp + 4, r2);
                r7 = movs(r7, 0);
                r3 = lsls(r1, 30);
                if (bne(null, 28)) return;
            case 18:
                r3 = ldr(r1);
                r7 = mp_type_set;
                r7 = subs(r3, r7);
                r3 = rsbs(r7, 0);
                r7 = adcs(r7, r3);
            case 28:
                cmp(r5, 46);
                if (bne(null, 34)) return;
            case 32:
                b(null, 268);
                return;
            case 34:
                r0 = movs(r0, r6);
                lr = set_binary_op + 40 | 1;
                bl(this::is_set_or_frozenset, 40);
                return;
            case 40:
                cmp(r0, 0);
                if (beq(null, 162)) return;
            case 44:
                r3 = movs(r3, 1);
                r2 = movs(r2, r7);
                r2 = ands(r2, r3);
                cmp(r5, 10);
                if (beq(null, 176)) return;
            case 54:
                if (bhi(null, 100)) return;
            case 56:
                cmp(r5, 2);
                if (beq(null, 240)) return;
            case 60:
                if (bhi(null, 74)) return;
            case 62:
                cmp(r5, 0);
                if (beq(null, 220)) return;
            case 66:
                cmp(r5, r3);
                if (beq(null, 232)) return;
            case 70:
                r4 = movs(r4, 0);
                b(null, 96);
                return;
            case 74:
                cmp(r5, 4);
                if (beq(null, 258)) return;
            case 78:
                if (blo(null, 248)) return;
            case 80:
                cmp(r5, 9);
                if (bne(null, 70)) return;
            case 84:
                cmp(r7, 0);
                if (beq(null, 166)) return;
            case 88:
                r1 = mov(sp);
                r0 = movs(r0, 2);
                lr = set_binary_op + 96 | 1;
                bl(this::set_update, 96);
                return;
            case 96:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 100:
                cmp(r5, 21);
                if (beq(null, 166)) return;
            case 104:
                if (bhi(null, 124)) return;
            case 106:
                cmp(r5, 11);
                if (beq(null, 190)) return;
            case 110:
                cmp(r5, 15);
                if (bne(null, 70)) return;
            case 114:
                r1 = mov(sp);
                r0 = movs(r0, 2);
                lr = set_binary_op + 122 | 1;
                bl(this::set_diff_int, 122);
                return;
            case 122:
                b(null, 162);
                return;
            case 124:
                cmp(r5, 23);
                if (beq(null, 154)) return;
            case 128:
                if (blo(null, 144)) return;
            case 130:
                cmp(r5, 27);
                if (bne(null, 70)) return;
            case 134:
                r1 = mov(sp);
                r0 = movs(r0, 2);
                lr = set_binary_op + 142 | 1;
                bl(this::set_diff, 142);
                return;
            case 142:
                b(null, 162);
                return;
            case 144:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
            case 148:
                lr = set_binary_op + 152 | 1;
                bl(this::set_symmetric_difference, 152);
                return;
            case 152:
                b(null, 162);
                return;
            case 154:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_binary_op + 162 | 1;
                bl(this::set_intersect, 162);
                return;
            case 162:
                r4 = movs(r4, r0);
                b(null, 96);
                return;
            case 166:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_binary_op + 174 | 1;
                bl(this::set_union, 174);
                return;
            case 174:
                b(null, 162);
                return;
            case 176:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                cmp(r7, 0);
                if (beq(null, 148)) return;
            case 184:
                lr = set_binary_op + 188 | 1;
                bl(this::set_symmetric_difference_update, 188);
                return;
            case 188:
                b(null, 96);
                return;
            case 190:
                cmp(r4, r6);
                if (bne(null, 206)) return;
            case 194:
                cmp(r7, 0);
                if (bne(null, 96)) return;
            case 198:
                r0 = movs(r0, r4);
                lr = set_binary_op + 204 | 1;
                bl(this::set_copy, 204);
                return;
            case 204:
                b(null, 162);
                return;
            case 206:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_binary_op + 214 | 1;
                bl(this::set_intersect_int_part_4, 214);
                return;
            case 214:
                cmp(r7, 0);
                if (beq(null, 162)) return;
            case 218:
                b(null, 96);
                return;
            case 220:
                r2 = movs(r2, r3);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
            case 226:
                lr = set_binary_op + 230 | 1;
                bl(this::set_issubset_internal, 230);
                return;
            case 230:
                b(null, 162);
                return;
            case 232:
                r2 = movs(r2, r5);
                r1 = movs(r1, r4);
                r0 = movs(r0, r6);
                b(null, 226);
                return;
            case 240:
                r3 = ldr(r4 + 8);
                r2 = ldr(r6 + 8);
                cmp(r3, r2);
                if (bne(null, 284)) return;
            case 248:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_binary_op + 256 | 1;
                bl(this::set_issubset, 256);
                return;
            case 256:
                b(null, 162);
                return;
            case 258:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = set_binary_op + 266 | 1;
                bl(this::set_issuperset, 266);
                return;
            case 266:
                b(null, 162);
                return;
            case 268:
                r0 = adds(r4, 4);
                r2 = movs(r2, 0);
                r1 = movs(r1, r6);
                lr = set_binary_op + 278 | 1;
                bl(this::mp_set_lookup, 278);
                return;
            case 278:
                r4 = mp_const_true_obj;
                cmp(r0, 0);
                if (bne(null, 96)) return;
            case 284:
                r4 = mp_const_false_obj;
                b(null, 96);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278584, size=16, name='singleton_print', path='build/py/objsingleton.o', has_indirect=False)
    protected void singleton_print(int offset) throws Exception
    {
        pc = singleton_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = ldr(r1 + 4);
                r1 = 0x08023417;
                lr = singleton_print + 10 | 1;
                bl(this::mp_printf, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278600, size=84, name='slice_print', path='build/py/objslice.o', has_indirect=False)
    protected void slice_print(int offset) throws Exception
    {
        pc = slice_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r1 = slice_print_str1_1;
                lr = slice_print + 12 | 1;
                bl(this::mp_print_str, 12);
                return;
            case 12:
                r1 = ldr(r5 + 4);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = slice_print + 22 | 1;
                bl(this::mp_obj_print_helper, 22);
                return;
            case 22:
                r6 = 0x08022d77;
                r0 = movs(r0, r4);
                r1 = movs(r1, r6);
                lr = slice_print + 32 | 1;
                bl(this::mp_print_str, 32);
                return;
            case 32:
                r1 = ldr(r5 + 8);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = slice_print + 42 | 1;
                bl(this::mp_obj_print_helper, 42);
                return;
            case 42:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = slice_print + 50 | 1;
                bl(this::mp_print_str, 50);
                return;
            case 50:
                r1 = ldr(r5 + 12);
                r2 = movs(r2, 1);
                r0 = movs(r0, r4);
                lr = slice_print + 60 | 1;
                bl(this::mp_obj_print_helper, 60);
                return;
            case 60:
                r1 = 0x08022c2e;
                r0 = movs(r0, r4);
                lr = slice_print + 68 | 1;
                bl(this::mp_print_str, 68);
                return;
            case 68:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278684, size=44, name='slice_attr', path='build/py/objslice.o', has_indirect=False)
    protected void slice_attr(int offset) throws Exception
    {
        pc = slice_attr + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r2);
                cmp(r3, 0);
                if (bne(null, 18)) return;
            case 6:
                r3 = adds(r3, 243);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 20)) return;
            case 14:
                r3 = ldr(r0 + 4);
            case 16:
                str(r2, r3);
            case 18:
                bx(lr);
                return;
            case 20:
                r3 = movs(r3, 252);
                r3 = adds(r3, 255);
                cmp(r1, r3);
                if (bne(null, 32)) return;
            case 28:
                r3 = ldr(r0 + 8);
                b(null, 16);
                return;
            case 32:
                r3 = movs(r3, 253);
                r3 = lsls(r3, 1);
                cmp(r1, r3);
                if (bne(null, 18)) return;
            case 40:
                r3 = ldr(r0 + 12);
                b(null, 16);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278776, size=56, name='arg_looks_integer', path='build/py/objstr.o', has_indirect=False)
    protected void arg_looks_integer(int offset) throws Exception
    {
        pc = arg_looks_integer + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 3);
                push(true, r4, r5);
                r2 = ands(r2, r0);
                r1 = movs(r1, 1);
                cmp(r2, 0);
                if (bne(null, 22)) return;
            case 12:
                r4 = mp_type_bool;
                r5 = ldr(r0);
                r3 = movs(r3, r1);
                cmp(r5, r4);
                if (beq(null, 42)) return;
            case 22:
                r3 = movs(r3, r1);
                r3 = ands(r3, r0);
                if (bne(null, 42)) return;
            case 28:
                cmp(r2, 0);
                if (bne(null, 42)) return;
            case 32:
                r3 = ldr(r0);
                r0 = mp_type_int;
                r3 = subs(r3, r0);
                r0 = rsbs(r3, 0);
                r3 = adcs(r3, r0);
            case 42:
                r0 = movs(r0, r3);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278832, size=40, name='arg_looks_numeric', path='build/py/objstr.o', has_indirect=False)
    protected void arg_looks_numeric(int offset) throws Exception
    {
        pc = arg_looks_numeric + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = arg_looks_numeric + 8 | 1;
                bl(this::arg_looks_integer, 8);
                return;
            case 8:
                r3 = movs(r3, 1);
                cmp(r0, 0);
                if (bne(null, 30)) return;
            case 14:
                r3 = movs(r3, r0);
                r2 = lsls(r4, 30);
                if (bne(null, 30)) return;
            case 20:
                r0 = mp_type_float;
                r3 = ldr(r4);
                r3 = subs(r3, r0);
                r0 = rsbs(r3, 0);
                r3 = adcs(r3, r0);
            case 30:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278900, size=56, name='bytes_it_iternext', path='build/py/objstr.o', has_indirect=True)
    protected void bytes_it_iternext(int offset) throws Exception
    {
        pc = bytes_it_iternext + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r4);
                r4 = movs(r4, r0);
                r0 = ldr(r0 + 8);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 48)) return;
            case 14:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 4);
                lr = bytes_it_iternext + 22 | 1;
                bl(this::qstr_data, 22);
                return;
            case 22:
                r2 = movs(r2, r0);
            case 24:
                r3 = ldr(r4 + 12);
                r1 = ldr(sp + 4);
                r0 = movs(r0, 0);
                cmp(r3, r1);
                if (bhs(null, 46)) return;
            case 34:
                r2 = ldrb(r2 + r3);
                r0 = adds(r0, 1);
                r2 = lsls(r2, 1);
                r3 = adds(r3, 1);
                r0 = orrs(r0, r2);
                str(r4 + 12, r3);
            case 46:
                pop(true, R1, R2, R4);
                return;
            case 48:
                r3 = ldr(r0 + 8);
                r2 = ldr(r0 + 12);
                str(sp + 4, r3);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278956, size=40, name='unlikely_bad_implicit_conversion', path='build/py/objstr.o', has_indirect=False)
    protected void unlikely_bad_implicit_conversion(int offset) throws Exception
    {
        pc = unlikely_bad_implicit_conversion + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = unlikely_bad_implicit_conversion + 6 | 1;
                bl(this::mp_obj_get_type, 6);
                return;
            case 6:
                r1 = movs(r1, 254);
                r2 = ldrh(r0 + 6);
                r1 = lsls(r1, 1);
                r3 = movs(r3, 229);
                cmp(r2, r1);
                if (beq(null, 20)) return;
            case 18:
                r3 = movs(r3, r1);
            case 20:
                r1 = bad_implicit_conversion_str1_1;
                r0 = mp_type_TypeError;
                lr = unlikely_bad_implicit_conversion + 28 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 28);
                return;
            case 28:
                lr = unlikely_bad_implicit_conversion + 32 | 1;
                bl(this::nlr_jump, 32);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134278996, size=232, name='str_count', path='build/py/objstr.o', has_indirect=False)
    protected void str_count(int offset) throws Exception
    {
        pc = str_count + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 36);
                str(sp + 20, r0);
                r0 = ldr(r1);
                r5 = movs(r5, r1);
                lr = str_count + 14 | 1;
                bl(this::mp_obj_get_type, 14);
                return;
            case 14:
                r4 = movs(r4, r0);
                r0 = ldr(r5 + 4);
                lr = str_count + 22 | 1;
                bl(this::mp_obj_get_type, 22);
                return;
            case 22:
                r7 = movs(r7, r0);
                cmp(r0, r4);
                if (beq(null, 34)) return;
            case 28:
                r0 = ldr(r5 + 4);
                lr = str_count + 34 | 1;
                bl(this::unlikely_bad_implicit_conversion, 34);
                return;
            case 34:
                r3 = movs(r3, 3);
                r0 = ldr(r5);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 170)) return;
            case 44:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 24);
                lr = str_count + 52 | 1;
                bl(this::qstr_data, 52);
                return;
            case 52:
                r6 = movs(r6, r0);
            case 54:
                r3 = movs(r3, 3);
                r0 = ldr(r5 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 178)) return;
            case 64:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 28);
                lr = str_count + 72 | 1;
                bl(this::qstr_data, 72);
                return;
            case 72:
                str(sp + 16, r0);
            case 74:
                r2 = ldr(sp + 24);
                r4 = movs(r4, r6);
                r3 = adds(r6, r2);
                str(sp + 12, r3);
                r3 = ldr(sp + 20);
                cmp(r3, 2);
                if (bls(null, 140)) return;
            case 88:
                r3 = ldr(r5 + 8);
                r1 = mp_const_none_obj;
                cmp(r3, r1);
                if (beq(null, 110)) return;
            case 96:
                r1 = movs(r1, 1);
                r0 = movs(r0, r7);
                str(sp, r1);
                r1 = movs(r1, r6);
                lr = str_count + 108 | 1;
                bl(this::str_index_to_ptr, 108);
                return;
            case 108:
                r4 = movs(r4, r0);
            case 110:
                r3 = ldr(sp + 20);
                cmp(r3, 3);
                if (beq(null, 140)) return;
            case 116:
                r3 = ldr(r5 + 12);
                r2 = mp_const_none_obj;
                cmp(r3, r2);
                if (beq(null, 140)) return;
            case 124:
                r2 = movs(r2, 1);
                r1 = movs(r1, r6);
                str(sp, r2);
                r0 = movs(r0, r7);
                r2 = ldr(sp + 24);
                lr = str_count + 138 | 1;
                bl(this::str_index_to_ptr, 138);
                return;
            case 138:
                str(sp + 12, r0);
            case 140:
                r5 = movs(r5, 0);
                r3 = ldr(sp + 28);
                cmp(r3, r5);
                if (bne(null, 204)) return;
            case 148:
                r3 = ldr(sp + 12);
                r0 = movs(r0, r4);
                r1 = subs(r3, r4);
                lr = str_count + 158 | 1;
                bl(this::utf8_charlen, 158);
                return;
            case 158:
                r0 = adds(r0, 1);
                r5 = lsls(r0, 1);
            case 162:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r5);
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 170:
                r3 = ldr(r0 + 8);
                r6 = ldr(r0 + 12);
                str(sp + 24, r3);
                b(null, 54);
                return;
            case 178:
                r3 = ldr(r0 + 8);
                str(sp + 28, r3);
                r3 = ldr(r0 + 12);
                str(sp + 16, r3);
                b(null, 74);
                return;
            case 188:
                r1 = ldr(sp + 16);
                r0 = movs(r0, r4);
                lr = str_count + 196 | 1;
                bl(this::memcmp, 196);
                return;
            case 196:
                cmp(r0, 0);
                if (bne(null, 218)) return;
            case 200:
                r5 = adds(r5, 1);
            case 202:
                r4 = movs(r4, r6);
            case 204:
                r2 = ldr(sp + 28);
                r3 = ldr(sp + 12);
                r6 = adds(r4, r2);
                cmp(r6, r3);
                if (bls(null, 188)) return;
            case 214:
                r5 = lsls(r5, 1);
                b(null, 162);
                return;
            case 218:
                r0 = movs(r0, r4);
                lr = str_count + 224 | 1;
                bl(this::utf8_next_char, 224);
                return;
            case 224:
                r6 = movs(r6, r0);
                b(null, 202);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279228, size=132, name='str_uni_istype', path='build/py/objstr.o', has_indirect=False)
    protected void str_uni_istype(int offset) throws Exception
    {
        pc = str_uni_istype + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r3 = ands(r3, r1);
                r5 = movs(r5, r0);
                cmp(r3, 2);
                if (bne(null, 32)) return;
            case 12:
                r0 = lsrs(r1, 2);
                r1 = add(sp, 4);
                lr = str_uni_istype + 20 | 1;
                bl(this::qstr_data, 20);
                return;
            case 20:
                r4 = movs(r4, r0);
            case 22:
                r3 = ldr(sp + 4);
                cmp(r3, 0);
                if (bne(null, 40)) return;
            case 28:
                r0 = mp_const_false_obj;
            case 30:
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 32:
                r3 = ldr(r1 + 8);
                r4 = ldr(r1 + 12);
                str(sp + 4, r3);
                b(null, 22);
                return;
            case 40:
                r3 = unichar_isupper | 1;
                hint(unichar_isupper | 1, this::unichar_isupper);
                r6 = movs(r6, r4);
                cmp(r5, r3);
                if (bne(null, 64)) return;
            case 48:
                r7 = movs(r7, 0);
            case 50:
                r2 = ldr(sp + 4);
                r3 = subs(r6, r4);
                cmp(r2, r3);
                if (bhi(null, 94)) return;
            case 58:
                cmp(r7, 0);
                if (bne(null, 78)) return;
            case 62:
                b(null, 28);
                return;
            case 64:
                r3 = unichar_islower | 1;
                hint(unichar_islower | 1, this::unichar_islower);
                cmp(r5, r3);
                if (beq(null, 48)) return;
            case 70:
                r2 = ldr(sp + 4);
                r3 = subs(r6, r4);
                cmp(r2, r3);
                if (bhi(null, 82)) return;
            case 78:
                r0 = mp_const_true_obj;
                b(null, 30);
                return;
            case 82:
                r0 = ldrb(r6);
                blx(r5, 86);
                return;
            case 86:
                r6 = adds(r6, 1);
                cmp(r0, 0);
                if (bne(null, 70)) return;
            case 92:
                b(null, 28);
                return;
            case 94:
                r0 = ldrb(r6);
                lr = str_uni_istype + 100 | 1;
                bl(this::unichar_isalpha, 100);
                return;
            case 100:
                cmp(r0, 0);
                if (beq(null, 112)) return;
            case 104:
                r0 = ldrb(r6);
                blx(r5, 108);
                return;
            case 108:
                r7 = subs(r0, 0);
                if (beq(null, 28)) return;
            case 112:
                r6 = adds(r6, 1);
                b(null, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279360, size=16, name='str_isspace', path='build/py/objstr.o', has_indirect=False)
    protected void str_isspace(int offset) throws Exception
    {
        pc = str_isspace + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_isspace | 1;
                hint(unichar_isspace | 1, this::unichar_isspace);
                lr = str_isspace + 10 | 1;
                bl(this::str_uni_istype, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279376, size=16, name='str_isalpha', path='build/py/objstr.o', has_indirect=False)
    protected void str_isalpha(int offset) throws Exception
    {
        pc = str_isalpha + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_isalpha | 1;
                hint(unichar_isalpha | 1, this::unichar_isalpha);
                lr = str_isalpha + 10 | 1;
                bl(this::str_uni_istype, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279392, size=16, name='str_isdigit', path='build/py/objstr.o', has_indirect=False)
    protected void str_isdigit(int offset) throws Exception
    {
        pc = str_isdigit + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_isdigit | 1;
                hint(unichar_isdigit | 1, this::unichar_isdigit);
                lr = str_isdigit + 10 | 1;
                bl(this::str_uni_istype, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279408, size=16, name='str_isupper', path='build/py/objstr.o', has_indirect=False)
    protected void str_isupper(int offset) throws Exception
    {
        pc = str_isupper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_isupper | 1;
                hint(unichar_isupper | 1, this::unichar_isupper);
                lr = str_isupper + 10 | 1;
                bl(this::str_uni_istype, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279424, size=16, name='str_islower', path='build/py/objstr.o', has_indirect=False)
    protected void str_islower(int offset) throws Exception
    {
        pc = str_islower + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_islower | 1;
                hint(unichar_islower | 1, this::unichar_islower);
                lr = str_islower + 10 | 1;
                bl(this::str_uni_istype, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279440, size=48, name='str_to_int', path='build/py/objstr.o', has_indirect=False)
    protected void str_to_int(int offset) throws Exception
    {
        pc = str_to_int + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                cmp(r0, r1);
                if (bhs(null, 46)) return;
            case 6:
                r3 = ldrb(r0);
                r3 = subs(r3, 48);
                cmp(r3, 9);
                if (bhi(null, 46)) return;
            case 14:
                r3 = movs(r3, 0);
                r5 = movs(r5, 10);
                str(r2, r3);
            case 20:
                r3 = ldr(r2);
                r4 = ldrb(r0);
                r3 = muls(r5, r3);
                r4 = subs(r4, 48);
                r3 = adds(r3, r4);
                r0 = adds(r0, 1);
                str(r2, r3);
                cmp(r1, r0);
                if (beq(null, 46)) return;
            case 38:
                r3 = ldrb(r0);
                r3 = subs(r3, 48);
                cmp(r3, 9);
                if (bls(null, 20)) return;
            case 46:
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279864, size=96, name='str_print', path='build/py/objstr.o', has_indirect=False)
    protected void str_print(int offset) throws Exception
    {
        pc = str_print + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r4, r5, r6);
                r3 = ands(r3, r1);
                r4 = movs(r4, r0);
                r5 = movs(r5, r2);
                cmp(r3, 2);
                if (bne(null, 40)) return;
            case 14:
                r0 = lsrs(r1, 2);
                r1 = add(sp, 4);
                lr = str_print + 22 | 1;
                bl(this::qstr_data, 22);
                return;
            case 22:
                r6 = movs(r6, r0);
            case 24:
                cmp(r5, 3);
                if (bne(null, 48)) return;
            case 28:
                r2 = ldr(sp + 4);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = str_print + 38 | 1;
                bl(this::mp_str_print_json, 38);
                return;
            case 38:
                pop(true, R0, R1, R4, R5, R6);
                return;
            case 40:
                r3 = ldr(r1 + 8);
                r6 = ldr(r1 + 12);
                str(sp + 4, r3);
                b(null, 24);
                return;
            case 48:
                cmp(r5, 4);
                if (bne(null, 66)) return;
            case 52:
                r3 = movs(r3, r6);
                r2 = ldr(sp + 4);
                r1 = str_print_str1_1;
                r0 = movs(r0, r4);
                lr = str_print + 64 | 1;
                bl(this::mp_printf, 64);
                return;
            case 64:
                b(null, 38);
                return;
            case 66:
                r1 = 0x08022d66;
                r0 = movs(r0, r4);
                lr = str_print + 74 | 1;
                bl(this::mp_print_str, 74);
                return;
            case 74:
                r3 = movs(r3, 1);
                r2 = ldr(sp + 4);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = str_print + 86 | 1;
                bl(this::mp_str_print_quoted, 86);
                return;
            case 86:
                b(null, 38);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134279960, size=62, name='find_subbytes', path='build/py/objstr.o', has_indirect=False)
    protected void find_subbytes(int offset) throws Exception
    {
        pc = find_subbytes + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r6 = movs(r6, r3);
                str(sp, r0);
                str(sp + 4, r2);
                r5 = movs(r5, 0);
                cmp(r1, r3);
                if (blo(null, 58)) return;
            case 14:
                r4 = subs(r1, r3);
                r3 = ldr(sp + 32);
                r7 = movs(r7, r5);
                cmp(r3, r5);
                if (ble(null, 28)) return;
            case 24:
                r7 = movs(r7, r4);
                r4 = movs(r4, r5);
            case 28:
                r3 = ldr(sp);
                r2 = movs(r2, r6);
                r5 = adds(r3, r4);
                r1 = ldr(sp + 4);
                r0 = movs(r0, r5);
                lr = find_subbytes + 42 | 1;
                bl(this::memcmp, 42);
                return;
            case 42:
                cmp(r0, 0);
                if (beq(null, 58)) return;
            case 46:
                cmp(r4, r7);
                if (beq(null, 56)) return;
            case 50:
                r3 = ldr(sp + 32);
                r4 = adds(r4, r3);
                b(null, 28);
                return;
            case 56:
                r5 = movs(r5, 0);
            case 58:
                r0 = movs(r0, r5);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280024, size=248, name='str_finder', path='build/py/objstr.o', has_indirect=False)
    protected void str_finder(int offset) throws Exception
    {
        pc = str_finder + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                str(sp + 20, r0);
                r0 = ldr(r1);
                r5 = movs(r5, r1);
                str(sp + 24, r2);
                str(sp + 28, r3);
                lr = str_finder + 18 | 1;
                bl(this::mp_obj_get_type, 18);
                return;
            case 18:
                r4 = movs(r4, r0);
                r0 = ldr(r5 + 4);
                lr = str_finder + 26 | 1;
                bl(this::mp_obj_get_type, 26);
                return;
            case 26:
                r7 = movs(r7, r0);
                cmp(r0, r4);
                if (beq(null, 38)) return;
            case 32:
                r0 = ldr(r5 + 4);
                lr = str_finder + 38 | 1;
                bl(this::unlikely_bad_implicit_conversion, 38);
                return;
            case 38:
                r3 = movs(r3, 3);
                r0 = ldr(r5);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 186)) return;
            case 48:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 32);
                lr = str_finder + 56 | 1;
                bl(this::qstr_data, 56);
                return;
            case 56:
                r4 = movs(r4, r0);
            case 58:
                r3 = movs(r3, 3);
                r0 = ldr(r5 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 194)) return;
            case 68:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 36);
                lr = str_finder + 76 | 1;
                bl(this::qstr_data, 76);
                return;
            case 76:
                str(sp + 16, r0);
            case 78:
                r2 = ldr(sp + 32);
                r6 = movs(r6, r4);
                r3 = adds(r4, r2);
                str(sp + 12, r3);
                r3 = ldr(sp + 20);
                cmp(r3, 2);
                if (bls(null, 144)) return;
            case 92:
                r3 = ldr(r5 + 8);
                r1 = mp_const_none_obj;
                cmp(r3, r1);
                if (beq(null, 114)) return;
            case 100:
                r1 = movs(r1, 1);
                r0 = movs(r0, r7);
                str(sp, r1);
                r1 = movs(r1, r4);
                lr = str_finder + 112 | 1;
                bl(this::str_index_to_ptr, 112);
                return;
            case 112:
                r6 = movs(r6, r0);
            case 114:
                r3 = ldr(sp + 20);
                cmp(r3, 3);
                if (beq(null, 144)) return;
            case 120:
                r3 = ldr(r5 + 12);
                r2 = mp_const_none_obj;
                cmp(r3, r2);
                if (beq(null, 144)) return;
            case 128:
                r2 = movs(r2, 1);
                r1 = movs(r1, r4);
                str(sp, r2);
                r0 = movs(r0, r7);
                r2 = ldr(sp + 32);
                lr = str_finder + 142 | 1;
                bl(this::str_index_to_ptr, 142);
                return;
            case 142:
                str(sp + 12, r0);
            case 144:
                r3 = ldr(sp + 12);
                cmp(r3, r6);
                if (blo(null, 170)) return;
            case 150:
                r1 = subs(r3, r6);
                r3 = ldr(sp + 24);
                r2 = ldr(sp + 16);
                str(sp, r3);
                r0 = movs(r0, r6);
                r3 = ldr(sp + 36);
                lr = str_finder + 166 | 1;
                bl(this::find_subbytes, 166);
                return;
            case 166:
                cmp(r0, 0);
                if (bne(null, 204)) return;
            case 170:
                r0 = movs(r0, 1);
                r3 = ldr(sp + 28);
                r0 = rsbs(r0, 0);
                cmp(r3, 0);
                if (beq(null, 224)) return;
            case 180:
                r0 = str_finder_str1_1;
                lr = str_finder + 186 | 1;
                bl(this::mp_raise_ValueError, 186);
                return;
            case 186:
                r3 = ldr(r0 + 8);
                r4 = ldr(r0 + 12);
                str(sp + 32, r3);
                b(null, 58);
                return;
            case 194:
                r3 = ldr(r0 + 8);
                str(sp + 36, r3);
                r3 = ldr(r0 + 12);
                str(sp + 16, r3);
                b(null, 78);
                return;
            case 204:
                r3 = mp_type_str;
                cmp(r7, r3);
                if (bne(null, 228)) return;
            case 210:
                r1 = movs(r1, r0);
                r0 = movs(r0, r4);
                lr = str_finder + 218 | 1;
                bl(this::utf8_ptr_to_index, 218);
                return;
            case 218:
                r4 = lsls(r0, 1);
            case 220:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r4);
            case 224:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 228:
                r4 = subs(r0, r4);
                r4 = lsls(r4, 1);
                b(null, 220);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280272, size=12, name='str_find', path='build/py/objstr.o', has_indirect=False)
    protected void str_find(int offset) throws Exception
    {
        pc = str_find + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r3 = movs(r3, 0);
                r2 = movs(r2, 1);
                lr = str_find + 10 | 1;
                bl(this::str_finder, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280284, size=14, name='str_rfind', path='build/py/objstr.o', has_indirect=False)
    protected void str_rfind(int offset) throws Exception
    {
        pc = str_rfind + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 1);
                push(true, r4);
                r3 = movs(r3, 0);
                r2 = rsbs(r2, 0);
                lr = str_rfind + 12 | 1;
                bl(this::str_finder, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280298, size=12, name='str_index', path='build/py/objstr.o', has_indirect=False)
    protected void str_index(int offset) throws Exception
    {
        pc = str_index + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 1);
                push(true, r4);
                r2 = movs(r2, r3);
                lr = str_index + 10 | 1;
                bl(this::str_finder, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280310, size=14, name='str_rindex', path='build/py/objstr.o', has_indirect=False)
    protected void str_rindex(int offset) throws Exception
    {
        pc = str_rindex + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 1);
                push(true, r4);
                r3 = movs(r3, r2);
                r2 = rsbs(r2, 0);
                lr = str_rindex + 12 | 1;
                bl(this::str_finder, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280508, size=268, name='str_join', path='build/py/objstr.o', has_indirect=False)
    protected void str_join(int offset) throws Exception
    {
        pc = str_join + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r4 = movs(r4, r0);
                str(sp + 4, r1);
                lr = str_join + 12 | 1;
                bl(this::mp_obj_get_type, 12);
                return;
            case 12:
                r3 = movs(r3, 3);
                r6 = movs(r6, r0);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (bne(null, 118)) return;
            case 22:
                r0 = lsrs(r4, 2);
                r1 = add(sp, 8);
                lr = str_join + 30 | 1;
                bl(this::qstr_data, 30);
                return;
            case 30:
                r7 = movs(r7, r0);
            case 32:
                r3 = ldr(sp + 4);
                r0 = mp_type_list;
                r2 = lsls(r3, 30);
                if (bne(null, 52)) return;
            case 40:
                r3 = ldr(r3);
                cmp(r3, r0);
                if (beq(null, 68)) return;
            case 46:
                r2 = mp_type_tuple;
                cmp(r3, r2);
                if (beq(null, 68)) return;
            case 52:
                r3 = ldr(r0 + 12);
                r2 = movs(r2, 0);
                str(sp, r3);
                r1 = movs(r1, 1);
                r3 = add(sp, 4);
                r4 = ldr(sp);
                blx(r4, 66);
                return;
            case 66:
                str(sp + 4, r0);
            case 68:
                r4 = movs(r4, 0);
                r2 = add(sp, 16);
                r1 = add(sp, 12);
                r0 = ldr(sp + 4);
                lr = str_join + 80 | 1;
                bl(this::mp_obj_get_array, 80);
                return;
            case 80:
                r5 = movs(r5, r4);
            case 82:
                r3 = ldr(sp + 12);
                cmp(r3, r4);
                if (bhi(null, 126)) return;
            case 88:
                r1 = movs(r1, r5);
                r5 = movs(r5, 0);
                r0 = add(sp, 24);
                lr = str_join + 98 | 1;
                bl(this::vstr_init_len, 98);
                return;
            case 98:
                r4 = ldr(sp + 32);
            case 100:
                r3 = ldr(sp + 12);
                cmp(r3, r5);
                if (bhi(null, 188)) return;
            case 106:
                r1 = add(sp, 24);
                r0 = movs(r0, r6);
                lr = str_join + 114 | 1;
                bl(this::mp_obj_new_str_from_vstr, 114);
                return;
            case 114:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 118:
                r3 = ldr(r4 + 8);
                r7 = ldr(r4 + 12);
                str(sp + 8, r3);
                b(null, 32);
                return;
            case 126:
                r3 = lsls(r4, 2);
                str(sp, r3);
                r3 = ldr(sp + 16);
                r2 = lsls(r4, 2);
                r0 = ldr(r3 + r2);
                lr = str_join + 140 | 1;
                bl(this::mp_obj_get_type, 140);
                return;
            case 140:
                cmp(r0, r6);
                if (beq(null, 150)) return;
            case 144:
                r0 = str_join_str1_1;
                lr = str_join + 150 | 1;
                bl(this::mp_raise_TypeError, 150);
                return;
            case 150:
                cmp(r4, 0);
                if (beq(null, 158)) return;
            case 154:
                r3 = ldr(sp + 8);
                r5 = adds(r5, r3);
            case 158:
                r3 = ldr(sp + 16);
                r2 = lsls(r4, 2);
                r0 = ldr(r3 + r2);
                r3 = movs(r3, 3);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 184)) return;
            case 172:
                r0 = lsrs(r0, 2);
                lr = str_join + 178 | 1;
                bl(this::qstr_len, 178);
                return;
            case 178:
                r5 = adds(r5, r0);
                r4 = adds(r4, 1);
                b(null, 82);
                return;
            case 184:
                r0 = ldr(r0 + 8);
                b(null, 178);
                return;
            case 188:
                cmp(r5, 0);
                if (beq(null, 206)) return;
            case 192:
                r0 = movs(r0, r4);
                r2 = ldr(sp + 8);
                r1 = movs(r1, r7);
                lr = str_join + 202 | 1;
                bl(this::memcpy, 202);
                return;
            case 202:
                r3 = ldr(sp + 8);
                r4 = adds(r4, r3);
            case 206:
                r2 = ldr(sp + 16);
                r3 = lsls(r5, 2);
                r0 = ldr(r3 + r2);
                r3 = movs(r3, 3);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 246)) return;
            case 220:
                r1 = add(sp, 20);
                r0 = lsrs(r0, 2);
                lr = str_join + 228 | 1;
                bl(this::qstr_data, 228);
                return;
            case 228:
                r1 = movs(r1, r0);
            case 230:
                r0 = movs(r0, r4);
                r2 = ldr(sp + 20);
                lr = str_join + 238 | 1;
                bl(this::memcpy, 238);
                return;
            case 238:
                r3 = ldr(sp + 20);
                r5 = adds(r5, 1);
                r4 = adds(r4, r3);
                b(null, 100);
                return;
            case 246:
                r3 = ldr(r0 + 8);
                r1 = ldr(r0 + 12);
                str(sp + 20, r3);
                b(null, 230);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280776, size=106, name='str_center', path='build/py/objstr.o', has_indirect=False)
    protected void str_center(int offset) throws Exception
    {
        pc = str_center + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r4, r5, r6);
                r3 = ands(r3, r0);
                sp = sub(sp, 32);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                cmp(r3, 2);
                if (bne(null, 98)) return;
            case 16:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 12);
                lr = str_center + 24 | 1;
                bl(this::qstr_data, 24);
                return;
            case 24:
                r6 = movs(r6, r0);
            case 26:
                r0 = movs(r0, r4);
                lr = str_center + 32 | 1;
                bl(this::mp_obj_get_int, 32);
                return;
            case 32:
                r3 = ldr(sp + 12);
                r4 = movs(r4, r0);
                cmp(r3, r0);
                if (bhs(null, 92)) return;
            case 40:
                r1 = movs(r1, r0);
                r0 = add(sp, 16);
                lr = str_center + 48 | 1;
                bl(this::vstr_init_len, 48);
                return;
            case 48:
                r2 = movs(r2, r4);
                r1 = movs(r1, 32);
                r0 = ldr(sp + 24);
                lr = str_center + 58 | 1;
                bl(this::memset, 58);
                return;
            case 58:
                r3 = ldr(sp + 12);
                r2 = ldr(sp + 12);
                r0 = subs(r4, r3);
                r3 = ldr(sp + 24);
                r0 = lsrs(r0, 1);
                r0 = adds(r3, r0);
                r1 = movs(r1, r6);
                str(sp + 4, r3);
                lr = str_center + 78 | 1;
                bl(this::memcpy, 78);
                return;
            case 78:
                r0 = movs(r0, r5);
                lr = str_center + 84 | 1;
                bl(this::mp_obj_get_type, 84);
                return;
            case 84:
                r1 = add(sp, 16);
                lr = str_center + 90 | 1;
                bl(this::mp_obj_new_str_from_vstr, 90);
                return;
            case 90:
                r5 = movs(r5, r0);
            case 92:
                r0 = movs(r0, r5);
                sp = add(sp, 32);
                pop(true, R4, R5, R6);
                return;
            case 98:
                r3 = ldr(r0 + 8);
                r6 = ldr(r0 + 12);
                str(sp + 12, r3);
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134280882, size=390, name='str_replace', path='build/py/objstr.o', has_indirect=False)
    protected void str_replace(int offset) throws Exception
    {
        pc = str_replace + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                sp = sub(sp, 84);
                cmp(r0, 4);
                if (bne(null, 32)) return;
            case 10:
                r0 = ldr(r1 + 12);
                lr = str_replace + 16 | 1;
                bl(this::mp_obj_get_int, 16);
                return;
            case 16:
                cmp(r0, 0);
                if (bne(null, 26)) return;
            case 20:
                r0 = ldr(r4);
            case 22:
                sp = add(sp, 84);
                pop(true, R4, R5, R6, R7);
                return;
            case 26:
                str(sp + 24, r0);
                cmp(r0, 0);
                if (bge(null, 38)) return;
            case 32:
                r3 = movs(r3, 1);
                r3 = rsbs(r3, 0);
                str(sp + 24, r3);
            case 38:
                r0 = ldr(r4);
                lr = str_replace + 44 | 1;
                bl(this::mp_obj_get_type, 44);
                return;
            case 44:
                r5 = movs(r5, r0);
                r0 = ldr(r4 + 4);
                lr = str_replace + 52 | 1;
                bl(this::mp_obj_get_type, 52);
                return;
            case 52:
                str(sp + 28, r0);
                cmp(r0, r5);
                if (beq(null, 64)) return;
            case 58:
                r0 = ldr(r4 + 4);
            case 60:
                lr = str_replace + 64 | 1;
                bl(this::unlikely_bad_implicit_conversion, 64);
                return;
            case 64:
                r0 = ldr(r4 + 8);
                lr = str_replace + 70 | 1;
                bl(this::mp_obj_get_type, 70);
                return;
            case 70:
                r3 = ldr(sp + 28);
                cmp(r3, r0);
                if (beq(null, 80)) return;
            case 76:
                r0 = ldr(r4 + 8);
                b(null, 60);
                return;
            case 80:
                r3 = movs(r3, 3);
                r0 = ldr(r4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 184)) return;
            case 90:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 52);
                lr = str_replace + 98 | 1;
                bl(this::qstr_data, 98);
                return;
            case 98:
                str(sp + 32, r0);
            case 100:
                r3 = movs(r3, 3);
                r0 = ldr(r4 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 194)) return;
            case 110:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 56);
                lr = str_replace + 118 | 1;
                bl(this::qstr_data, 118);
                return;
            case 118:
                str(sp + 44, r0);
            case 120:
                r3 = movs(r3, 3);
                r0 = ldr(r4 + 8);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 204)) return;
            case 130:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 60);
                lr = str_replace + 138 | 1;
                bl(this::qstr_data, 138);
                return;
            case 138:
                str(sp + 36, r0);
            case 140:
                r3 = ldr(sp + 56);
                r2 = ldr(sp + 52);
                r6 = movs(r6, 0);
                cmp(r3, r2);
                if (bhi(null, 20)) return;
            case 150:
                r3 = ldr(sp + 56);
                r7 = ldr(sp + 52);
                cmp(r3, 0);
                if (bne(null, 372)) return;
            case 158:
                cmp(r6, 0);
                if (beq(null, 172)) return;
            case 162:
                r2 = ldr(sp + 60);
                r1 = ldr(sp + 36);
                r0 = movs(r0, r6);
                lr = str_replace + 172 | 1;
                bl(this::memcpy, 172);
                return;
            case 172:
                r3 = ldr(sp + 60);
                str(sp + 12, r3);
                r3 = movs(r3, 1);
                str(sp + 16, r3);
            case 180:
                r5 = ldr(sp + 32);
                b(null, 292);
                return;
            case 184:
                r3 = ldr(r0 + 8);
                str(sp + 52, r3);
                r3 = ldr(r0 + 12);
                str(sp + 32, r3);
                b(null, 100);
                return;
            case 194:
                r3 = ldr(r0 + 8);
                str(sp + 56, r3);
                r3 = ldr(r0 + 12);
                str(sp + 44, r3);
                b(null, 120);
                return;
            case 204:
                r3 = ldr(r0 + 8);
                str(sp + 60, r3);
                r3 = ldr(r0 + 12);
                str(sp + 36, r3);
                b(null, 140);
                return;
            case 214:
                r7 = ldr(sp + 40);
                r3 = rsbs(r7, 0);
                r7 = adcs(r7, r3);
                r3 = ldr(sp + 20);
                r3 = adds(r3, r7);
                str(sp + 20, r3);
                r7 = subs(r3, r5);
                cmp(r6, 0);
                if (beq(null, 244)) return;
            case 232:
                r3 = ldr(sp + 12);
                r2 = movs(r2, r7);
                r0 = adds(r6, r3);
                r1 = movs(r1, r5);
                lr = str_replace + 244 | 1;
                bl(this::memcpy, 244);
                return;
            case 244:
                r3 = ldr(sp + 12);
                r7 = adds(r3, r7);
                cmp(r6, 0);
                if (beq(null, 262)) return;
            case 252:
                r0 = adds(r6, r7);
                r2 = ldr(sp + 60);
                r1 = ldr(sp + 36);
                lr = str_replace + 262 | 1;
                bl(this::memcpy, 262);
                return;
            case 262:
                r2 = ldr(sp + 56);
                r3 = ldr(sp + 60);
                r12 = mov(r2);
                r3 = adds(r7, r3);
                str(sp + 12, r3);
                r3 = ldr(sp + 20);
                r2 = ldr(sp + 52);
                r3 = add(r3, r12);
                r5 = movs(r5, r3);
                r3 = ldr(sp + 32);
                r7 = adds(r3, r2);
                r3 = ldr(sp + 16);
                r7 = subs(r7, r5);
                r3 = adds(r3, 1);
                str(sp + 16, r3);
            case 292:
                r3 = ldr(sp + 16);
                r2 = ldr(sp + 24);
                cmp(r3, r2);
                if (beq(null, 330)) return;
            case 300:
                cmp(r7, 0);
                if (beq(null, 330)) return;
            case 304:
                r3 = ldr(sp + 56);
                r2 = ldr(sp + 44);
                str(sp + 40, r3);
                r3 = movs(r3, 1);
                r1 = movs(r1, r7);
                str(sp, r3);
                r0 = movs(r0, r5);
                r3 = ldr(sp + 40);
                lr = str_replace + 324 | 1;
                bl(this::find_subbytes, 324);
                return;
            case 324:
                str(sp + 20, r0);
                cmp(r0, 0);
                if (bne(null, 214)) return;
            case 330:
                cmp(r6, 0);
                if (beq(null, 346)) return;
            case 334:
                r3 = ldr(sp + 12);
                r2 = movs(r2, r7);
                r0 = adds(r6, r3);
                r1 = movs(r1, r5);
                lr = str_replace + 346 | 1;
                bl(this::memcpy, 346);
                return;
            case 346:
                r3 = ldr(sp + 12);
                r1 = adds(r7, r3);
                cmp(r6, 0);
                if (bne(null, 380)) return;
            case 354:
                r3 = ldr(sp + 16);
                cmp(r3, 0);
                if (bne(null, 362)) return;
            case 360:
                b(null, 20);
                return;
            case 362:
                r0 = add(sp, 64);
                lr = str_replace + 368 | 1;
                bl(this::vstr_init_len, 368);
                return;
            case 368:
                r6 = ldr(sp + 72);
                b(null, 150);
                return;
            case 372:
                r3 = movs(r3, 0);
                str(sp + 16, r3);
                str(sp + 12, r3);
                b(null, 180);
                return;
            case 380:
                r1 = add(sp, 64);
                r0 = ldr(sp + 28);
                lr = str_replace + 388 | 1;
                bl(this::mp_obj_new_str_from_vstr, 388);
                return;
            case 388:
                b(null, 22);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281272, size=82, name='str_caseconv', path='build/py/objstr.o', has_indirect=False)
    protected void str_caseconv(int offset) throws Exception
    {
        pc = str_caseconv + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r4, r5, r6, r7);
                r3 = ands(r3, r1);
                sp = sub(sp, 36);
                r7 = movs(r7, r0);
                r4 = movs(r4, r1);
                cmp(r3, 2);
                if (bne(null, 62)) return;
            case 16:
                r0 = lsrs(r1, 2);
                r1 = add(sp, 12);
                lr = str_caseconv + 24 | 1;
                bl(this::qstr_data, 24);
                return;
            case 24:
                r6 = movs(r6, r0);
            case 26:
                r5 = movs(r5, 0);
                r1 = ldr(sp + 12);
                r0 = add(sp, 16);
                lr = str_caseconv + 36 | 1;
                bl(this::vstr_init_len, 36);
                return;
            case 36:
                r3 = ldr(sp + 24);
                str(sp + 4, r3);
            case 40:
                r3 = ldr(sp + 12);
                cmp(r3, r5);
                if (bhi(null, 70)) return;
            case 46:
                r0 = movs(r0, r4);
                lr = str_caseconv + 52 | 1;
                bl(this::mp_obj_get_type, 52);
                return;
            case 52:
                r1 = add(sp, 16);
                lr = str_caseconv + 58 | 1;
                bl(this::mp_obj_new_str_from_vstr, 58);
                return;
            case 58:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 62:
                r3 = ldr(r1 + 8);
                r6 = ldr(r1 + 12);
                str(sp + 12, r3);
                b(null, 26);
                return;
            case 70:
                r0 = ldrb(r6 + r5);
                blx(r7, 74);
                return;
            case 74:
                r3 = ldr(sp + 4);
                strb(r3 + r5, r0);
                r5 = adds(r5, 1);
                b(null, 40);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281356, size=16, name='str_lower', path='build/py/objstr.o', has_indirect=False)
    protected void str_lower(int offset) throws Exception
    {
        pc = str_lower + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_tolower | 1;
                hint(unichar_tolower | 1, this::unichar_tolower);
                lr = str_lower + 10 | 1;
                bl(this::str_caseconv, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281372, size=16, name='str_upper', path='build/py/objstr.o', has_indirect=False)
    protected void str_upper(int offset) throws Exception
    {
        pc = str_upper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r1 = movs(r1, r0);
                r0 = unichar_toupper | 1;
                hint(unichar_toupper | 1, this::unichar_toupper);
                lr = str_upper + 10 | 1;
                bl(this::str_caseconv, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281632, size=40, name='bytes_decode', path='build/py/objstr.o', has_indirect=False)
    protected void bytes_decode(int offset) throws Exception
    {
        pc = bytes_decode + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2);
                r3 = movs(r3, r1);
                cmp(r0, 1);
                if (bne(null, 22)) return;
            case 8:
                r3 = ldr(r1);
                r0 = adds(r0, 1);
                str(sp, r3);
                r3 = movs(r3, 217);
                r3 = lsls(r3, 1);
                str(sp + 4, r3);
                r3 = mov(sp);
            case 22:
                r1 = movs(r1, r0);
                r2 = movs(r2, 0);
                r0 = mp_type_str;
                lr = bytes_decode + 32 | 1;
                bl(this::mp_obj_str_make_new, 32);
                return;
            case 32:
                pop(true, R1, R2, R3);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281692, size=280, name='bytes_make_new_part_4', path='build/py/objstr.o', has_indirect=False)
    protected void bytes_make_new_part_4(int offset) throws Exception
    {
        pc = bytes_make_new_part_4 + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r4, r5, r6);
                r2 = movs(r2, r0);
                r0 = ldr(r1);
                sp = sub(sp, 56);
                r5 = movs(r5, r1);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (beq(null, 30)) return;
            case 18:
                cmp(r3, 0);
                if (bne(null, 118)) return;
            case 22:
                r1 = mp_type_str;
                r4 = ldr(r0);
                cmp(r4, r1);
                if (bne(null, 118)) return;
            case 30:
                r2 = subs(r2, 2);
                cmp(r2, 1);
                if (bls(null, 38)) return;
            case 36:
                b(null, 256);
                return;
            case 38:
                cmp(r3, 2);
                if (bne(null, 106)) return;
            case 42:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 40);
                lr = bytes_make_new_part_4 + 50 | 1;
                bl(this::qstr_data, 50);
                return;
            case 50:
                r4 = movs(r4, r0);
            case 52:
                r3 = movs(r3, 3);
                r0 = ldr(r5);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 114)) return;
            case 62:
                r0 = lsrs(r0, 2);
                lr = bytes_make_new_part_4 + 68 | 1;
                bl(this::qstr_hash, 68);
                return;
            case 68:
                r5 = movs(r5, r0);
            case 70:
                cmp(r5, 0);
                if (bne(null, 84)) return;
            case 74:
                r1 = ldr(sp + 40);
                r0 = movs(r0, r4);
                lr = bytes_make_new_part_4 + 82 | 1;
                bl(this::qstr_compute_hash, 82);
                return;
            case 82:
                r5 = movs(r5, r0);
            case 84:
                r0 = movs(r0, 16);
                r6 = ldr(sp + 40);
                lr = bytes_make_new_part_4 + 92 | 1;
                bl(this::m_malloc, 92);
                return;
            case 92:
                r3 = mp_type_bytes;
                str(r0 + 8, r6);
                str(r0, r3);
                str(r0 + 12, r4);
                str(r0 + 4, r5);
            case 102:
                sp = add(sp, 56);
                pop(true, R4, R5, R6);
                return;
            case 106:
                r3 = ldr(r0 + 8);
                r4 = ldr(r0 + 12);
                str(sp + 40, r3);
                b(null, 52);
                return;
            case 114:
                r5 = ldr(r0 + 4);
                b(null, 70);
                return;
            case 118:
                cmp(r2, 1);
                if (bhi(null, 256)) return;
            case 122:
                r2 = movs(r2, 1);
                tst(r0, r2);
                if (beq(null, 168)) return;
            case 128:
                r4 = asrs(r0, 1);
                r0 = movs(r0, 0);
                cmp(r4, 0);
                if (blt(null, 242)) return;
            case 136:
                r1 = movs(r1, r4);
                r0 = add(sp, 40);
                lr = bytes_make_new_part_4 + 144 | 1;
                bl(this::vstr_init_len, 144);
                return;
            case 144:
                r3 = ldr(sp + 48);
                r1 = movs(r1, 0);
                r2 = movs(r2, r4);
                r0 = movs(r0, r3);
                str(sp + 4, r3);
                lr = bytes_make_new_part_4 + 158 | 1;
                bl(this::memset, 158);
                return;
            case 158:
                r1 = add(sp, 40);
            case 160:
                r0 = mp_type_bytes;
                lr = bytes_make_new_part_4 + 166 | 1;
                bl(this::mp_obj_new_str_from_vstr, 166);
                return;
            case 166:
                b(null, 102);
                return;
            case 168:
                r1 = add(sp, 12);
                lr = bytes_make_new_part_4 + 174 | 1;
                bl(this::mp_get_buffer, 174);
                return;
            case 174:
                cmp(r0, 0);
                if (beq(null, 188)) return;
            case 178:
                r1 = ldr(sp + 16);
                r0 = ldr(sp + 12);
                lr = bytes_make_new_part_4 + 186 | 1;
                bl(this::mp_obj_new_bytes, 186);
                return;
            case 186:
                b(null, 102);
                return;
            case 188:
                r0 = ldr(r5);
                lr = bytes_make_new_part_4 + 194 | 1;
                bl(this::mp_obj_len_maybe, 194);
                return;
            case 194:
                r1 = movs(r1, 16);
                cmp(r0, 0);
                if (beq(null, 202)) return;
            case 200:
                r1 = asrs(r0, 1);
            case 202:
                r0 = add(sp, 24);
                lr = bytes_make_new_part_4 + 208 | 1;
                bl(this::vstr_init, 208);
                return;
            case 208:
                r1 = add(sp, 40);
                r0 = ldr(r5);
                lr = bytes_make_new_part_4 + 216 | 1;
                bl(this::mp_getiter, 216);
                return;
            case 216:
                r4 = movs(r4, r0);
            case 218:
                r0 = movs(r0, r4);
                lr = bytes_make_new_part_4 + 224 | 1;
                bl(this::mp_iternext, 224);
                return;
            case 224:
                cmp(r0, 0);
                if (bne(null, 232)) return;
            case 228:
                r1 = add(sp, 24);
                b(null, 160);
                return;
            case 232:
                lr = bytes_make_new_part_4 + 236 | 1;
                bl(this::mp_obj_get_int, 236);
                return;
            case 236:
                cmp(r0, 255);
                if (bls(null, 246)) return;
            case 240:
                r0 = bytes_make_new_part_4_str1_1;
            case 242:
                lr = bytes_make_new_part_4 + 246 | 1;
                bl(this::mp_raise_ValueError, 246);
                return;
            case 246:
                r1 = uxtb(r0);
                r0 = add(sp, 24);
                lr = bytes_make_new_part_4 + 254 | 1;
                bl(this::vstr_add_byte, 254);
                return;
            case 254:
                b(null, 218);
                return;
            case 256:
                r0 = 0x080248d9;
                lr = bytes_make_new_part_4 + 262 | 1;
                bl(this::mp_raise_TypeError, 262);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134281972, size=32, name='bytes_make_new', path='build/py/objstr.o', has_indirect=False)
    protected void bytes_make_new(int offset) throws Exception
    {
        pc = bytes_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r1);
                cmp(r2, 0);
                if (beq(null, 12)) return;
            case 8:
                lr = bytes_make_new + 12 | 1;
                bl(this::mp_arg_error_unimpl_kw, 12);
                return;
            case 12:
                r0 = mp_const_empty_bytes_obj;
                cmp(r1, 0);
                if (beq(null, 26)) return;
            case 18:
                r1 = movs(r1, r3);
                r0 = movs(r0, r4);
                lr = bytes_make_new + 26 | 1;
                bl(this::bytes_make_new_part_4, 26);
                return;
            case 26:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282004, size=44, name='str_encode', path='build/py/objstr.o', has_indirect=False)
    protected void str_encode(int offset) throws Exception
    {
        pc = str_encode + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2);
                r3 = movs(r3, r0);
                cmp(r0, 1);
                if (bne(null, 32)) return;
            case 8:
                r3 = ldr(r1);
                r1 = mov(sp);
                str(sp, r3);
                r3 = movs(r3, 217);
                r3 = lsls(r3, 1);
                str(sp + 4, r3);
                r3 = subs(r3, 177);
                r3 = subs(r3, 255);
            case 24:
                r0 = movs(r0, r3);
                lr = str_encode + 30 | 1;
                bl(this::bytes_make_new_part_4, 30);
                return;
            case 30:
                b(null, 38);
                return;
            case 32:
                r0 = mp_const_empty_bytes_obj;
                cmp(r3, 0);
                if (bne(null, 24)) return;
            case 38:
                pop(true, R1, R2, R3);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282080, size=160, name='str_splitlines', path='build/py/objstr.o', has_indirect=False)
    protected void str_splitlines(int offset) throws Exception
    {
        pc = str_splitlines + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                sp = sub(sp, 28);
                r3 = allowed_args_6617;
                r7 = add(sp, 16);
                r1 = adds(r1, 4);
                r0 = subs(r0, 1);
                str(sp, r3);
                str(sp + 4, r7);
                r3 = movs(r3, 1);
                lr = str_splitlines + 24 | 1;
                bl(this::mp_arg_parse_all, 24);
                return;
            case 24:
                r0 = ldr(r4);
                lr = str_splitlines + 30 | 1;
                bl(this::mp_obj_get_type, 30);
                return;
            case 30:
                r1 = movs(r1, 0);
                str(sp + 12, r0);
                r0 = movs(r0, r1);
                lr = str_splitlines + 40 | 1;
                bl(this::mp_obj_new_list, 40);
                return;
            case 40:
                r3 = movs(r3, 3);
                r6 = movs(r6, r0);
                r0 = ldr(r4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 80)) return;
            case 52:
                r1 = add(sp, 20);
                r0 = lsrs(r0, 2);
                lr = str_splitlines + 60 | 1;
                bl(this::qstr_data, 60);
                return;
            case 60:
                r1 = movs(r1, r0);
            case 62:
                r3 = ldr(sp + 20);
                r3 = adds(r1, r3);
                str(sp + 8, r3);
            case 68:
                r3 = ldr(sp + 8);
                cmp(r1, r3);
                if (blo(null, 88)) return;
            case 74:
                r0 = movs(r0, r6);
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 80:
                r3 = ldr(r0 + 8);
                r1 = ldr(r0 + 12);
                str(sp + 20, r3);
                b(null, 62);
                return;
            case 88:
                r5 = movs(r5, r1);
            case 90:
                r3 = ldrb(r5);
                cmp(r3, 10);
                if (beq(null, 150)) return;
            case 96:
                cmp(r3, 13);
                if (bne(null, 138)) return;
            case 100:
                r4 = ldrb(r5 + 1);
                r4 = subs(r4, 10);
                r3 = rsbs(r4, 0);
                r4 = adcs(r4, r3);
                r4 = adds(r4, 1);
            case 110:
                r3 = ldrb(r7);
                r2 = subs(r5, r1);
                cmp(r3, 0);
                if (beq(null, 120)) return;
            case 118:
                r2 = adds(r2, r4);
            case 120:
                r0 = ldr(sp + 12);
                lr = str_splitlines + 126 | 1;
                bl(this::mp_obj_new_str_of_type, 126);
                return;
            case 126:
                r1 = movs(r1, r0);
                r0 = movs(r0, r6);
                lr = str_splitlines + 134 | 1;
                bl(this::mp_obj_list_append, 134);
                return;
            case 134:
                r1 = adds(r5, r4);
                b(null, 68);
                return;
            case 138:
                r3 = ldr(sp + 8);
                r5 = adds(r5, 1);
                cmp(r3, r5);
                if (bne(null, 90)) return;
            case 146:
                r4 = movs(r4, 0);
                b(null, 110);
                return;
            case 150:
                r4 = movs(r4, 1);
                b(null, 110);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282240, size=292, name='str_uni_strip', path='build/py/objstr.o', has_indirect=False)
    protected void str_uni_strip(int offset) throws Exception
    {
        pc = str_uni_strip + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 60);
                str(sp + 36, r0);
                r0 = ldr(r2);
                r4 = movs(r4, r1);
                r6 = movs(r6, r2);
                lr = str_uni_strip + 16 | 1;
                bl(this::mp_obj_get_type, 16);
                return;
            case 16:
                str(sp + 32, r0);
                cmp(r4, 1);
                if (beq(null, 152)) return;
            case 22:
                r0 = ldr(r6 + 4);
                lr = str_uni_strip + 28 | 1;
                bl(this::mp_obj_get_type, 28);
                return;
            case 28:
                r3 = ldr(sp + 32);
                cmp(r0, r3);
                if (beq(null, 40)) return;
            case 34:
                r0 = ldr(r6 + 4);
                lr = str_uni_strip + 40 | 1;
                bl(this::unlikely_bad_implicit_conversion, 40);
                return;
            case 40:
                r3 = movs(r3, 3);
                r0 = ldr(r6 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 142)) return;
            case 50:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 52);
                lr = str_uni_strip + 58 | 1;
                bl(this::qstr_data, 58);
                return;
            case 58:
                str(sp + 20, r0);
            case 60:
                r3 = ldr(sp + 52);
                str(sp + 40, r3);
            case 64:
                r3 = movs(r3, 3);
                r0 = ldr(r6);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 162)) return;
            case 74:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 52);
                lr = str_uni_strip + 82 | 1;
                bl(this::qstr_data, 82);
                return;
            case 82:
                str(sp + 24, r0);
            case 84:
                r3 = ldr(sp + 52);
                str(sp + 16, r3);
                r3 = ldr(sp + 36);
                cmp(r3, 1);
                if (bne(null, 172)) return;
            case 94:
                r3 = ldr(sp + 16);
                r5 = subs(r3, 1);
                r3 = movs(r3, 1);
                r3 = rsbs(r3, 0);
                str(sp + 44, r3);
            case 104:
                r4 = movs(r4, 0);
                r7 = movs(r7, r4);
                r3 = ldr(sp + 16);
                str(sp + 12, r4);
                str(sp + 28, r3);
            case 114:
                r3 = ldr(sp + 28);
                cmp(r3, 0);
                if (bne(null, 180)) return;
            case 120:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (bne(null, 218)) return;
            case 126:
                r3 = mp_type_str;
                r2 = ldr(sp + 32);
                r0 = mp_const_empty_bytes_obj;
                cmp(r2, r3);
                if (bne(null, 138)) return;
            case 136:
                r0 = movs(r0, 6);
            case 138:
                sp = add(sp, 60);
                pop(true, R4, R5, R6, R7);
                return;
            case 142:
                r3 = ldr(r0 + 8);
                str(sp + 52, r3);
                r3 = ldr(r0 + 12);
                str(sp + 20, r3);
                b(null, 60);
                return;
            case 152:
                r3 = movs(r3, 6);
                str(sp + 40, r3);
                r3 = whitespace_6723;
                str(sp + 20, r3);
                b(null, 64);
                return;
            case 162:
                r3 = ldr(r0 + 8);
                str(sp + 52, r3);
                r3 = ldr(r0 + 12);
                str(sp + 24, r3);
                b(null, 84);
                return;
            case 172:
                r3 = movs(r3, 1);
                r5 = movs(r5, 0);
                str(sp + 44, r3);
                b(null, 104);
                return;
            case 180:
                r3 = ldr(sp + 24);
                r1 = ldr(sp + 40);
                r2 = adds(r3, r5);
                r3 = movs(r3, 1);
                r0 = ldr(sp + 20);
                str(sp, r3);
                lr = str_uni_strip + 196 | 1;
                bl(this::find_subbytes, 196);
                return;
            case 196:
                cmp(r0, 0);
                if (bne(null, 246)) return;
            case 200:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (bne(null, 258)) return;
            case 206:
                r3 = ldr(sp + 36);
                cmp(r3, 0);
                if (bne(null, 232)) return;
            case 212:
                r7 = movs(r7, r5);
                r3 = ldr(sp + 16);
                r4 = subs(r3, 1);
            case 218:
                r3 = ldr(sp + 16);
                r4 = adds(r4, 1);
                r2 = subs(r4, r7);
                cmp(r2, r3);
                if (bne(null, 266)) return;
            case 228:
                r0 = ldr(r6);
                b(null, 138);
                return;
            case 232:
                r3 = ldr(sp + 36);
                r4 = movs(r4, r5);
                cmp(r3, 1);
                if (beq(null, 262)) return;
            case 240:
                r3 = movs(r3, 1);
                r7 = movs(r7, r5);
                str(sp + 12, r3);
            case 246:
                r3 = ldr(sp + 44);
                r5 = adds(r5, r3);
                r3 = ldr(sp + 28);
                r3 = subs(r3, 1);
                str(sp + 28, r3);
                b(null, 114);
                return;
            case 258:
                r4 = movs(r4, r5);
                b(null, 246);
                return;
            case 262:
                r7 = ldr(sp + 12);
                b(null, 218);
                return;
            case 266:
                r3 = ldr(sp + 24);
                r0 = ldr(sp + 32);
                r1 = adds(r3, r7);
                lr = str_uni_strip + 276 | 1;
                bl(this::mp_obj_new_str_of_type, 276);
                return;
            case 276:
                b(null, 138);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282532, size=14, name='str_strip', path='build/py/objstr.o', has_indirect=False)
    protected void str_strip(int offset) throws Exception
    {
        pc = str_strip + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, r1);
                r1 = movs(r1, r0);
                r0 = movs(r0, 2);
                lr = str_strip + 12 | 1;
                bl(this::str_uni_strip, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282546, size=14, name='str_lstrip', path='build/py/objstr.o', has_indirect=False)
    protected void str_lstrip(int offset) throws Exception
    {
        pc = str_lstrip + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, r1);
                r1 = movs(r1, r0);
                r0 = movs(r0, 0);
                lr = str_lstrip + 12 | 1;
                bl(this::str_uni_strip, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282560, size=14, name='str_rstrip', path='build/py/objstr.o', has_indirect=False)
    protected void str_rstrip(int offset) throws Exception
    {
        pc = str_rstrip + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, r1);
                r1 = movs(r1, r0);
                r0 = movs(r0, 1);
                lr = str_rstrip + 12 | 1;
                bl(this::str_uni_strip, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282576, size=204, name='str_partitioner', path='build/py/objstr.o', has_indirect=False)
    protected void str_partitioner(int offset) throws Exception
    {
        pc = str_partitioner + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r5 = movs(r5, r1);
                str(sp + 12, r2);
                r6 = movs(r6, r0);
                lr = str_partitioner + 14 | 1;
                bl(this::mp_obj_get_type, 14);
                return;
            case 14:
                r4 = movs(r4, r0);
                r0 = movs(r0, r5);
                lr = str_partitioner + 22 | 1;
                bl(this::mp_obj_get_type, 22);
                return;
            case 22:
                r7 = movs(r7, r0);
                cmp(r0, r4);
                if (beq(null, 34)) return;
            case 28:
                r0 = movs(r0, r5);
                lr = str_partitioner + 34 | 1;
                bl(this::unlikely_bad_implicit_conversion, 34);
                return;
            case 34:
                r3 = movs(r3, 3);
                r3 = ands(r3, r6);
                cmp(r3, 2);
                if (bne(null, 82)) return;
            case 42:
                r0 = lsrs(r6, 2);
                r1 = add(sp, 20);
                lr = str_partitioner + 50 | 1;
                bl(this::qstr_data, 50);
                return;
            case 50:
                r4 = movs(r4, r0);
            case 52:
                r3 = movs(r3, 3);
                r3 = ands(r3, r5);
                cmp(r3, 2);
                if (bne(null, 90)) return;
            case 60:
                r0 = lsrs(r5, 2);
                r1 = add(sp, 24);
                lr = str_partitioner + 68 | 1;
                bl(this::qstr_data, 68);
                return;
            case 68:
                r2 = movs(r2, r0);
            case 70:
                r3 = ldr(sp + 24);
                cmp(r3, 0);
                if (bne(null, 98)) return;
            case 76:
                r0 = str_partitioner_str1_1;
                lr = str_partitioner + 82 | 1;
                bl(this::mp_raise_ValueError, 82);
                return;
            case 82:
                r3 = ldr(r6 + 8);
                r4 = ldr(r6 + 12);
                str(sp + 20, r3);
                b(null, 52);
                return;
            case 90:
                r3 = ldr(r5 + 8);
                r2 = ldr(r5 + 12);
                str(sp + 24, r3);
                b(null, 70);
                return;
            case 98:
                r1 = mp_type_str;
                cmp(r7, r1);
                if (bne(null, 184)) return;
            case 104:
                r1 = movs(r1, 6);
            case 106:
                str(sp + 28, r1);
                str(sp + 32, r1);
                str(sp + 36, r1);
                r1 = ldr(sp + 12);
                cmp(r1, 1);
                if (bne(null, 188)) return;
            case 118:
                str(sp + 28, r6);
            case 120:
                r1 = ldr(sp + 12);
                r0 = movs(r0, r4);
                str(sp, r1);
                r1 = ldr(sp + 20);
                lr = str_partitioner + 132 | 1;
                bl(this::find_subbytes, 132);
                return;
            case 132:
                cmp(r0, 0);
                if (beq(null, 172)) return;
            case 136:
                r6 = subs(r0, r4);
                r2 = movs(r2, r6);
                r1 = movs(r1, r4);
                r0 = movs(r0, r7);
                lr = str_partitioner + 148 | 1;
                bl(this::mp_obj_new_str_of_type, 148);
                return;
            case 148:
                r3 = ldr(sp + 20);
                r1 = ldr(sp + 24);
                r2 = subs(r3, r6);
                r2 = subs(r2, r1);
                r1 = adds(r1, r6);
                str(sp + 28, r0);
                r1 = adds(r4, r1);
                r0 = movs(r0, r7);
                str(sp + 32, r5);
                lr = str_partitioner + 170 | 1;
                bl(this::mp_obj_new_str_of_type, 170);
                return;
            case 170:
                str(sp + 36, r0);
            case 172:
                r1 = add(sp, 28);
                r0 = movs(r0, 3);
                lr = str_partitioner + 180 | 1;
                bl(this::mp_obj_new_tuple, 180);
                return;
            case 180:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 184:
                r1 = mp_const_empty_bytes_obj;
                b(null, 106);
                return;
            case 188:
                str(sp + 36, r6);
                b(null, 120);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282780, size=10, name='str_partition', path='build/py/objstr.o', has_indirect=False)
    protected void str_partition(int offset) throws Exception
    {
        pc = str_partition + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 1);
                lr = str_partition + 8 | 1;
                bl(this::str_partitioner, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282790, size=12, name='str_rpartition', path='build/py/objstr.o', has_indirect=False)
    protected void str_rpartition(int offset) throws Exception
    {
        pc = str_rpartition + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 1);
                push(true, r4);
                r2 = rsbs(r2, 0);
                lr = str_rpartition + 10 | 1;
                bl(this::str_partitioner, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134282804, size=132, name='bytes_subscr', path='build/py/objstr.o', has_indirect=False)
    protected void bytes_subscr(int offset) throws Exception
    {
        pc = bytes_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 20);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r7 = movs(r7, r2);
                lr = bytes_subscr + 14 | 1;
                bl(this::mp_obj_get_type, 14);
                return;
            case 14:
                r3 = movs(r3, 3);
                r6 = movs(r6, r0);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (bne(null, 70)) return;
            case 24:
                r0 = lsrs(r4, 2);
                r1 = mov(sp);
                lr = bytes_subscr + 32 | 1;
                bl(this::qstr_data, 32);
                return;
            case 32:
                r4 = movs(r4, r0);
            case 34:
                cmp(r7, 4);
                if (bne(null, 118)) return;
            case 38:
                r0 = ldr(sp);
                r3 = lsls(r5, 30);
                if (bne(null, 96)) return;
            case 44:
                r3 = mp_type_slice;
                r2 = ldr(r5);
                cmp(r2, r3);
                if (bne(null, 96)) return;
            case 52:
                r2 = add(sp, 4);
                r1 = movs(r1, r5);
                lr = bytes_subscr + 60 | 1;
                bl(this::mp_seq_get_fast_slice_indexes, 60);
                return;
            case 60:
                cmp(r0, 0);
                if (bne(null, 78)) return;
            case 64:
                r0 = array_subscr_str1_1;
                lr = bytes_subscr + 70 | 1;
                bl(this::mp_raise_NotImplementedError, 70);
                return;
            case 70:
                r3 = ldr(r4 + 8);
                r4 = ldr(r4 + 12);
                str(sp, r3);
                b(null, 34);
                return;
            case 78:
                r1 = ldr(sp + 4);
                r2 = ldr(sp + 8);
                r0 = movs(r0, r6);
                r2 = subs(r2, r1);
                r1 = adds(r4, r1);
                lr = bytes_subscr + 92 | 1;
                bl(this::mp_obj_new_str_of_type, 92);
                return;
            case 92:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 96:
                r3 = movs(r3, 0);
                r1 = movs(r1, r0);
                r2 = movs(r2, r5);
                r0 = movs(r0, r6);
                lr = bytes_subscr + 108 | 1;
                bl(this::mp_get_index, 108);
                return;
            case 108:
                r3 = ldrb(r4 + r0);
                r0 = movs(r0, 1);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                b(null, 92);
                return;
            case 118:
                r0 = movs(r0, 0);
                b(null, 92);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134284908, size=292, name='str_rsplit', path='build/py/objstr.o', has_indirect=False)
    protected void str_rsplit(int offset) throws Exception
    {
        pc = str_rsplit + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 44);
                r5 = movs(r5, r1);
                cmp(r0, 2);
                if (bhi(null, 28)) return;
            case 12:
                r1 = movs(r1, r5);
                r0 = movs(r0, r7);
                lr = str_rsplit + 20 | 1;
                bl(this::mp_obj_str_split, 20);
                return;
            case 20:
                r5 = movs(r5, r0);
            case 22:
                r0 = movs(r0, r5);
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 28:
                r0 = ldr(r1);
                lr = str_rsplit + 34 | 1;
                bl(this::mp_obj_get_type, 34);
                return;
            case 34:
                r3 = movs(r3, 3);
                str(sp + 16, r0);
                r0 = ldr(r5);
                r6 = ldr(r5 + 4);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 94)) return;
            case 48:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 32);
                lr = str_rsplit + 56 | 1;
                bl(this::qstr_data, 56);
                return;
            case 56:
                str(sp + 4, r0);
            case 58:
                r0 = ldr(r5 + 8);
                lr = str_rsplit + 64 | 1;
                bl(this::mp_obj_get_int, 64);
                return;
            case 64:
                r4 = subs(r0, 0);
                if (blt(null, 12)) return;
            case 68:
                r3 = adds(r0, 1);
                r0 = movs(r0, r3);
                r1 = movs(r1, 0);
                str(sp + 20, r3);
                lr = str_rsplit + 80 | 1;
                bl(this::mp_obj_new_list, 80);
                return;
            case 80:
                r3 = mp_const_none_obj;
                r5 = movs(r5, r0);
                cmp(r6, r3);
                if (bne(null, 104)) return;
            case 88:
                r0 = str_rsplit_str1_1;
                lr = str_rsplit + 94 | 1;
                bl(this::mp_raise_NotImplementedError, 94);
                return;
            case 94:
                r3 = ldr(r0 + 8);
                str(sp + 32, r3);
                r3 = ldr(r0 + 12);
                str(sp + 4, r3);
                b(null, 58);
                return;
            case 104:
                r1 = add(sp, 36);
                r0 = movs(r0, r6);
                lr = str_rsplit + 112 | 1;
                bl(this::mp_obj_str_get_data, 112);
                return;
            case 112:
                r3 = ldr(sp + 36);
                str(sp + 24, r0);
                cmp(r3, 0);
                if (bne(null, 126)) return;
            case 120:
                r0 = str_partitioner_str1_1;
                lr = str_rsplit + 126 | 1;
                bl(this::mp_raise_ValueError, 126);
                return;
            case 126:
                r2 = ldr(sp + 32);
                r3 = ldr(sp + 4);
                r12 = mov(r2);
                r3 = add(r3, r12);
                str(sp + 8, r3);
                r3 = lsls(r4, 2);
                str(sp + 12, r3);
            case 140:
                r7 = ldr(sp + 36);
                r3 = ldr(sp + 8);
                r6 = subs(r3, r7);
            case 146:
                cmp(r4, 0);
                if (beq(null, 174)) return;
            case 150:
                r3 = ldr(sp + 4);
                cmp(r3, r6);
                if (bhi(null, 174)) return;
            case 156:
                r2 = movs(r2, r7);
                r1 = ldr(sp + 24);
                r0 = movs(r0, r6);
                lr = str_rsplit + 166 | 1;
                bl(this::memcmp, 166);
                return;
            case 166:
                cmp(r0, 0);
                if (beq(null, 238)) return;
            case 170:
                r6 = subs(r6, 1);
                b(null, 146);
                return;
            case 174:
                r3 = ldr(r5 + 12);
                r6 = lsls(r4, 2);
                r7 = adds(r3, r6);
                r2 = ldr(sp + 4);
                r3 = ldr(sp + 8);
                r1 = ldr(sp + 4);
                r2 = subs(r3, r2);
                r0 = ldr(sp + 16);
                lr = str_rsplit + 194 | 1;
                bl(this::mp_obj_new_str_of_type, 194);
                return;
            case 194:
                str(r7, r0);
                cmp(r4, 0);
                if (beq(null, 22)) return;
            case 200:
                r3 = ldr(sp + 20);
                r4 = subs(r3, r4);
                r3 = ldr(r5 + 12);
                r7 = lsls(r4, 2);
                r1 = adds(r3, r6);
                r2 = movs(r2, r7);
                r0 = movs(r0, r3);
                lr = str_rsplit + 218 | 1;
                bl(this::memmove, 218);
                return;
            case 218:
                r3 = ldr(r5 + 4);
                r1 = movs(r1, 0);
                r2 = subs(r3, r4);
                r3 = ldr(r5 + 12);
                r2 = lsls(r2, 2);
                r0 = adds(r3, r7);
                lr = str_rsplit + 234 | 1;
                bl(this::memset, 234);
                return;
            case 234:
                str(r5 + 8, r4);
                b(null, 22);
                return;
            case 238:
                r2 = ldr(sp + 12);
                r3 = ldr(r5 + 12);
                r12 = mov(r2);
                r3 = add(r3, r12);
                str(sp + 28, r3);
                r3 = ldr(sp + 8);
                r1 = adds(r6, r7);
                r2 = subs(r3, r6);
                r2 = subs(r2, r7);
                r0 = ldr(sp + 16);
                lr = str_rsplit + 262 | 1;
                bl(this::mp_obj_new_str_of_type, 262);
                return;
            case 262:
                r3 = ldr(sp + 28);
                r4 = subs(r4, 1);
                str(r3, r0);
                r3 = ldr(sp + 12);
                str(sp + 8, r6);
                r3 = subs(r3, 4);
                str(sp + 12, r3);
                b(null, 140);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134285200, size=116, name='str_startswith', path='build/py/objstr.o', has_indirect=False)
    protected void str_startswith(int offset) throws Exception
    {
        pc = str_startswith + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 28);
                r0 = ldr(r1);
                r5 = movs(r5, r1);
                lr = str_startswith + 14 | 1;
                bl(this::mp_obj_get_type, 14);
                return;
            case 14:
                r3 = movs(r3, 3);
                r6 = movs(r6, r0);
                r0 = ldr(r5);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 100)) return;
            case 26:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 16);
                lr = str_startswith + 34 | 1;
                bl(this::qstr_data, 34);
                return;
            case 34:
                r4 = movs(r4, r0);
            case 36:
                r1 = add(sp, 20);
                r0 = ldr(r5 + 4);
                lr = str_startswith + 44 | 1;
                bl(this::mp_obj_str_get_data, 44);
                return;
            case 44:
                str(sp + 12, r0);
                r0 = movs(r0, r4);
                cmp(r7, 2);
                if (bls(null, 68)) return;
            case 52:
                r3 = movs(r3, 1);
                str(sp, r3);
                r3 = ldr(r5 + 8);
                r2 = ldr(sp + 16);
                r1 = movs(r1, r4);
                r0 = movs(r0, r6);
                lr = str_startswith + 68 | 1;
                bl(this::str_index_to_ptr, 68);
                return;
            case 68:
                r2 = ldr(sp + 20);
                r4 = subs(r0, r4);
                r3 = ldr(sp + 16);
                r4 = adds(r4, r2);
                r5 = mp_const_false_obj;
                cmp(r4, r3);
                if (bhi(null, 94)) return;
            case 82:
                r1 = ldr(sp + 12);
                lr = str_startswith + 88 | 1;
                bl(this::memcmp, 88);
                return;
            case 88:
                cmp(r0, 0);
                if (bne(null, 94)) return;
            case 92:
                r5 = mp_const_true_obj;
            case 94:
                r0 = movs(r0, r5);
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 100:
                r3 = ldr(r0 + 8);
                r4 = ldr(r0 + 12);
                str(sp + 16, r3);
                b(null, 36);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134285316, size=96, name='str_endswith', path='build/py/objstr.o', has_indirect=False)
    protected void str_endswith(int offset) throws Exception
    {
        pc = str_endswith + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = ldr(r1);
                r4 = movs(r4, r1);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 46)) return;
            case 16:
                r0 = lsrs(r0, 2);
                r1 = mov(sp);
                lr = str_endswith + 24 | 1;
                bl(this::qstr_data, 24);
                return;
            case 24:
                r6 = movs(r6, r0);
            case 26:
                r1 = add(sp, 4);
                r0 = ldr(r4 + 4);
                lr = str_endswith + 34 | 1;
                bl(this::mp_obj_str_get_data, 34);
                return;
            case 34:
                r1 = movs(r1, r0);
                cmp(r5, 2);
                if (bls(null, 54)) return;
            case 40:
                r0 = str_endswith_str1_1;
                lr = str_endswith + 46 | 1;
                bl(this::mp_raise_NotImplementedError, 46);
                return;
            case 46:
                r3 = ldr(r0 + 8);
                r6 = ldr(r0 + 12);
                str(sp, r3);
                b(null, 26);
                return;
            case 54:
                r2 = ldr(sp + 4);
                r0 = ldr(sp);
                r4 = mp_const_false_obj;
                cmp(r2, r0);
                if (bhi(null, 78)) return;
            case 64:
                r0 = subs(r0, r2);
                r0 = adds(r6, r0);
                lr = str_endswith + 72 | 1;
                bl(this::memcmp, 72);
                return;
            case 72:
                cmp(r0, 0);
                if (bne(null, 78)) return;
            case 76:
                r4 = mp_const_true_obj;
            case 78:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134286900, size=68, name='str_it_iternext', path='build/py/objstrunicode.o', has_indirect=True)
    protected void str_it_iternext(int offset) throws Exception
    {
        pc = str_it_iternext + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = ldr(r0 + 8);
                r3 = ands(r3, r0);
                cmp(r3, 2);
                if (bne(null, 60)) return;
            case 14:
                r0 = lsrs(r0, 2);
                r1 = add(sp, 4);
                lr = str_it_iternext + 22 | 1;
                bl(this::qstr_data, 22);
                return;
            case 22:
                r4 = movs(r4, r0);
            case 24:
                r3 = ldr(r5 + 12);
                r2 = ldr(sp + 4);
                r0 = movs(r0, 0);
                cmp(r3, r2);
                if (bhs(null, 58)) return;
            case 34:
                r4 = adds(r4, r3);
                r0 = movs(r0, r4);
                lr = str_it_iternext + 42 | 1;
                bl(this::utf8_next_char, 42);
                return;
            case 42:
                r6 = subs(r0, r4);
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = str_it_iternext + 52 | 1;
                bl(this::mp_obj_new_str_via_qstr, 52);
                return;
            case 52:
                r3 = ldr(r5 + 12);
                r6 = adds(r3, r6);
                str(r5 + 12, r6);
            case 58:
                pop(true, R1, R2, R4, R5, R6);
                return;
            case 60:
                r3 = ldr(r0 + 8);
                r4 = ldr(r0 + 12);
                str(sp + 4, r3);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134286968, size=76, name='uni_unary_op', path='build/py/objstrunicode.o', has_indirect=False)
    protected void uni_unary_op(int offset) throws Exception
    {
        pc = uni_unary_op + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r0, r1, r4);
                r3 = ands(r3, r1);
                r4 = movs(r4, r0);
                cmp(r3, 2);
                if (bne(null, 32)) return;
            case 12:
                r0 = lsrs(r1, 2);
                r1 = add(sp, 4);
                lr = uni_unary_op + 20 | 1;
                bl(this::qstr_data, 20);
                return;
            case 20:
                cmp(r4, 4);
                if (beq(null, 40)) return;
            case 24:
                cmp(r4, 5);
                if (beq(null, 52)) return;
            case 28:
                r0 = movs(r0, 0);
                b(null, 50);
                return;
            case 32:
                r3 = ldr(r1 + 8);
                r0 = ldr(r1 + 12);
                str(sp + 4, r3);
                b(null, 20);
                return;
            case 40:
                r3 = ldr(sp + 4);
                r0 = mp_const_true_obj;
                cmp(r3, 0);
                if (bne(null, 50)) return;
            case 48:
                r0 = mp_const_false_obj;
            case 50:
                pop(true, R1, R2, R4);
                return;
            case 52:
                r1 = ldr(sp + 4);
                lr = uni_unary_op + 58 | 1;
                bl(this::utf8_charlen, 58);
                return;
            case 58:
                r3 = lsls(r0, 1);
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                b(null, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287044, size=288, name='uni_print', path='build/py/objstrunicode.o', has_indirect=False)
    protected void uni_print(int offset) throws Exception
    {
        pc = uni_print + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 3);
                push(true, r4, r5, r6, r7);
                r3 = ands(r3, r1);
                sp = sub(sp, 20);
                r4 = movs(r4, r0);
                r5 = movs(r5, r2);
                cmp(r3, 2);
                if (bne(null, 44)) return;
            case 16:
                r0 = lsrs(r1, 2);
                r1 = add(sp, 12);
                lr = uni_print + 24 | 1;
                bl(this::qstr_data, 24);
                return;
            case 24:
                r6 = movs(r6, r0);
            case 26:
                r2 = ldr(sp + 12);
                cmp(r5, 3);
                if (bne(null, 52)) return;
            case 32:
                r1 = movs(r1, r6);
                r0 = movs(r0, r4);
                lr = uni_print + 40 | 1;
                bl(this::mp_str_print_json, 40);
                return;
            case 40:
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 44:
                r3 = ldr(r1 + 8);
                r6 = ldr(r1 + 12);
                str(sp + 12, r3);
                b(null, 26);
                return;
            case 52:
                cmp(r5, 0);
                if (bne(null, 68)) return;
            case 56:
                r3 = movs(r3, r6);
                r1 = str_print_str1_1;
                r0 = movs(r0, r4);
                lr = uni_print + 66 | 1;
                bl(this::mp_printf, 66);
                return;
            case 66:
                b(null, 40);
                return;
            case 68:
                r3 = adds(r6, r2);
                r1 = movs(r1, 0);
                r2 = movs(r2, r6);
                r0 = movs(r0, 1);
                str(sp + 4, r3);
            case 78:
                r3 = ldr(sp + 4);
                cmp(r3, r2);
                if (bhi(null, 98)) return;
            case 84:
                r7 = movs(r7, 39);
                cmp(r1, 0);
                if (beq(null, 92)) return;
            case 90:
                r7 = subs(r7, 5);
            case 92:
                r2 = movs(r2, r7);
            case 94:
                r1 = 0x08024a78;
                b(null, 152);
                return;
            case 98:
                r3 = ldrb(r2);
                cmp(r3, 39);
                if (beq(null, 122)) return;
            case 104:
                r3 = subs(r3, 34);
                r5 = rsbs(r3, 0);
                r3 = adcs(r3, r5);
                r3 = uxtb(r3);
            case 112:
                r2 = adds(r2, 1);
                cmp(r3, 0);
                if (beq(null, 78)) return;
            case 118:
                r7 = movs(r7, 39);
                b(null, 92);
                return;
            case 122:
                r3 = movs(r3, 0);
                r1 = movs(r1, r0);
                b(null, 112);
                return;
            case 128:
                r0 = movs(r0, r6);
                lr = uni_print + 134 | 1;
                bl(this::utf8_get_char, 134);
                return;
            case 134:
                r5 = movs(r5, r0);
                r0 = movs(r0, r6);
                lr = uni_print + 142 | 1;
                bl(this::utf8_next_char, 142);
                return;
            case 142:
                r6 = movs(r6, r0);
                cmp(r7, r5);
                if (bne(null, 160)) return;
            case 148:
                r2 = movs(r2, r7);
                r1 = mp_str_print_quoted_str1_1;
            case 152:
                r0 = movs(r0, r4);
                lr = uni_print + 158 | 1;
                bl(this::mp_printf, 158);
                return;
            case 158:
                b(null, 202);
                return;
            case 160:
                r1 = 0x08024c81;
                cmp(r5, 92);
                if (beq(null, 196)) return;
            case 166:
                r3 = movs(r3, r5);
                r3 = subs(r3, 32);
                cmp(r3, 94);
                if (bhi(null, 178)) return;
            case 174:
                r2 = movs(r2, r5);
                b(null, 94);
                return;
            case 178:
                r1 = 0x08024c84;
                cmp(r5, 10);
                if (beq(null, 196)) return;
            case 184:
                r1 = 0x08024c87;
                cmp(r5, 13);
                if (beq(null, 196)) return;
            case 190:
                cmp(r5, 9);
                if (bne(null, 220)) return;
            case 194:
                r1 = 0x08024c8a;
            case 196:
                r0 = movs(r0, r4);
                lr = uni_print + 202 | 1;
                bl(this::mp_print_str, 202);
                return;
            case 202:
                r3 = ldr(sp + 4);
                cmp(r3, r6);
                if (bhi(null, 128)) return;
            case 208:
                r2 = movs(r2, r7);
                r1 = 0x08024a78;
                r0 = movs(r0, r4);
                lr = uni_print + 218 | 1;
                bl(this::mp_printf, 218);
                return;
            case 218:
                b(null, 40);
                return;
            case 220:
                cmp(r5, 255);
                if (bhi(null, 230)) return;
            case 224:
                r2 = movs(r2, r5);
                r1 = 0x08024c8d;
                b(null, 152);
                return;
            case 230:
                r3 = 0x0000ffff;
                r2 = movs(r2, r5);
                r1 = 0x08024c76;
                cmp(r5, r3);
                if (bls(null, 152)) return;
            case 240:
                r1 = uni_print_str1_1;
                b(null, 152);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287332, size=196, name='str_index_to_ptr', path='build/py/objstrunicode.o', has_indirect=False)
    protected void str_index_to_ptr(int offset) throws Exception
    {
        pc = str_index_to_ptr + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r6 = movs(r6, r3);
                r3 = add(sp, 32);
                r5 = ldrb(r3);
                r3 = mp_type_bytes;
                r4 = movs(r4, r1);
                r7 = movs(r7, r2);
                cmp(r0, r3);
                if (bne(null, 32)) return;
            case 18:
                r3 = movs(r3, r5);
                r2 = movs(r2, r6);
                r1 = movs(r1, r7);
                lr = str_index_to_ptr + 28 | 1;
                bl(this::mp_get_index, 28);
                return;
            case 28:
                r0 = adds(r4, r0);
            case 30:
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 32:
                r3 = lsls(r6, 31);
                if (bpl(null, 80)) return;
            case 36:
                r6 = asrs(r6, 1);
                str(sp + 4, r6);
            case 40:
                r3 = ldr(sp + 4);
                r2 = adds(r4, r7);
                cmp(r3, 0);
                if (bge(null, 134)) return;
            case 48:
                r1 = movs(r1, 0);
                r6 = movs(r6, 63);
                r7 = movs(r7, 1);
                r0 = subs(r2, 1);
            case 56:
                cmp(r0, r4);
                if (bhs(null, 112)) return;
            case 60:
                cmp(r1, 0);
                if (beq(null, 66)) return;
            case 64:
                str(sp + 4, r3);
            case 66:
                r0 = movs(r0, r4);
            case 68:
                cmp(r5, 0);
                if (bne(null, 30)) return;
            case 72:
                r1 = 0x08024fd4;
                r0 = mp_type_IndexError;
                lr = str_index_to_ptr + 80 | 1;
                bl(this::mp_raise_msg, 80);
                return;
            case 80:
                r1 = add(sp, 4);
                r0 = movs(r0, r6);
                lr = str_index_to_ptr + 88 | 1;
                bl(this::mp_obj_get_int_maybe, 88);
                return;
            case 88:
                cmp(r0, 0);
                if (bne(null, 40)) return;
            case 92:
                r0 = movs(r0, r6);
                lr = str_index_to_ptr + 98 | 1;
                bl(this::mp_obj_get_type_str, 98);
                return;
            case 98:
                r1 = str_index_to_ptr_str1_1;
                r2 = movs(r2, r0);
                r0 = mp_type_TypeError;
                lr = str_index_to_ptr + 108 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 108);
                return;
            case 108:
                lr = str_index_to_ptr + 112 | 1;
                bl(this::nlr_jump, 112);
                return;
            case 112:
                r2 = ldrb(r0);
                r2 = bics(r2, r6);
                cmp(r2, 128);
                if (beq(null, 124)) return;
            case 120:
                r1 = movs(r1, r7);
                r3 = adds(r3, 1);
            case 124:
                r2 = subs(r0, 1);
                cmp(r3, 0);
                if (beq(null, 30)) return;
            case 130:
                r0 = movs(r0, r2);
                b(null, 56);
                return;
            case 134:
                r0 = movs(r0, r4);
                r6 = movs(r6, 1);
                r4 = movs(r4, 0);
                r7 = movs(r7, 63);
            case 142:
                cmp(r0, r2);
                if (blo(null, 156)) return;
            case 146:
                cmp(r4, 0);
                if (beq(null, 152)) return;
            case 150:
                str(sp + 4, r3);
            case 152:
                r0 = movs(r0, r2);
                b(null, 68);
                return;
            case 156:
                r3 = subs(r3, 1);
                if (blo(null, 30)) return;
            case 160:
                r4 = movs(r4, r6);
                r0 = adds(r0, 1);
            case 164:
                r1 = ldrb(r0);
                r1 = bics(r1, r7);
                cmp(r1, 128);
                if (bne(null, 142)) return;
            case 172:
                r0 = adds(r0, 1);
                b(null, 164);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287528, size=220, name='str_subscr', path='build/py/objstrunicode.o', has_indirect=False)
    protected void str_subscr(int offset) throws Exception
    {
        pc = str_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 28);
                r4 = movs(r4, r0);
                r6 = movs(r6, r1);
                r7 = movs(r7, r2);
                lr = str_subscr + 14 | 1;
                bl(this::mp_obj_get_type, 14);
                return;
            case 14:
                r3 = movs(r3, 3);
                r5 = movs(r5, r0);
                r3 = ands(r3, r4);
                cmp(r3, 2);
                if (bne(null, 80)) return;
            case 24:
                r0 = lsrs(r4, 2);
                r1 = add(sp, 8);
                lr = str_subscr + 32 | 1;
                bl(this::qstr_data, 32);
                return;
            case 32:
                r4 = movs(r4, r0);
            case 34:
                cmp(r7, 4);
                if (bne(null, 202)) return;
            case 38:
                r3 = lsls(r6, 30);
                if (bne(null, 156)) return;
            case 42:
                r3 = mp_type_slice;
                r2 = ldr(r6);
                cmp(r2, r3);
                if (bne(null, 156)) return;
            case 50:
                r3 = add(sp, 20);
                r2 = add(sp, 16);
                r1 = add(sp, 12);
                r0 = movs(r0, r6);
                lr = str_subscr + 62 | 1;
                bl(this::mp_obj_slice_get, 62);
                return;
            case 62:
                r3 = ldr(sp + 20);
                r7 = mp_const_none_obj;
                cmp(r3, r7);
                if (beq(null, 88)) return;
            case 70:
                cmp(r3, 3);
                if (beq(null, 88)) return;
            case 74:
                r0 = array_subscr_str1_1;
                lr = str_subscr + 80 | 1;
                bl(this::mp_raise_NotImplementedError, 80);
                return;
            case 80:
                r3 = ldr(r4 + 8);
                r4 = ldr(r4 + 12);
                str(sp + 8, r3);
                b(null, 34);
                return;
            case 88:
                r3 = ldr(sp + 12);
                r6 = movs(r6, r4);
                cmp(r3, r7);
                if (beq(null, 112)) return;
            case 96:
                r2 = movs(r2, 1);
                r1 = movs(r1, r4);
                str(sp, r2);
                r0 = movs(r0, r5);
                r2 = ldr(sp + 8);
                lr = str_subscr + 110 | 1;
                bl(this::str_index_to_ptr, 110);
                return;
            case 110:
                r6 = movs(r6, r0);
            case 112:
                r2 = ldr(sp + 8);
                r3 = ldr(sp + 16);
                r1 = adds(r4, r2);
                cmp(r3, r7);
                if (beq(null, 136)) return;
            case 122:
                r1 = movs(r1, 1);
                r0 = movs(r0, r5);
                str(sp, r1);
                r1 = movs(r1, r4);
                lr = str_subscr + 134 | 1;
                bl(this::str_index_to_ptr, 134);
                return;
            case 134:
                r1 = movs(r1, r0);
            case 136:
                r0 = movs(r0, 6);
                cmp(r6, r1);
                if (bhi(null, 152)) return;
            case 142:
                r2 = subs(r1, r6);
                r0 = movs(r0, r5);
                r1 = movs(r1, r6);
                lr = str_subscr + 152 | 1;
                bl(this::mp_obj_new_str_of_type, 152);
                return;
            case 152:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            case 156:
                r3 = movs(r3, 0);
                r2 = ldr(sp + 8);
                str(sp, r3);
                r1 = movs(r1, r4);
                r3 = movs(r3, r6);
                r0 = movs(r0, r5);
                lr = str_subscr + 172 | 1;
                bl(this::str_index_to_ptr, 172);
                return;
            case 172:
                r2 = ldrb(r0);
                r1 = movs(r1, 1);
                r3 = sxtb(r2);
                cmp(r3, 0);
                if (bge(null, 196)) return;
            case 182:
                r3 = movs(r3, 64);
                r1 = movs(r1, 1);
                b(null, 192);
                return;
            case 188:
                r1 = adds(r1, 1);
                r3 = lsrs(r3, 1);
            case 192:
                tst(r3, r2);
                if (bne(null, 188)) return;
            case 196:
                lr = str_subscr + 200 | 1;
                bl(this::mp_obj_new_str_via_qstr, 200);
                return;
            case 200:
                b(null, 152);
                return;
            case 202:
                r0 = movs(r0, 0);
                b(null, 152);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287748, size=10, name='stringio___exit__', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio___exit__(int offset) throws Exception
    {
        pc = stringio___exit__ + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r0 = ldr(r1);
                lr = stringio___exit__ + 8 | 1;
                bl(this::mp_stream_close, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287760, size=36, name='stringio_print', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_print(int offset) throws Exception
    {
        pc = stringio_print + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, r1);
                push(true, r4);
                r1 = mp_type_stringio;
                r4 = ldr(r2);
                r3 = stringio_print_str1_1;
                cmp(r4, r1);
                if (beq(null, 16)) return;
            case 14:
                r3 = 0x080251ef;
            case 16:
                r1 = movs(r1, r3);
                lr = stringio_print + 22 | 1;
                bl(this::mp_printf, 22);
                return;
            case 22:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287796, size=164, name='stringio_write', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_write(int offset) throws Exception
    {
        pc = stringio_write + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = ldr(r0 + 4);
                sp = sub(sp, 20);
                r4 = movs(r4, r0);
                str(sp + 8, r1);
                r6 = movs(r6, r2);
                str(sp + 12, r3);
                cmp(r5, 0);
                if (bne(null, 24)) return;
            case 18:
                r0 = stringio_write_str1_1;
                lr = stringio_write + 24 | 1;
                bl(this::mp_raise_ValueError, 24);
                return;
            case 24:
                r7 = movs(r7, 1);
                r3 = ldrb(r5 + 12);
                tst(r3, r7);
                if (beq(null, 68)) return;
            case 32:
                r3 = ldr(r5 + 8);
                r0 = ldr(r5 + 4);
                str(sp + 4, r3);
                lr = stringio_write + 42 | 1;
                bl(this::m_malloc, 42);
                return;
            case 42:
                r3 = ldr(r4 + 4);
                str(r5 + 8, r0);
                r2 = ldr(r3 + 4);
                r0 = ldr(r3 + 8);
                r1 = ldr(sp + 4);
                lr = stringio_write + 56 | 1;
                bl(this::memcpy, 56);
                return;
            case 56:
                r2 = ldr(r4 + 4);
                r3 = ldrb(r2 + 12);
                r3 = bics(r3, r7);
                strb(r2 + 12, r3);
                r3 = movs(r3, 0);
                str(r4 + 12, r3);
            case 68:
                r3 = ldr(r4 + 8);
                r5 = adds(r6, r3);
                cmp(r6, r5);
                if (bls(null, 92)) return;
            case 76:
                r3 = movs(r3, 27);
                r6 = movs(r6, 1);
                r2 = ldr(sp + 12);
                r6 = rsbs(r6, 0);
                str(r2, r3);
            case 86:
                r0 = movs(r0, r6);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 92:
                r0 = ldr(r4 + 4);
                r1 = ldr(r0);
                r7 = ldr(r0 + 4);
                cmp(r1, r5);
                if (bhs(null, 110)) return;
            case 102:
                str(r0 + 4, r1);
                r1 = subs(r5, r1);
                lr = stringio_write + 110 | 1;
                bl(this::vstr_add_len, 110);
                return;
            case 110:
                r2 = ldr(r4 + 8);
                cmp(r2, r7);
                if (bls(null, 130)) return;
            case 116:
                r3 = ldr(r4 + 4);
                r2 = subs(r2, r7);
                r0 = ldr(r3 + 8);
                r1 = movs(r1, 0);
                r0 = adds(r0, r7);
                lr = stringio_write + 130 | 1;
                bl(this::memset, 130);
                return;
            case 130:
                r3 = ldr(r4 + 4);
                r2 = movs(r2, r6);
                r0 = ldr(r3 + 8);
                r3 = ldr(r4 + 8);
                r1 = ldr(sp + 8);
                r0 = adds(r0, r3);
                lr = stringio_write + 146 | 1;
                bl(this::memcpy, 146);
                return;
            case 146:
                r3 = ldr(r4 + 4);
                str(r4 + 8, r5);
                r2 = ldr(r3 + 4);
                cmp(r2, r5);
                if (bhs(null, 86)) return;
            case 156:
                str(r3 + 4, r5);
                b(null, 86);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134287960, size=164, name='stringio_make_new', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_make_new(int offset) throws Exception
    {
        pc = stringio_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 20);
                r0 = movs(r0, 16);
                r6 = movs(r6, r3);
                r5 = movs(r5, r1);
                lr = stringio_make_new + 16 | 1;
                bl(this::m_malloc, 16);
                return;
            case 16:
                r3 = movs(r3, 0);
                r4 = movs(r4, r0);
                str(r0, r7);
                str(r0 + 8, r3);
                str(r0 + 12, r3);
                cmp(r5, r3);
                if (beq(null, 152)) return;
            case 30:
                r0 = ldr(r6);
                r3 = lsls(r0, 31);
                if (bmi(null, 48)) return;
            case 36:
                r3 = lsls(r0, 30);
                if (bne(null, 82)) return;
            case 40:
                r3 = mp_type_int;
                r2 = ldr(r0);
                cmp(r2, r3);
                if (bne(null, 82)) return;
            case 48:
                lr = stringio_make_new + 52 | 1;
                bl(this::mp_obj_get_int, 52);
                return;
            case 52:
                r5 = movs(r5, 0);
            case 54:
                lr = stringio_make_new + 58 | 1;
                bl(this::vstr_new, 58);
                return;
            case 58:
                str(r4 + 4, r0);
                cmp(r5, 0);
                if (beq(null, 140)) return;
            case 64:
                r3 = movs(r3, 0);
                r2 = ldr(sp + 8);
                r1 = ldr(sp + 4);
                r0 = movs(r0, r4);
                lr = stringio_make_new + 76 | 1;
                bl(this::stringio_write, 76);
                return;
            case 76:
                r3 = movs(r3, 0);
                str(r4 + 8, r3);
                b(null, 140);
                return;
            case 82:
                r2 = movs(r2, 1);
                r1 = add(sp, 4);
                lr = stringio_make_new + 90 | 1;
                bl(this::mp_get_buffer_raise, 90);
                return;
            case 90:
                r3 = movs(r3, 3);
                r2 = ldr(r6);
                r3 = ands(r3, r2);
                cmp(r3, 2);
                if (beq(null, 114)) return;
            case 100:
                cmp(r3, 0);
                if (bne(null, 146)) return;
            case 104:
                r2 = ldr(r2);
                r3 = mp_obj_str_binary_op | 1;
                hint(mp_obj_str_binary_op | 1, this::mp_obj_str_binary_op);
                r2 = ldr(r2 + 24);
                cmp(r2, r3);
                if (bne(null, 146)) return;
            case 114:
                r0 = movs(r0, 16);
                lr = stringio_make_new + 120 | 1;
                bl(this::m_malloc, 120);
                return;
            case 120:
                r2 = ldr(sp + 4);
                str(r4 + 4, r0);
                r1 = ldr(sp + 8);
                lr = stringio_make_new + 130 | 1;
                bl(this::vstr_init_fixed_buf, 130);
                return;
            case 130:
                r3 = ldr(r4 + 4);
                r2 = ldr(sp + 8);
                str(r3 + 4, r2);
                r3 = ldr(r6);
                str(r4 + 12, r3);
            case 140:
                r0 = movs(r0, r4);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 146:
                r0 = ldr(sp + 8);
                r5 = movs(r5, 1);
                b(null, 54);
                return;
            case 152:
                r0 = movs(r0, 16);
                b(null, 54);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288124, size=94, name='stringio_ioctl', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_ioctl(int offset) throws Exception
    {
        pc = stringio_ioctl + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                cmp(r1, 2);
                if (beq(null, 20)) return;
            case 8:
                cmp(r1, 4);
                if (beq(null, 82)) return;
            case 12:
                r0 = movs(r0, 0);
                cmp(r1, 1);
                if (bne(null, 72)) return;
            case 18:
                pop(true, R4, R5, R6);
                return;
            case 20:
                r5 = ldr(r2 + 4);
                cmp(r5, 1);
                if (beq(null, 34)) return;
            case 26:
                cmp(r5, 2);
                if (beq(null, 62)) return;
            case 30:
                r0 = movs(r0, 0);
                b(null, 36);
                return;
            case 34:
                r0 = ldr(r0 + 8);
            case 36:
                r6 = ldr(r2);
                r1 = adds(r6, r0);
                cmp(r5, 0);
                if (beq(null, 68)) return;
            case 44:
                cmp(r6, 0);
                if (bge(null, 68)) return;
            case 48:
                cmp(r0, r1);
                if (bhs(null, 54)) return;
            case 52:
                r1 = movs(r1, 0);
            case 54:
                str(r4 + 8, r1);
                r0 = movs(r0, 0);
                str(r2, r1);
                b(null, 18);
                return;
            case 62:
                r1 = ldr(r0 + 4);
                r0 = ldr(r1 + 4);
                b(null, 36);
                return;
            case 68:
                cmp(r0, r1);
                if (bls(null, 54)) return;
            case 72:
                r2 = movs(r2, 22);
                r0 = movs(r0, 1);
                str(r3, r2);
                r0 = rsbs(r0, 0);
                b(null, 18);
                return;
            case 82:
                r0 = ldr(r0 + 4);
                lr = stringio_ioctl + 88 | 1;
                bl(this::vstr_free, 88);
                return;
            case 88:
                r0 = movs(r0, 0);
                str(r4 + 4, r0);
                b(null, 18);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288220, size=52, name='stringio_getvalue', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_getvalue(int offset) throws Exception
    {
        pc = stringio_getvalue + offset;
        switch (offset)
        {
            case 0:
                r3 = ldr(r0 + 4);
                push(true, r4);
                cmp(r3, 0);
                if (bne(null, 14)) return;
            case 8:
                r0 = stringio_write_str1_1;
                lr = stringio_getvalue + 14 | 1;
                bl(this::mp_raise_ValueError, 14);
                return;
            case 14:
                r1 = ldr(r0);
                r2 = mp_type_stringio;
                r0 = mp_type_str;
                cmp(r1, r2);
                if (beq(null, 26)) return;
            case 24:
                r0 = mp_type_bytes;
            case 26:
                r2 = ldr(r3 + 4);
                r1 = ldr(r3 + 8);
                lr = stringio_getvalue + 34 | 1;
                bl(this::mp_obj_new_str_of_type, 34);
                return;
            case 34:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288272, size=60, name='stringio_read', path='build/py/objstringio.o', has_indirect=False)
    protected void stringio_read(int offset) throws Exception
    {
        pc = stringio_read + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r1 = ldr(r5 + 4);
                cmp(r1, 0);
                if (bne(null, 18)) return;
            case 12:
                r0 = stringio_write_str1_1;
                lr = stringio_read + 18 | 1;
                bl(this::mp_raise_ValueError, 18);
                return;
            case 18:
                r6 = ldr(r1 + 4);
                r3 = ldr(r5 + 8);
                r4 = movs(r4, 0);
                cmp(r6, r3);
                if (bls(null, 52)) return;
            case 28:
                r4 = subs(r6, r3);
                cmp(r4, r2);
                if (bls(null, 36)) return;
            case 34:
                r4 = movs(r4, r2);
            case 36:
                r1 = ldr(r1 + 8);
                r2 = movs(r2, r4);
                r1 = adds(r1, r3);
                lr = stringio_read + 46 | 1;
                bl(this::memcpy, 46);
                return;
            case 46:
                r3 = ldr(r5 + 8);
                r3 = adds(r3, r4);
                str(r5 + 8, r3);
            case 52:
                r0 = movs(r0, r4);
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288332, size=28, name='tuple_it_iternext', path='build/py/objtuple.o', has_indirect=True)
    protected void tuple_it_iternext(int offset) throws Exception
    {
        pc = tuple_it_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = ldr(r0 + 8);
                r3 = ldr(r0 + 12);
                r1 = ldr(r4 + 4);
                r2 = movs(r2, r0);
                r0 = movs(r0, 0);
                cmp(r3, r1);
                if (bhs(null, 26)) return;
            case 16:
                r1 = adds(r3, 2);
                r1 = lsls(r1, 2);
                r3 = adds(r3, 1);
                r0 = ldr(r1 + r4);
                str(r2 + 12, r3);
            case 26:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288508, size=20, name='tuple_index', path='build/py/objtuple.o', has_indirect=False)
    protected void tuple_index(int offset) throws Exception
    {
        pc = tuple_index + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = ldr(r1);
                r2 = movs(r2, r0);
                r0 = movs(r0, r4);
                r3 = movs(r3, r1);
                r0 = adds(r0, 8);
                r1 = ldr(r4 + 4);
                lr = tuple_index + 18 | 1;
                bl(this::mp_seq_index_obj, 18);
                return;
            case 18:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134288528, size=16, name='tuple_count', path='build/py/objtuple.o', has_indirect=False)
    protected void tuple_count(int offset) throws Exception
    {
        pc = tuple_count + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, r0);
                push(true, r4);
                r2 = movs(r2, r1);
                r0 = adds(r0, 8);
                r1 = ldr(r3 + 4);
                lr = tuple_count + 14 | 1;
                bl(this::mp_seq_count_obj, 14);
                return;
            case 14:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289232, size=88, name='instance_count_native_bases', path='build/py/objtype.o', has_indirect=False)
    protected void instance_count_native_bases(int offset) throws Exception
    {
        pc = instance_count_native_bases + offset;
        switch (offset)
        {
            case 0:
                push(true, r3, r4, r5, r6, r7);
                r2 = mp_type_object;
                r6 = movs(r6, r1);
                r3 = mp_type_tuple;
                r1 = mp_obj_instance_make_new | 1;
                hint(mp_obj_instance_make_new | 1, this::mp_obj_instance_make_new);
            case 10:
                cmp(r0, r2);
                if (beq(null, 68)) return;
            case 14:
                r4 = ldr(r0 + 12);
                cmp(r4, r1);
                if (beq(null, 28)) return;
            case 20:
                r4 = movs(r4, 1);
                str(r6, r0);
            case 24:
                r0 = movs(r0, r4);
                pop(true, R3, R4, R5, R6, R7);
                return;
            case 28:
                r0 = ldr(r0 + 52);
                cmp(r0, 0);
                if (beq(null, 72)) return;
            case 34:
                r4 = ldr(r0);
                cmp(r4, r3);
                if (bne(null, 10)) return;
            case 40:
                r5 = movs(r5, r0);
                r4 = movs(r4, 0);
                r7 = ldr(r0 + 4);
                r5 = adds(r5, 8);
                r7 = lsls(r7, 2);
                r7 = adds(r5, r7);
            case 52:
                cmp(r5, r7);
                if (bhs(null, 24)) return;
            case 56:
                r1 = movs(r1, r6);
                r5 = ldm(r5, R0);
                lr = instance_count_native_bases + 64 | 1;
                bl(null, 0, 64);
                return;
            case 64:
                r4 = adds(r4, r0);
                b(null, 52);
                return;
            case 68:
                r4 = movs(r4, 0);
                b(null, 24);
                return;
            case 72:
                r4 = movs(r4, r0);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289320, size=44, name='native_base_init_wrapper', path='build/py/objtype.o', has_indirect=False)
    protected void native_base_init_wrapper(int offset) throws Exception
    {
        pc = native_base_init_wrapper + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                r7 = movs(r7, 0);
                r5 = movs(r5, r0);
                r4 = ldm(r4, R6);
                r1 = add(sp, 4);
                r0 = ldr(r6);
                str(sp + 4, r7);
                lr = native_base_init_wrapper + 20 | 1;
                bl(this::instance_count_native_bases, 20);
                return;
            case 20:
                r0 = ldr(sp + 4);
                r1 = subs(r5, 1);
                r2 = movs(r2, r7);
                r5 = ldr(r0 + 12);
                r3 = movs(r3, r4);
                blx(r5, 32);
                return;
            case 32:
                str(r6 + 16, r0);
                r0 = mp_const_none_obj;
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289604, size=160, name='super_attr', path='build/py/objtype.o', has_indirect=False)
    protected void super_attr(int offset) throws Exception
    {
        pc = super_attr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r3 = ldr(r2);
                sp = sub(sp, 36);
                r7 = movs(r7, r0);
                r5 = movs(r5, r2);
                cmp(r3, 0);
                if (bne(null, 128)) return;
            case 14:
                r2 = ldr(r0 + 4);
                r0 = ldr(r0 + 8);
                r4 = add(sp, 12);
                str(sp + 12, r0);
                str(r4 + 4, r1);
                str(r4 + 8, r3);
                str(r4 + 12, r5);
                strb(r4 + 16, r3);
                cmp(r1, 40);
                if (bne(null, 38)) return;
            case 34:
                r3 = adds(r3, 12);
                str(r4 + 8, r3);
            case 38:
                r1 = ldr(r2 + 52);
                cmp(r1, 0);
                if (beq(null, 74)) return;
            case 44:
                r3 = mp_type_tuple;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 132)) return;
            case 52:
                r6 = movs(r6, 0);
                r3 = ldr(r1 + 4);
                r1 = adds(r1, 8);
                str(sp, r3);
                str(sp + 4, r1);
            case 62:
                r3 = ldr(sp);
                cmp(r6, r3);
                if (bne(null, 88)) return;
            case 68:
                r3 = ldr(r5);
                cmp(r3, 0);
                if (bne(null, 116)) return;
            case 74:
                r3 = movs(r3, 0);
                r1 = mp_type_object;
                r0 = movs(r0, r4);
                str(r4 + 8, r3);
                lr = super_attr + 86 | 1;
                bl(this::mp_obj_class_lookup, 86);
                return;
            case 86:
                b(null, 128);
                return;
            case 88:
                r2 = ldr(sp + 4);
                r3 = lsls(r6, 2);
                r1 = ldr(r2 + r3);
                r3 = mp_type_object;
                cmp(r1, r3);
                if (bne(null, 104)) return;
            case 100:
                r6 = adds(r6, 1);
                b(null, 62);
                return;
            case 104:
                r0 = movs(r0, r4);
                lr = super_attr + 110 | 1;
                bl(this::mp_obj_class_lookup, 110);
                return;
            case 110:
                r3 = ldr(r5);
                cmp(r3, 0);
                if (beq(null, 100)) return;
            case 116:
                cmp(r3, 4);
                if (bne(null, 128)) return;
            case 120:
                r3 = native_base_init_wrapper_obj;
                str(r5, r3);
                r3 = ldr(r7 + 8);
                str(r5 + 4, r3);
            case 128:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 132:
                r3 = mp_type_object;
                cmp(r1, r3);
                if (beq(null, 74)) return;
            case 138:
                r0 = movs(r0, r4);
                lr = super_attr + 144 | 1;
                bl(this::mp_obj_class_lookup, 144);
                return;
            case 144:
                b(null, 68);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289764, size=36, name='static_class_method_make_new', path='build/py/objtype.o', has_indirect=False)
    protected void static_class_method_make_new(int offset) throws Exception
    {
        pc = static_class_method_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r5 = movs(r5, r3);
                r3 = movs(r3, 0);
                str(sp, r3);
                r3 = adds(r3, 1);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = static_class_method_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r0 = movs(r0, 8);
                lr = static_class_method_make_new + 28 | 1;
                bl(this::m_malloc, 28);
                return;
            case 28:
                r3 = ldr(r5);
                str(r0 + 4, r3);
                str(r0, r4);
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289800, size=64, name='super_make_new', path='build/py/objtype.o', has_indirect=False)
    protected void super_make_new(int offset) throws Exception
    {
        pc = super_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r3);
                r3 = movs(r3, 0);
                str(sp, r3);
                r3 = adds(r3, 2);
                r5 = movs(r5, r0);
                r0 = movs(r0, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, r3);
                lr = super_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                r3 = ldr(r4);
                r2 = lsls(r3, 30);
                if (bne(null, 36)) return;
            case 28:
                r2 = mp_type_type;
                r3 = ldr(r3);
                cmp(r3, r2);
                if (beq(null, 42)) return;
            case 36:
                r0 = movs(r0, 0);
                lr = super_make_new + 42 | 1;
                bl(this::mp_raise_TypeError, 42);
                return;
            case 42:
                r0 = movs(r0, 12);
                lr = super_make_new + 48 | 1;
                bl(this::m_malloc, 48);
                return;
            case 48:
                r3 = ldr(r4);
                r2 = ldr(r4 + 4);
                str(r0, r5);
                str(r0 + 8, r2);
                str(r0 + 4, r3);
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289864, size=16, name='type_print', path='build/py/objtype.o', has_indirect=False)
    protected void type_print(int offset) throws Exception
    {
        pc = type_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = ldrh(r1 + 6);
                r1 = type_print_str1_1;
                lr = type_print + 10 | 1;
                bl(this::mp_printf, 10);
                return;
            case 10:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134289880, size=128, name='instance_subscr', path='build/py/objtype.o', has_indirect=True)
    protected void instance_subscr(int offset) throws Exception
    {
        pc = instance_subscr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r5 = movs(r5, r0);
                r6 = movs(r6, r1);
                r4 = movs(r4, r2);
                r1 = movs(r1, 0);
                r2 = movs(r2, 8);
                r0 = mov(sp);
                lr = instance_subscr + 20 | 1;
                bl(this::memset, 20);
                return;
            case 20:
                r1 = movs(r1, 0);
                r2 = movs(r2, 16);
                r0 = add(sp, 24);
                lr = instance_subscr + 30 | 1;
                bl(this::memset, 30);
                return;
            case 30:
                r3 = movs(r3, 32);
                str(sp + 28, r3);
                r3 = mov(sp);
                str(sp + 20, r5);
                str(sp + 32, r3);
                r1 = ldr(r5);
                r3 = movs(r3, 18);
                cmp(r4, 0);
                if (beq(null, 54)) return;
            case 48:
                cmp(r4, 4);
                if (bne(null, 84)) return;
            case 52:
                r3 = movs(r3, 30);
            case 54:
                r0 = add(sp, 20);
                str(sp + 24, r3);
                lr = instance_subscr + 62 | 1;
                bl(this::mp_obj_class_lookup, 62);
                return;
            case 62:
                r1 = movs(r1, 2);
            case 64:
                r7 = ldr(sp);
                cmp(r7, 4);
                if (bne(null, 98)) return;
            case 70:
                r2 = movs(r2, r4);
                r1 = movs(r1, r6);
                r0 = ldr(r5 + 16);
                lr = instance_subscr + 80 | 1;
                bl(this::mp_obj_subscr, 80);
                return;
            case 80:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 84:
                r3 = movs(r3, 84);
                r0 = add(sp, 20);
                str(sp + 24, r3);
                lr = instance_subscr + 94 | 1;
                bl(this::mp_obj_class_lookup, 94);
                return;
            case 94:
                r1 = movs(r1, 3);
                b(null, 64);
                return;
            case 98:
                r0 = subs(r7, 0);
                if (beq(null, 80)) return;
            case 102:
                r3 = add(sp, 8);
                r2 = movs(r2, 0);
                str(sp + 8, r5);
                str(sp + 12, r6);
                str(sp + 16, r4);
                lr = instance_subscr + 116 | 1;
                bl(this::mp_call_function_n_kw, 116);
                return;
            case 116:
                cmp(r4, 4);
                if (beq(null, 80)) return;
            case 120:
                r0 = mp_const_none_obj;
                b(null, 80);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134290008, size=116, name='instance_binary_op', path='build/py/objtype.o', has_indirect=True)
    protected void instance_binary_op(int offset) throws Exception
    {
        pc = instance_binary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r6 = movs(r6, r2);
                sp = sub(sp, 36);
            case 10:
                r3 = mp_binary_op_method_name;
                r2 = movs(r2, 12);
                r1 = movs(r1, 0);
                r0 = mov(sp);
                r7 = ldrb(r3 + r4);
                lr = instance_binary_op + 24 | 1;
                bl(this::memset, 24);
                return;
            case 24:
                r3 = movs(r3, 24);
                r0 = add(sp, 12);
                str(r0 + 8, r3);
                r3 = mov(sp);
                str(r0 + 12, r3);
                r3 = movs(r3, 0);
                r1 = ldr(r5);
                strb(r0 + 16, r3);
                str(sp + 12, r5);
                str(r0 + 4, r7);
                lr = instance_binary_op + 48 | 1;
                bl(this::mp_obj_class_lookup, 48);
                return;
            case 48:
                r3 = ldr(sp);
                cmp(r3, 4);
                if (bne(null, 76)) return;
            case 54:
                r2 = movs(r2, r6);
                r1 = ldr(r5 + 16);
                r0 = movs(r0, r4);
                lr = instance_binary_op + 64 | 1;
                bl(this::mp_binary_op, 64);
                return;
            case 64:
                r3 = mp_const_notimplemented_obj;
                cmp(r0, r3);
                if (bne(null, 72)) return;
            case 70:
                r0 = movs(r0, 0);
            case 72:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 76:
                cmp(r3, 0);
                if (beq(null, 94)) return;
            case 80:
                r2 = mov(sp);
                r1 = movs(r1, 0);
                r0 = movs(r0, 1);
                str(sp + 8, r6);
                lr = instance_binary_op + 92 | 1;
                bl(this::mp_call_method_n_kw, 92);
                return;
            case 92:
                b(null, 64);
                return;
            case 94:
                r3 = movs(r3, r4);
                r3 = subs(r3, 9);
                cmp(r3, 11);
                if (bhi(null, 70)) return;
            case 102:
                r4 = adds(r4, 12);
                r4 = uxtb(r4);
                b(null, 10);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134290124, size=160, name='instance_unary_op', path='build/py/objtype.o', has_indirect=True)
    protected void instance_unary_op(int offset) throws Exception
    {
        pc = instance_unary_op + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r6 = movs(r6, r0);
                r4 = movs(r4, r1);
                r5 = add(sp, 20);
                cmp(r0, 8);
                if (bne(null, 42)) return;
            case 14:
                r0 = movs(r0, r1);
                lr = instance_unary_op + 20 | 1;
                bl(this::mp_obj_get_type, 20);
                return;
            case 20:
                r1 = movs(r1, r5);
                lr = instance_unary_op + 26 | 1;
                bl(this::instance_count_native_bases, 26);
                return;
            case 26:
                r4 = ldr(r4 + 8);
                r4 = lsls(r4, 1);
                r4 = adds(r4, 4);
                r4 = adds(r4, r0);
                r4 = lsls(r4, 3);
            case 36:
                r0 = movs(r0, 1);
                r0 = orrs(r0, r4);
                b(null, 98);
                return;
            case 42:
                r3 = mp_unary_op_method_name;
                r7 = add(sp, 12);
                r3 = ldrb(r3 + r0);
                r2 = movs(r2, 8);
                r1 = movs(r1, 0);
                r0 = movs(r0, r7);
                str(sp + 4, r3);
                lr = instance_unary_op + 60 | 1;
                bl(this::memset, 60);
                return;
            case 60:
                r3 = ldr(sp + 4);
                r0 = movs(r0, r5);
                str(r5 + 4, r3);
                r3 = movs(r3, 20);
                str(r5 + 8, r3);
                r3 = movs(r3, 0);
                r1 = ldr(r4);
                str(sp + 20, r4);
                str(r5 + 12, r7);
                strb(r5 + 16, r3);
                lr = instance_unary_op + 84 | 1;
                bl(this::mp_obj_class_lookup, 84);
                return;
            case 84:
                r0 = ldr(sp + 12);
                cmp(r0, 4);
                if (bne(null, 102)) return;
            case 90:
                r1 = ldr(r4 + 16);
                r0 = movs(r0, r6);
                lr = instance_unary_op + 98 | 1;
                bl(this::mp_unary_op, 98);
                return;
            case 98:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 102:
                cmp(r0, 0);
                if (beq(null, 124)) return;
            case 106:
                r1 = movs(r1, r4);
                lr = instance_unary_op + 112 | 1;
                bl(this::mp_call_function_1, 112);
                return;
            case 112:
                cmp(r6, 6);
                if (bne(null, 98)) return;
            case 116:
                lr = instance_unary_op + 120 | 1;
                bl(this::mp_obj_get_int_truncated, 120);
                return;
            case 120:
                r4 = lsls(r0, 1);
                b(null, 36);
                return;
            case 124:
                cmp(r6, 6);
                if (beq(null, 132)) return;
            case 128:
                r0 = movs(r0, 0);
                b(null, 98);
                return;
            case 132:
                r3 = movs(r3, 23);
                r1 = ldr(r4);
                r0 = movs(r0, r5);
                str(r5 + 4, r3);
                lr = instance_unary_op + 144 | 1;
                bl(this::mp_obj_class_lookup, 144);
                return;
            case 144:
                r3 = ldr(r7);
                cmp(r3, 0);
                if (bne(null, 128)) return;
            case 150:
                r4 = lsls(r4, 1);
                b(null, 36);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134290284, size=188, name='instance_print', path='build/py/objtype.o', has_indirect=True)
    protected void instance_print(int offset) throws Exception
    {
        pc = instance_print + offset;
        switch (offset)
        {
            case 0:
                r3 = movs(r3, 86);
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r6 = movs(r6, r0);
                r4 = movs(r4, r1);
                r7 = subs(r2, 0);
                str(sp + 4, r3);
                if (beq(null, 20)) return;
            case 16:
                r3 = subs(r3, 17);
                str(sp + 4, r3);
            case 20:
                r2 = movs(r2, 8);
                r1 = movs(r1, 0);
                r0 = add(sp, 12);
                lr = instance_print + 30 | 1;
                bl(this::memset, 30);
                return;
            case 30:
                r3 = ldr(sp + 4);
                r5 = add(sp, 20);
                str(sp + 24, r3);
                r3 = movs(r3, 8);
                str(sp + 28, r3);
                r3 = add(sp, 12);
                str(sp + 32, r3);
                r3 = movs(r3, 0);
                r1 = ldr(r4);
                r0 = movs(r0, r5);
                strb(r5 + 16, r3);
                str(sp + 20, r4);
                lr = instance_print + 58 | 1;
                bl(this::mp_obj_class_lookup, 58);
                return;
            case 58:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (bne(null, 82)) return;
            case 64:
                cmp(r7, 0);
                if (bne(null, 82)) return;
            case 68:
                r3 = adds(r3, 69);
                r1 = ldr(r4);
                r0 = movs(r0, r5);
                str(r5 + 4, r3);
                str(r5 + 8, r7);
                lr = instance_print + 82 | 1;
                bl(this::mp_obj_class_lookup, 82);
                return;
            case 82:
                r0 = ldr(sp + 12);
                cmp(r0, 4);
                if (bne(null, 142)) return;
            case 88:
                r0 = ldr(r4 + 16);
                lr = instance_print + 94 | 1;
                bl(this::mp_obj_get_type, 94);
                return;
            case 94:
                r3 = mp_obj_exception_make_new | 1;
                hint(mp_obj_exception_make_new | 1, this::mp_obj_exception_make_new);
                r2 = ldr(r0 + 12);
                cmp(r2, r3);
                if (bne(null, 138)) return;
            case 102:
                cmp(r7, 0);
                if (beq(null, 122)) return;
            case 106:
                r3 = ldr(r4);
                r0 = ldrh(r3 + 6);
                lr = instance_print + 114 | 1;
                bl(this::qstr_str, 114);
                return;
            case 114:
                r1 = movs(r1, r0);
                r0 = movs(r0, r6);
                lr = instance_print + 122 | 1;
                bl(this::mp_print_str, 122);
                return;
            case 122:
                r2 = movs(r2, 128);
                r2 = orrs(r2, r7);
            case 126:
                r1 = ldr(r4 + 16);
            case 128:
                r0 = movs(r0, r6);
                lr = instance_print + 134 | 1;
                bl(this::mp_obj_print_helper, 134);
                return;
            case 134:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 138:
                r2 = movs(r2, r7);
                b(null, 126);
                return;
            case 142:
                cmp(r0, 0);
                if (beq(null, 158)) return;
            case 146:
                r1 = movs(r1, r4);
                lr = instance_print + 152 | 1;
                bl(this::mp_call_function_1, 152);
                return;
            case 152:
                r2 = movs(r2, 0);
                r1 = movs(r1, r0);
                b(null, 128);
                return;
            case 158:
                r0 = movs(r0, r4);
                lr = instance_print + 164 | 1;
                bl(this::mp_obj_get_type_str, 164);
                return;
            case 164:
                r3 = movs(r3, r4);
                r2 = movs(r2, r0);
                r1 = instance_print_str1_1;
                r0 = movs(r0, r6);
                lr = instance_print + 176 | 1;
                bl(this::mp_printf, 176);
                return;
            case 176:
                b(null, 134);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134290472, size=64, name='super_print', path='build/py/objtype.o', has_indirect=False)
    protected void super_print(int offset) throws Exception
    {
        pc = super_print + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, r0);
                r5 = movs(r5, r1);
                r1 = super_print_str1_1;
                lr = super_print + 12 | 1;
                bl(this::mp_print_str, 12);
                return;
            case 12:
                r1 = ldr(r5 + 4);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                lr = super_print + 22 | 1;
                bl(this::mp_obj_print_helper, 22);
                return;
            case 22:
                r1 = 0x08022d77;
                r0 = movs(r0, r4);
                lr = super_print + 30 | 1;
                bl(this::mp_print_str, 30);
                return;
            case 30:
                r1 = ldr(r5 + 8);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                lr = super_print + 40 | 1;
                bl(this::mp_obj_print_helper, 40);
                return;
            case 40:
                r1 = 0x08025585;
                r0 = movs(r0, r4);
                lr = super_print + 48 | 1;
                bl(this::mp_print_str, 48);
                return;
            case 48:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134291096, size=36, name='type_call', path='build/py/objtype.o', has_indirect=False)
    protected void type_call(int offset) throws Exception
    {
        pc = type_call + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = ldr(r0 + 12);
                cmp(r4, 0);
                if (bne(null, 22)) return;
            case 8:
                r2 = ldrh(r0 + 6);
                r1 = type_call_str1_1;
                r0 = mp_type_TypeError;
                lr = type_call + 18 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 18);
                return;
            case 18:
                lr = type_call + 22 | 1;
                bl(this::nlr_jump, 22);
                return;
            case 22:
                blx(r4, 24);
                return;
            case 24:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134291132, size=74, name='instance_get_buffer', path='build/py/objtype.o', has_indirect=True)
    protected void instance_get_buffer(int offset) throws Exception
    {
        pc = instance_get_buffer + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r5 = add(sp, 12);
                r4 = movs(r4, r0);
                str(sp + 4, r1);
                r7 = movs(r7, r2);
                r1 = movs(r1, 0);
                r2 = movs(r2, 8);
                r0 = movs(r0, r5);
                lr = instance_get_buffer + 22 | 1;
                bl(this::memset, 22);
                return;
            case 22:
                r3 = movs(r3, 44);
                r0 = add(sp, 20);
                str(r0 + 8, r3);
                r6 = movs(r6, 1);
                r3 = movs(r3, 0);
                r1 = ldr(r4);
                strb(r0 + 16, r3);
                str(r0 + 4, r6);
                str(r0 + 12, r5);
                str(sp + 20, r4);
                lr = instance_get_buffer + 46 | 1;
                bl(this::mp_obj_class_lookup, 46);
                return;
            case 46:
                r3 = ldr(sp + 12);
                r0 = movs(r0, r6);
                cmp(r3, 4);
                if (bne(null, 70)) return;
            case 54:
                r0 = ldr(r4 + 16);
                lr = instance_get_buffer + 60 | 1;
                bl(this::mp_obj_get_type, 60);
                return;
            case 60:
                r2 = movs(r2, r7);
                r3 = ldr(r0 + 44);
                r1 = ldr(sp + 4);
                r0 = ldr(r4 + 16);
                blx(r3, 70);
                return;
            case 70:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134291206, size=86, name='instance_getiter', path='build/py/objtype.o', has_indirect=True)
    protected void instance_getiter(int offset) throws Exception
    {
        pc = instance_getiter + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 36);
                r6 = add(sp, 4);
                r4 = movs(r4, r0);
                r2 = movs(r2, 8);
                r7 = movs(r7, r1);
                r0 = movs(r0, r6);
                r1 = movs(r1, 0);
                lr = instance_getiter + 20 | 1;
                bl(this::memset, 20);
                return;
            case 20:
                r3 = movs(r3, 46);
                r5 = movs(r5, 0);
                r0 = add(sp, 12);
                str(r0 + 4, r3);
                r1 = ldr(r4);
                r3 = subs(r3, 10);
                str(r0 + 8, r3);
                str(r0 + 12, r6);
                strb(r0 + 16, r5);
                str(sp + 12, r4);
                lr = instance_getiter + 44 | 1;
                bl(this::mp_obj_class_lookup, 44);
                return;
            case 44:
                r3 = ldr(sp + 4);
                r0 = movs(r0, r3);
                cmp(r3, r5);
                if (beq(null, 70)) return;
            case 52:
                cmp(r3, 4);
                if (bne(null, 74)) return;
            case 56:
                r0 = ldr(r4 + 16);
                lr = instance_getiter + 62 | 1;
                bl(this::mp_obj_get_type, 62);
                return;
            case 62:
                r1 = movs(r1, r7);
                r3 = ldr(r0 + 36);
                r0 = ldr(r4 + 16);
                blx(r3, 70);
                return;
            case 70:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 74:
                r2 = movs(r2, r6);
                r1 = movs(r1, r5);
                r0 = movs(r0, r5);
                lr = instance_getiter + 84 | 1;
                bl(this::mp_call_method_n_kw, 84);
                return;
            case 84:
                b(null, 70);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134291292, size=80, name='check_for_special_accessors', path='build/py/objtype.o', has_indirect=False)
    protected void check_for_special_accessors(int offset) throws Exception
    {
        pc = check_for_special_accessors + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r2 = movs(r2, 167);
                r3 = movs(r3, r0);
                r5 = movs(r5, r1);
                r2 = lsls(r2, 1);
                r0 = movs(r0, 1);
                cmp(r3, r2);
                if (beq(null, 58)) return;
            case 16:
                cmp(r3, 66);
                if (beq(null, 58)) return;
            case 20:
                r4 = movs(r4, 3);
                r4 = ands(r4, r1);
                if (beq(null, 60)) return;
            case 26:
                r4 = movs(r4, 0);
            case 28:
                r3 = to_check_7087;
                r0 = movs(r0, r5);
                r1 = ldrb(r4 + r3);
                r2 = mov(sp);
                r3 = movs(r3, 1);
                lr = check_for_special_accessors + 42 | 1;
                bl(this::mp_load_method_protected, 42);
                return;
            case 42:
                r0 = ldr(sp);
                cmp(r0, 0);
                if (beq(null, 52)) return;
            case 48:
                r0 = movs(r0, 1);
                b(null, 58);
                return;
            case 52:
                r4 = adds(r4, 1);
                cmp(r4, 3);
                if (bne(null, 28)) return;
            case 58:
                pop(true, R1, R2, R3, R4, R5);
                return;
            case 60:
                r3 = mp_type_property;
                r2 = ldr(r1);
                cmp(r2, r3);
                if (bne(null, 28)) return;
            case 68:
                b(null, 48);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134291372, size=164, name='type_attr', path='build/py/objtype.o', has_indirect=False)
    protected void type_attr(int offset) throws Exception
    {
        pc = type_attr + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r3 = ldr(r2);
                sp = sub(sp, 36);
                r6 = movs(r6, r0);
                r5 = movs(r5, r2);
                cmp(r3, 0);
                if (bne(null, 54)) return;
            case 14:
                cmp(r1, 57);
                if (bne(null, 30)) return;
            case 18:
                r2 = ldrh(r0 + 6);
                r3 = adds(r3, 2);
                r2 = lsls(r2, 2);
                r3 = orrs(r3, r2);
            case 26:
                str(r5, r3);
                b(null, 50);
                return;
            case 30:
                r0 = add(sp, 12);
                str(r0 + 8, r3);
                r3 = movs(r3, 1);
                str(r0 + 4, r1);
                r1 = movs(r1, r6);
                str(sp + 12, r6);
                str(r0 + 12, r2);
                strb(r0 + 16, r3);
                lr = type_attr + 50 | 1;
                bl(this::mp_obj_class_lookup, 50);
                return;
            case 50:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 54:
                r3 = ldr(r0 + 56);
                cmp(r3, 0);
                if (beq(null, 50)) return;
            case 60:
                r7 = movs(r7, 2);
                r2 = ldrb(r3 + 4);
                tst(r2, r7);
                if (bne(null, 50)) return;
            case 68:
                r1 = lsls(r1, r7);
                r3 = adds(r3, 4);
                str(sp + 4, r3);
                r3 = ldr(r5 + 4);
                r1 = orrs(r1, r7);
                str(sp, r3);
                r4 = movs(r4, r1);
                cmp(r3, 0);
                if (bne(null, 102)) return;
            case 86:
                r2 = movs(r2, r7);
                r0 = ldr(sp + 4);
                lr = type_attr + 94 | 1;
                bl(this::mp_map_lookup, 94);
                return;
            case 94:
                r3 = ldr(sp);
                cmp(r0, 0);
                if (bne(null, 26)) return;
            case 100:
                b(null, 50);
                return;
            case 102:
                r3 = ldrh(r0 + 4);
                tst(r3, r7);
                if (bne(null, 138)) return;
            case 108:
                r1 = ldr(sp);
                r0 = movs(r0, r4);
                lr = type_attr + 116 | 1;
                bl(this::check_for_special_accessors, 116);
                return;
            case 116:
                cmp(r0, 0);
                if (beq(null, 138)) return;
            case 120:
                r3 = ldrh(r6 + 4);
                r2 = lsls(r3, 31);
                if (bpl(null, 134)) return;
            case 126:
                r1 = type_attr_str1_1;
                r0 = mp_type_AttributeError;
                lr = type_attr + 134 | 1;
                bl(this::mp_raise_msg, 134);
                return;
            case 134:
                r7 = orrs(r7, r3);
                strh(r6 + 4, r7);
            case 138:
                r2 = movs(r2, 1);
                r1 = movs(r1, r4);
                r0 = ldr(sp + 4);
                lr = type_attr + 148 | 1;
                bl(this::mp_map_lookup, 148);
                return;
            case 148:
                r3 = ldr(r5 + 4);
                str(r0 + 4, r3);
                r3 = movs(r3, 0);
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134292492, size=64, name='type_make_new', path='build/py/objtype.o', has_indirect=False)
    protected void type_make_new(int offset) throws Exception
    {
        pc = type_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r5 = movs(r5, r1);
                r4 = movs(r4, r3);
                r3 = movs(r3, 0);
                r1 = movs(r1, r2);
                str(sp, r3);
                r2 = movs(r2, 1);
                r3 = adds(r3, 3);
                r0 = movs(r0, r5);
                lr = type_make_new + 22 | 1;
                bl(this::mp_arg_check_num, 22);
                return;
            case 22:
                cmp(r5, 1);
                if (beq(null, 36)) return;
            case 26:
                cmp(r5, 3);
                if (beq(null, 44)) return;
            case 30:
                r0 = type_make_new_str1_1;
                lr = type_make_new + 36 | 1;
                bl(this::mp_raise_TypeError, 36);
                return;
            case 36:
                r0 = ldr(r4);
                lr = type_make_new + 42 | 1;
                bl(this::mp_obj_get_type, 42);
                return;
            case 42:
                pop(true, R1, R2, R3, R4, R5);
                return;
            case 44:
                r0 = ldr(r4);
                lr = type_make_new + 50 | 1;
                bl(this::mp_obj_str_get_qstr, 50);
                return;
            case 50:
                r2 = ldr(r4 + 8);
                r1 = ldr(r4 + 4);
                lr = type_make_new + 58 | 1;
                bl(this::mp_obj_new_type, 58);
                return;
            case 58:
                b(null, 42);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134292882, size=64, name='zip_iternext', path='build/py/objzip.o', has_indirect=False)
    protected void zip_iternext(int offset) throws Exception
    {
        pc = zip_iternext + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r6 = movs(r6, r0);
                r0 = ldr(r0 + 4);
                r4 = subs(r0, 0);
                if (beq(null, 50)) return;
            case 10:
                r1 = movs(r1, 0);
                lr = zip_iternext + 16 | 1;
                bl(this::mp_obj_new_tuple, 16);
                return;
            case 16:
                r5 = movs(r5, 0);
                r4 = movs(r4, r0);
            case 20:
                r3 = ldr(r6 + 4);
                cmp(r3, r5);
                if (bls(null, 50)) return;
            case 26:
                r3 = lsls(r5, 2);
                str(sp + 4, r3);
                r3 = adds(r6, r3);
                r0 = ldr(r3 + 8);
                lr = zip_iternext + 38 | 1;
                bl(this::mp_iternext, 38);
                return;
            case 38:
                r7 = subs(r0, 0);
                if (bne(null, 54)) return;
            case 42:
                r0 = movs(r0, r4);
                lr = zip_iternext + 48 | 1;
                bl(this::mp_obj_tuple_del, 48);
                return;
            case 48:
                r4 = movs(r4, r7);
            case 50:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            case 54:
                r3 = lsls(r5, 2);
                r3 = adds(r4, r3);
                str(r3 + 8, r0);
                r5 = adds(r5, 1);
                b(null, 20);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134292948, size=76, name='zip_make_new', path='build/py/objzip.o', has_indirect=False)
    protected void zip_make_new(int offset) throws Exception
    {
        pc = zip_make_new + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r6 = movs(r6, r1);
                r1 = movs(r1, r2);
                r2 = movs(r2, 0);
                sp = sub(sp, 20);
                r7 = adds(r6, 2);
                str(sp + 12, r0);
                r4 = movs(r4, r3);
                r0 = movs(r0, r6);
                r3 = 0x0000ffff;
                str(sp, r2);
                r7 = lsls(r7, 2);
                lr = zip_make_new + 28 | 1;
                bl(this::mp_arg_check_num, 28);
                return;
            case 28:
                r0 = movs(r0, r7);
                lr = zip_make_new + 34 | 1;
                bl(this::m_malloc, 34);
                return;
            case 34:
                str(r0 + 4, r6);
                r6 = movs(r6, r0);
                r5 = movs(r5, r0);
                r3 = ldr(sp + 12);
                r7 = subs(r7, 8);
                str(r0, r3);
                r6 = adds(r6, 8);
                r7 = adds(r4, r7);
            case 50:
                cmp(r4, r7);
                if (bne(null, 60)) return;
            case 54:
                r0 = movs(r0, r5);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 60:
                r1 = movs(r1, 0);
                r4 = ldm(r4, R0);
                lr = zip_make_new + 68 | 1;
                bl(this::mp_getiter, 68);
                return;
            case 68:
                r6 = stm(r6, R0);
                b(null, 50);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293024, size=22, name='op_getitem', path='build/py/opmethods.o', has_indirect=False)
    protected void op_getitem(int offset) throws Exception
    {
        pc = op_getitem + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                lr = op_getitem + 10 | 1;
                bl(this::mp_obj_get_type, 10);
                return;
            case 10:
                r1 = movs(r1, r5);
                r3 = ldr(r0 + 32);
                r2 = movs(r2, 4);
                r0 = movs(r0, r4);
                blx(r3, 20);
                return;
            case 20:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293046, size=24, name='op_setitem', path='build/py/opmethods.o', has_indirect=False)
    protected void op_setitem(int offset) throws Exception
    {
        pc = op_setitem + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r6 = movs(r6, r2);
                r4 = movs(r4, r0);
                lr = op_setitem + 12 | 1;
                bl(this::mp_obj_get_type, 12);
                return;
            case 12:
                r2 = movs(r2, r6);
                r3 = ldr(r0 + 32);
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                blx(r3, 22);
                return;
            case 22:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293070, size=22, name='op_delitem', path='build/py/opmethods.o', has_indirect=False)
    protected void op_delitem(int offset) throws Exception
    {
        pc = op_delitem + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                lr = op_delitem + 10 | 1;
                bl(this::mp_obj_get_type, 10);
                return;
            case 10:
                r1 = movs(r1, r5);
                r3 = ldr(r0 + 32);
                r2 = movs(r2, 0);
                r0 = movs(r0, r4);
                blx(r3, 20);
                return;
            case 20:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293092, size=22, name='op_contains', path='build/py/opmethods.o', has_indirect=False)
    protected void op_contains(int offset) throws Exception
    {
        pc = op_contains + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                r4 = movs(r4, r0);
                lr = op_contains + 10 | 1;
                bl(this::mp_obj_get_type, 10);
                return;
            case 10:
                r2 = movs(r2, r5);
                r3 = ldr(r0 + 24);
                r1 = movs(r1, r4);
                r0 = movs(r0, 46);
                blx(r3, 20);
                return;
            case 20:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293912, size=36, name='stream_flush', path='build/py/stream.o', has_indirect=False)
    protected void stream_flush(int offset) throws Exception
    {
        pc = stream_flush + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4);
                r3 = ldr(r0);
                r2 = movs(r2, 0);
                r3 = ldr(r3 + 48);
                r1 = movs(r1, 1);
                r4 = ldr(r3 + 8);
                r3 = add(sp, 4);
                blx(r4, 16);
                return;
            case 16:
                r3 = adds(r0, 1);
                if (bne(null, 26)) return;
            case 20:
                r0 = ldr(sp + 4);
                lr = stream_flush + 26 | 1;
                bl(this::mp_raise_OSError, 26);
                return;
            case 26:
                r0 = mp_const_none_obj;
                pop(true, R1, R2, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134293948, size=140, name='stream_unbuffered_readline', path='build/py/stream.o', has_indirect=False)
    protected void stream_unbuffered_readline(int offset) throws Exception
    {
        pc = stream_unbuffered_readline + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r3 = ldr(r1);
                sp = sub(sp, 36);
                r3 = ldr(r3);
                r5 = movs(r5, r1);
                r6 = ldr(r3 + 48);
                cmp(r0, 1);
                if (bls(null, 76)) return;
            case 16:
                r3 = ldr(r1 + 4);
                r4 = asrs(r3, 1);
                r3 = adds(r4, 1);
                if (beq(null, 76)) return;
            case 24:
                r1 = movs(r1, r4);
                r0 = add(sp, 16);
                lr = stream_unbuffered_readline + 32 | 1;
                bl(this::vstr_init, 32);
                return;
            case 32:
                r3 = adds(r4, 1);
                if (beq(null, 44)) return;
            case 36:
                r3 = subs(r4, 1);
                cmp(r4, 0);
                if (beq(null, 102)) return;
            case 42:
                r4 = movs(r4, r3);
            case 44:
                r1 = movs(r1, 1);
                r0 = add(sp, 16);
                lr = stream_unbuffered_readline + 52 | 1;
                bl(this::vstr_add_len, 52);
                return;
            case 52:
                r3 = add(sp, 12);
                str(sp + 4, r0);
                r1 = movs(r1, r0);
                r2 = movs(r2, 1);
                r0 = ldr(r5);
                r7 = ldr(r6);
                blx(r7, 66);
                return;
            case 66:
                r3 = adds(r0, 1);
                if (bne(null, 90)) return;
            case 70:
                r0 = ldr(sp + 12);
                lr = stream_unbuffered_readline + 76 | 1;
                bl(this::mp_raise_OSError, 76);
                return;
            case 76:
                r4 = movs(r4, 1);
                r1 = movs(r1, 16);
                r0 = add(sp, 16);
                lr = stream_unbuffered_readline + 86 | 1;
                bl(this::vstr_init, 86);
                return;
            case 86:
                r4 = rsbs(r4, 0);
                b(null, 32);
                return;
            case 90:
                cmp(r0, 0);
                if (bne(null, 122)) return;
            case 94:
                r1 = movs(r1, 1);
                r0 = add(sp, 16);
                lr = stream_unbuffered_readline + 102 | 1;
                bl(this::vstr_cut_tail_bytes, 102);
                return;
            case 102:
                r3 = ldrb(r6 + 12);
                r0 = mp_type_str;
                r3 = lsls(r3, 31);
                if (bmi(null, 112)) return;
            case 110:
                r0 = mp_type_bytes;
            case 112:
                r1 = add(sp, 16);
                lr = stream_unbuffered_readline + 118 | 1;
                bl(this::mp_obj_new_str_from_vstr, 118);
                return;
            case 118:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 122:
                r3 = ldr(sp + 4);
                r3 = ldrb(r3);
                cmp(r3, 10);
                if (bne(null, 32)) return;
            case 130:
                b(null, 102);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294088, size=46, name='stream_unbuffered_readlines', path='build/py/stream.o', has_indirect=False)
    protected void stream_unbuffered_readlines(int offset) throws Exception
    {
        pc = stream_unbuffered_readlines + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r1 = movs(r1, 0);
                str(sp + 4, r0);
                r0 = movs(r0, r1);
                lr = stream_unbuffered_readlines + 12 | 1;
                bl(this::mp_obj_new_list, 12);
                return;
            case 12:
                r4 = movs(r4, r0);
            case 14:
                r1 = add(sp, 4);
                r0 = movs(r0, 1);
                lr = stream_unbuffered_readlines + 22 | 1;
                bl(this::stream_unbuffered_readline, 22);
                return;
            case 22:
                r5 = movs(r5, r0);
                lr = stream_unbuffered_readlines + 28 | 1;
                bl(this::mp_obj_is_true, 28);
                return;
            case 28:
                cmp(r0, 0);
                if (beq(null, 42)) return;
            case 32:
                r1 = movs(r1, r5);
                r0 = movs(r0, r4);
                lr = stream_unbuffered_readlines + 40 | 1;
                bl(this::mp_obj_list_append, 40);
                return;
            case 40:
                b(null, 14);
                return;
            case 42:
                r0 = movs(r0, r4);
                pop(true, R1, R2, R3, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294134, size=84, name='stream_seek', path='build/py/stream.o', has_indirect=False)
    protected void stream_seek(int offset) throws Exception
    {
        pc = stream_seek + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r5 = movs(r5, r0);
                sp = sub(sp, 28);
                r0 = ldr(r1 + 4);
                r4 = movs(r4, r1);
                lr = stream_seek + 14 | 1;
                bl(this::mp_obj_get_int, 14);
                return;
            case 14:
                r3 = movs(r3, 0);
                str(sp + 16, r0);
                str(sp + 20, r3);
                cmp(r5, 3);
                if (bne(null, 32)) return;
            case 24:
                r0 = ldr(r4 + 8);
                lr = stream_seek + 30 | 1;
                bl(this::mp_obj_get_int, 30);
                return;
            case 30:
                str(sp + 20, r0);
            case 32:
                r3 = ldr(sp + 20);
                str(sp + 4, r3);
                cmp(r3, 0);
                if (bne(null, 48)) return;
            case 40:
                r3 = ldr(sp + 16);
                r0 = movs(r0, 22);
                cmp(r3, 0);
                if (blt(null, 70)) return;
            case 48:
                r0 = ldr(r4);
                r2 = add(sp, 16);
                r3 = ldr(r0);
                r1 = movs(r1, 2);
                r3 = ldr(r3 + 48);
                r4 = ldr(r3 + 8);
                r3 = add(sp, 12);
                blx(r4, 64);
                return;
            case 64:
                r3 = adds(r0, 1);
                if (bne(null, 74)) return;
            case 68:
                r0 = ldr(sp + 12);
            case 70:
                lr = stream_seek + 74 | 1;
                bl(this::mp_raise_OSError, 74);
                return;
            case 74:
                r0 = ldr(sp + 16);
                lr = stream_seek + 80 | 1;
                bl(this::mp_obj_new_int_from_uint, 80);
                return;
            case 80:
                sp = add(sp, 28);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294218, size=22, name='stream_tell', path='build/py/stream.o', has_indirect=False)
    protected void stream_tell(int offset) throws Exception
    {
        pc = stream_tell + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r3, r4);
                r3 = movs(r3, 1);
                str(sp + 4, r0);
                r0 = movs(r0, 3);
                r1 = add(sp, 4);
                str(sp + 8, r3);
                str(sp + 12, r0);
                lr = stream_tell + 18 | 1;
                bl(this::stream_seek, 18);
                return;
            case 18:
                sp = add(sp, 20);
                pop(true);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294332, size=384, name='stream_read_generic', path='build/py/stream.o', has_indirect=False)
    protected void stream_read_generic(int offset) throws Exception
    {
        pc = stream_read_generic + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 44);
                r7 = movs(r7, r1);
                str(sp + 12, r2);
                cmp(r0, 1);
                if (bne(null, 62)) return;
            case 12:
                r1 = movs(r1, 128);
                r3 = ldr(r7);
                r1 = lsls(r1, 1);
                str(sp + 12, r3);
                r3 = ldr(r3);
                r0 = add(sp, 24);
                r6 = ldr(r3 + 48);
                r4 = movs(r4, 128);
                lr = stream_read_generic + 32 | 1;
                bl(this::vstr_init, 32);
                return;
            case 32:
                r3 = movs(r3, 0);
                r5 = ldr(sp + 32);
                r4 = lsls(r4, 1);
                str(sp + 8, r3);
            case 40:
                r3 = add(sp, 20);
                r2 = movs(r2, r4);
                r1 = movs(r1, r5);
                r0 = ldr(sp + 12);
                r7 = ldr(r6);
                blx(r7, 52);
                return;
            case 52:
                r3 = adds(r0, 1);
                if (bne(null, 152)) return;
            case 56:
                r0 = ldr(sp + 20);
                lr = stream_read_generic + 62 | 1;
                bl(this::mp_raise_OSError, 62);
                return;
            case 62:
                r0 = ldr(r1 + 4);
                lr = stream_read_generic + 68 | 1;
                bl(this::mp_obj_get_int, 68);
                return;
            case 68:
                r3 = movs(r3, r0);
                str(sp + 8, r0);
                r3 = adds(r3, 1);
                if (beq(null, 12)) return;
            case 76:
                r5 = movs(r5, 1);
                r3 = ldr(r7);
                r4 = ldr(sp + 8);
                r3 = ldr(r3);
                r6 = ldr(r3 + 48);
                r3 = ldrb(r6 + 12);
                tst(r3, r5);
                if (bne(null, 94)) return;
            case 92:
                b(null, 324);
                return;
            case 94:
                r6 = movs(r6, 0);
                r1 = movs(r1, r4);
                r0 = add(sp, 24);
                lr = stream_read_generic + 104 | 1;
                bl(this::vstr_init, 104);
                return;
            case 104:
                str(sp + 12, r5);
            case 106:
                cmp(r4, 0);
                if (beq(null, 300)) return;
            case 110:
                r1 = movs(r1, r4);
                r0 = add(sp, 24);
                lr = stream_read_generic + 118 | 1;
                bl(this::vstr_add_len, 118);
                return;
            case 118:
                r3 = movs(r3, 0);
                str(sp, r3);
                r1 = movs(r1, r0);
                r3 = add(sp, 20);
                r2 = movs(r2, r4);
                r0 = ldr(r7);
                lr = stream_read_generic + 134 | 1;
                bl(this::mp_stream_rw, 134);
                return;
            case 134:
                r3 = ldr(sp + 20);
                r5 = movs(r5, r0);
                cmp(r3, 0);
                if (beq(null, 204)) return;
            case 142:
                r1 = movs(r1, r4);
                r0 = add(sp, 24);
                lr = stream_read_generic + 150 | 1;
                bl(this::vstr_cut_tail_bytes, 150);
                return;
            case 150:
                b(null, 56);
                return;
            case 152:
                r3 = ldr(sp + 8);
                cmp(r0, 0);
                if (beq(null, 190)) return;
            case 158:
                r3 = adds(r3, r0);
                str(sp + 8, r3);
                cmp(r4, r0);
                if (bls(null, 172)) return;
            case 166:
                r4 = subs(r4, r0);
                r5 = adds(r5, r0);
                b(null, 40);
                return;
            case 172:
                r1 = movs(r1, 128);
                r0 = add(sp, 24);
                r1 = lsls(r1, 1);
                lr = stream_read_generic + 182 | 1;
                bl(this::vstr_extend, 182);
                return;
            case 182:
                r4 = movs(r4, 128);
                r5 = movs(r5, r0);
                r4 = lsls(r4, 1);
                b(null, 40);
                return;
            case 190:
                str(sp + 28, r3);
                r3 = ldrb(r6 + 12);
                r0 = mp_type_bytes;
                r3 = lsls(r3, 31);
                if (bpl(null, 372)) return;
            case 200:
                r0 = mp_type_str;
                b(null, 372);
                return;
            case 204:
                cmp(r4, r0);
                if (bhi(null, 288)) return;
            case 208:
                r3 = ldr(sp + 32);
                r0 = movs(r0, r6);
                r12 = mov(r3);
                r4 = ldr(sp + 28);
            case 216:
                r3 = mov(r12);
                r3 = ldrb(r3 + r6);
                r2 = ldr(sp + 12);
                r1 = sxtb(r3);
                cmp(r1, 0);
                if (bge(null, 266)) return;
            case 228:
                r1 = movs(r1, r3);
                r5 = movs(r5, 31);
                r2 = movs(r2, 2);
                r1 = bics(r1, r5);
                cmp(r1, 192);
                if (beq(null, 266)) return;
            case 240:
                r1 = movs(r1, r3);
                r5 = subs(r5, 16);
                r2 = adds(r2, 1);
                r1 = bics(r1, r5);
                cmp(r1, 224);
                if (beq(null, 266)) return;
            case 252:
                r2 = adds(r2, 4);
                r3 = bics(r3, r2);
                r3 = subs(r3, 240);
                r2 = movs(r2, r3);
                r1 = subs(r2, 1);
                r2 = sbcs(r2, r1);
                r2 = adds(r2, 4);
            case 266:
                r6 = adds(r2, r6);
                cmp(r6, r4);
                if (bhi(null, 312)) return;
            case 272:
                r3 = ldr(sp + 8);
                r0 = movs(r0, r6);
                r3 = subs(r3, 1);
                str(sp + 8, r3);
                cmp(r6, r4);
                if (blo(null, 216)) return;
            case 284:
                r4 = movs(r4, r3);
                b(null, 106);
                return;
            case 288:
                r1 = subs(r4, r0);
                r0 = add(sp, 24);
                lr = stream_read_generic + 296 | 1;
                bl(this::vstr_cut_tail_bytes, 296);
                return;
            case 296:
                cmp(r5, 0);
                if (bne(null, 208)) return;
            case 300:
                r0 = mp_type_str;
                r1 = add(sp, 24);
            case 304:
                lr = stream_read_generic + 308 | 1;
                bl(this::mp_obj_new_str_from_vstr, 308);
                return;
            case 308:
                sp = add(sp, 44);
                pop(true, R4, R5, R6, R7);
                return;
            case 312:
                r4 = mvns(r4, r4);
                r3 = ldr(sp + 8);
                r4 = adds(r4, r6);
                r4 = adds(r4, r3);
                r6 = movs(r6, r0);
                b(null, 106);
                return;
            case 324:
                r1 = ldr(sp + 8);
                r0 = add(sp, 24);
                lr = stream_read_generic + 332 | 1;
                bl(this::vstr_init_len, 332);
                return;
            case 332:
                r3 = ldr(sp + 12);
                r2 = ldr(sp + 8);
                str(sp, r3);
                r1 = ldr(sp + 32);
                r3 = add(sp, 20);
                r0 = ldr(r7);
                lr = stream_read_generic + 348 | 1;
                bl(this::mp_stream_rw, 348);
                return;
            case 348:
                r3 = ldr(sp + 20);
                cmp(r3, 0);
                if (beq(null, 362)) return;
            case 354:
                r0 = add(sp, 24);
                lr = stream_read_generic + 360 | 1;
                bl(this::vstr_clear, 360);
                return;
            case 360:
                b(null, 56);
                return;
            case 362:
                r3 = ldrb(r6 + 12);
                str(sp + 28, r0);
                r0 = mp_type_bytes;
                tst(r3, r5);
                if (bne(null, 200)) return;
            case 372:
                r1 = add(sp, 24);
                b(null, 304);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294716, size=10, name='stream_read', path='build/py/stream.o', has_indirect=False)
    protected void stream_read(int offset) throws Exception
    {
        pc = stream_read + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                lr = stream_read + 8 | 1;
                bl(this::stream_read_generic, 8);
                return;
            case 8:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294726, size=74, name='stream_readinto', path='build/py/stream.o', has_indirect=False)
    protected void stream_readinto(int offset) throws Exception
    {
        pc = stream_readinto + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = movs(r4, r1);
                sp = sub(sp, 28);
                r2 = movs(r2, 2);
                r5 = movs(r5, r0);
                r1 = add(sp, 12);
                r0 = ldr(r4 + 4);
                lr = stream_readinto + 18 | 1;
                bl(this::mp_get_buffer_raise, 18);
                return;
            case 18:
                r2 = ldr(sp + 16);
                cmp(r5, 2);
                if (bls(null, 38)) return;
            case 24:
                r0 = ldr(r4 + 8);
                lr = stream_readinto + 30 | 1;
                bl(this::mp_obj_get_int, 30);
                return;
            case 30:
                r2 = ldr(sp + 16);
                cmp(r2, r0);
                if (bls(null, 38)) return;
            case 36:
                r2 = movs(r2, r0);
            case 38:
                r3 = movs(r3, 0);
                r1 = ldr(sp + 12);
                str(sp, r3);
                r0 = ldr(r4);
                r3 = add(sp, 8);
                lr = stream_readinto + 52 | 1;
                bl(this::mp_stream_rw, 52);
                return;
            case 52:
                r3 = ldr(sp + 8);
                cmp(r3, 0);
                if (beq(null, 64)) return;
            case 58:
                r0 = movs(r0, r3);
                lr = stream_readinto + 64 | 1;
                bl(this::mp_raise_OSError, 64);
                return;
            case 64:
                r3 = lsls(r0, 1);
                r0 = movs(r0, 1);
                r0 = orrs(r0, r3);
                sp = add(sp, 28);
                pop(true, R4, R5);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134294896, size=96, name='stream_write_method', path='build/py/stream.o', has_indirect=False)
    protected void stream_write_method(int offset) throws Exception
    {
        pc = stream_write_method + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = movs(r4, r1);
                sp = sub(sp, 28);
                r5 = movs(r5, r0);
                r2 = movs(r2, 1);
                r1 = add(sp, 12);
                r0 = ldr(r4 + 4);
                lr = stream_write_method + 18 | 1;
                bl(this::mp_get_buffer_raise, 18);
                return;
            case 18:
                cmp(r5, 3);
                if (bne(null, 60)) return;
            case 22:
                r0 = ldr(r4 + 8);
                lr = stream_write_method + 28 | 1;
                bl(this::mp_obj_get_int_truncated, 28);
                return;
            case 28:
                r1 = movs(r1, 0);
            case 30:
                r3 = ldr(sp + 16);
                r2 = subs(r3, r1);
                str(sp + 4, r3);
                str(sp + 16, r2);
                cmp(r2, r0);
                if (bls(null, 44)) return;
            case 42:
                r2 = movs(r2, r0);
            case 44:
                r3 = ldr(sp + 12);
                r0 = ldr(r4);
                r1 = adds(r3, r1);
                r3 = movs(r3, 2);
                lr = stream_write_method + 56 | 1;
                bl(this::mp_stream_write, 56);
                return;
            case 56:
                sp = add(sp, 28);
                pop(true, R4, R5);
                return;
            case 60:
                cmp(r5, 4);
                if (bne(null, 88)) return;
            case 64:
                r0 = ldr(r4 + 8);
                lr = stream_write_method + 70 | 1;
                bl(this::mp_obj_get_int_truncated, 70);
                return;
            case 70:
                r5 = movs(r5, r0);
                r0 = ldr(r4 + 12);
                lr = stream_write_method + 78 | 1;
                bl(this::mp_obj_get_int_truncated, 78);
                return;
            case 78:
                r1 = ldr(sp + 16);
                cmp(r1, r5);
                if (bls(null, 30)) return;
            case 84:
                r1 = movs(r1, r5);
                b(null, 30);
                return;
            case 88:
                r0 = movs(r0, 1);
                r1 = movs(r1, 0);
                r0 = rsbs(r0, 0);
                b(null, 30);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134296220, size=80, name='do_execute_raw_code', path='build/py/builtinimport.o', has_indirect=False)
    protected void do_execute_raw_code(int offset) throws Exception
    {
        pc = do_execute_raw_code + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r4 = mp_state_ctx;
                sp = sub(sp, 68);
                r2 = ldr(r4 + 24);
                r3 = ldr(r0 + 4);
                str(sp + 4, r2);
                r2 = ldr(r4 + 20);
                r0 = add(sp, 12);
                r5 = movs(r5, r1);
                str(sp + 8, r2);
                str(r4 + 24, r3);
                str(r4 + 20, r3);
                lr = do_execute_raw_code + 28 | 1;
                bl(this::nlr_push, 28);
                return;
            case 28:
                r1 = subs(r0, 0);
                if (bne(null, 60)) return;
            case 32:
                r2 = movs(r2, r0);
                r0 = movs(r0, r5);
                lr = do_execute_raw_code + 40 | 1;
                bl(this::mp_make_function_from_raw_code, 40);
                return;
            case 40:
                lr = do_execute_raw_code + 44 | 1;
                bl(this::mp_call_function_0, 44);
                return;
            case 44:
                lr = do_execute_raw_code + 48 | 1;
                bl(this::nlr_pop, 48);
                return;
            case 48:
                r3 = ldr(sp + 4);
                str(r4 + 24, r3);
                r3 = ldr(sp + 8);
                str(r4 + 20, r3);
                sp = add(sp, 68);
                pop(true, R4, R5);
                return;
            case 60:
                r3 = ldr(sp + 4);
                r0 = ldr(sp + 16);
                str(r4 + 24, r3);
                r3 = ldr(sp + 8);
                str(r4 + 20, r3);
                lr = do_execute_raw_code + 74 | 1;
                bl(this::nlr_jump, 74);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134296300, size=34, name='do_load_from_lexer', path='build/py/builtinimport.o', has_indirect=False)
    protected void do_load_from_lexer(int offset) throws Exception
    {
        pc = do_load_from_lexer + offset;
        switch (offset)
        {
            case 0:
                r2 = movs(r2, 2);
                push(true, r4, r5, r6);
                r5 = movs(r5, r0);
                r4 = movs(r4, r1);
                r3 = ldr(r1);
                r1 = movs(r1, 25);
                r3 = lsls(r3, 2);
                r2 = orrs(r2, r3);
                lr = do_load_from_lexer + 20 | 1;
                bl(this::mp_store_attr, 20);
                return;
            case 20:
                r2 = ldr(r5 + 4);
                r1 = movs(r1, 1);
                r3 = movs(r3, r2);
                r0 = movs(r0, r4);
                lr = do_load_from_lexer + 32 | 1;
                bl(this::mp_parse_compile_execute, 32);
                return;
            case 32:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134296334, size=76, name='text_do_load', path='build/py/builtinimport.o', has_indirect=False)
    protected void text_do_load(int offset) throws Exception
    {
        pc = text_do_load + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r4, r5, r6);
                r6 = movs(r6, r1);
                r4 = movs(r4, r0);
                r0 = movs(r0, r1);
                lr = text_do_load + 12 | 1;
                bl(this::vstr_null_terminated_str, 12);
                return;
            case 12:
                r1 = ldr(r6 + 4);
                r2 = add(sp, 4);
                r5 = movs(r5, r0);
                lr = text_do_load + 22 | 1;
                bl(this::mp_find_frozen_module, 22);
                return;
            case 22:
                r1 = ldr(sp + 4);
                cmp(r0, 1);
                if (beq(null, 68)) return;
            case 28:
                r1 = ldr(sp + 4);
                cmp(r0, 2);
                if (beq(null, 54)) return;
            case 34:
                r3 = ldr(r6 + 4);
                r0 = movs(r0, r5);
                r3 = adds(r5, r3);
                r3 = subs(r3, 3);
                r3 = ldrb(r3);
                cmp(r3, 109);
                if (bne(null, 62)) return;
            case 48:
                lr = text_do_load + 52 | 1;
                bl(this::mp_raw_code_load_file, 52);
                return;
            case 52:
                r1 = movs(r1, r0);
            case 54:
                r0 = movs(r0, r4);
                lr = text_do_load + 60 | 1;
                bl(this::do_execute_raw_code, 60);
                return;
            case 60:
                pop(true, R0, R1, R4, R5, R6);
                return;
            case 62:
                lr = text_do_load + 66 | 1;
                bl(this::mp_lexer_new_from_file, 66);
                return;
            case 66:
                r1 = movs(r1, r0);
            case 68:
                r0 = movs(r0, r4);
                lr = text_do_load + 74 | 1;
                bl(this::do_load_from_lexer, 74);
                return;
            case 74:
                b(null, 60);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134296410, size=50, name='stat_file_py_or_mpy', path='build/py/builtinimport.o', has_indirect=False)
    protected void stat_file_py_or_mpy(int offset) throws Exception
    {
        pc = stat_file_py_or_mpy + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = stat_file_py_or_mpy + 8 | 1;
                bl(this::vstr_null_terminated_str, 8);
                return;
            case 8:
                lr = stat_file_py_or_mpy + 12 | 1;
                bl(this::mp_import_stat_any, 12);
                return;
            case 12:
                cmp(r0, 2);
                if (beq(null, 44)) return;
            case 16:
                r3 = ldr(r4 + 4);
                r2 = movs(r2, 109);
                r1 = subs(r3, 2);
                r0 = movs(r0, r4);
                lr = stat_file_py_or_mpy + 28 | 1;
                bl(this::vstr_ins_byte, 28);
                return;
            case 28:
                r0 = movs(r0, r4);
                lr = stat_file_py_or_mpy + 34 | 1;
                bl(this::vstr_null_terminated_str, 34);
                return;
            case 34:
                lr = stat_file_py_or_mpy + 38 | 1;
                bl(this::mp_import_stat_any, 38);
                return;
            case 38:
                r3 = movs(r3, 0);
                cmp(r0, 2);
                if (bne(null, 46)) return;
            case 44:
                r3 = movs(r3, 2);
            case 46:
                r0 = movs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134296460, size=36, name='stat_dir_or_file', path='build/py/builtinimport.o', has_indirect=False)
    protected void stat_dir_or_file(int offset) throws Exception
    {
        pc = stat_dir_or_file + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r4 = movs(r4, r0);
                lr = stat_dir_or_file + 8 | 1;
                bl(this::vstr_null_terminated_str, 8);
                return;
            case 8:
                lr = stat_dir_or_file + 12 | 1;
                bl(this::mp_import_stat_any, 12);
                return;
            case 12:
                cmp(r0, 1);
                if (beq(null, 30)) return;
            case 16:
                r0 = movs(r0, r4);
                r1 = 0x080256d9;
                lr = stat_dir_or_file + 24 | 1;
                bl(this::vstr_add_str, 24);
                return;
            case 24:
                r0 = movs(r0, r4);
                lr = stat_dir_or_file + 30 | 1;
                bl(this::stat_file_py_or_mpy, 30);
                return;
            case 30:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134297404, size=240, name='eval_exec_helper', path='build/py/builtinevex.o', has_indirect=False)
    protected void eval_exec_helper(int offset) throws Exception
    {
        pc = eval_exec_helper + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = mp_state_ctx;
                sp = sub(sp, 76);
                r3 = ldr(r5 + 24);
                str(sp + 12, r2);
                str(sp + 4, r3);
                r3 = ldr(r5 + 20);
                str(sp + 8, r3);
                cmp(r0, 1);
                if (bls(null, 150)) return;
            case 20:
                r4 = ldr(r1 + 4);
                r3 = mp_const_none_obj;
                cmp(r4, r3);
                if (beq(null, 48)) return;
            case 28:
                r3 = lsls(r4, 30);
                if (bne(null, 42)) return;
            case 32:
                r3 = mp_type_dict;
                r2 = ldr(r4);
                r6 = movs(r6, r4);
                cmp(r2, r3);
                if (beq(null, 52)) return;
            case 42:
                r0 = movs(r0, 0);
                lr = eval_exec_helper + 48 | 1;
                bl(this::mp_raise_TypeError, 48);
                return;
            case 48:
                r6 = ldr(sp + 8);
                r4 = ldr(sp + 4);
            case 52:
                cmp(r0, 2);
                if (beq(null, 78)) return;
            case 56:
                r3 = ldr(r1 + 8);
                r2 = mp_const_none_obj;
                cmp(r3, r2);
                if (beq(null, 78)) return;
            case 64:
                r2 = lsls(r3, 30);
                if (bne(null, 42)) return;
            case 68:
                r2 = mp_type_dict;
                r0 = ldr(r3);
                r6 = movs(r6, r3);
                cmp(r0, r2);
                if (bne(null, 42)) return;
            case 78:
                r2 = movs(r2, 3);
                r7 = ldr(r1);
                tst(r7, r2);
                if (bne(null, 170)) return;
            case 86:
                r3 = mp_type_code;
                r1 = ldr(r7);
                cmp(r1, r3);
                if (bne(null, 170)) return;
            case 94:
                str(r5 + 24, r4);
                str(r5 + 20, r6);
                r3 = ldr(r7 + 4);
                tst(r3, r2);
                if (bne(null, 114)) return;
            case 104:
                r2 = mp_type_fun_bc;
                r1 = ldr(r3);
                cmp(r1, r2);
                if (bne(null, 114)) return;
            case 112:
                str(r3 + 4, r4);
            case 114:
                r0 = add(sp, 20);
                lr = eval_exec_helper + 120 | 1;
                bl(this::nlr_push, 120);
                return;
            case 120:
                cmp(r0, 0);
                if (bne(null, 156)) return;
            case 124:
                r0 = ldr(r7 + 4);
                lr = eval_exec_helper + 130 | 1;
                bl(this::mp_call_function_0, 130);
                return;
            case 130:
                r4 = movs(r4, r0);
                lr = eval_exec_helper + 136 | 1;
                bl(this::nlr_pop, 136);
                return;
            case 136:
                r3 = ldr(sp + 4);
                str(r5 + 24, r3);
                r3 = ldr(sp + 8);
                str(r5 + 20, r3);
            case 144:
                r0 = movs(r0, r4);
                sp = add(sp, 76);
                pop(true, R4, R5, R6, R7);
                return;
            case 150:
                r6 = ldr(sp + 8);
                r4 = ldr(sp + 4);
                b(null, 78);
                return;
            case 156:
                r3 = ldr(sp + 4);
                r0 = ldr(sp + 24);
                str(r5 + 24, r3);
                r3 = ldr(sp + 8);
                str(r5 + 20, r3);
                lr = eval_exec_helper + 170 | 1;
                bl(this::nlr_jump, 170);
                return;
            case 170:
                r1 = add(sp, 20);
                r0 = movs(r0, r7);
                lr = eval_exec_helper + 178 | 1;
                bl(this::mp_obj_str_get_data, 178);
                return;
            case 178:
                r3 = ldr(sp + 12);
                cmp(r3, 0);
                if (bne(null, 206)) return;
            case 184:
                lr = eval_exec_helper + 188 | 1;
                bl(this::mp_lexer_new_from_file, 188);
                return;
            case 188:
                r3 = movs(r3, 1);
                str(sp + 12, r3);
            case 192:
                r2 = movs(r2, r4);
                r3 = movs(r3, r6);
                r1 = ldr(sp + 12);
                lr = eval_exec_helper + 202 | 1;
                bl(this::mp_parse_compile_execute, 202);
                return;
            case 202:
                r4 = movs(r4, r0);
                b(null, 144);
                return;
            case 206:
                r1 = movs(r1, r0);
                r3 = movs(r3, 0);
                r2 = ldr(sp + 20);
                r0 = movs(r0, 106);
                lr = eval_exec_helper + 218 | 1;
                bl(this::mp_lexer_new_from_str_len, 218);
                return;
            case 218:
                b(null, 192);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134299884, size=24, name='gc_disable', path='build/py/modgc.o', has_indirect=False)
    protected void gc_disable(int offset) throws Exception
    {
        assert offset == 0;
        pc = gc_disable + offset;
        r1 = movs(r1, 0);
        r2 = mp_state_ctx;
        r3 = 0x00000312;
        r0 = mp_const_none_obj;
        strh(r2 + r3, r1);
        bx(lr);
    }

    // function: Function(address=134299908, size=24, name='gc_enable', path='build/py/modgc.o', has_indirect=False)
    protected void gc_enable(int offset) throws Exception
    {
        assert offset == 0;
        pc = gc_enable + offset;
        r1 = movs(r1, 1);
        r2 = mp_state_ctx;
        r3 = 0x00000312;
        r0 = mp_const_none_obj;
        strh(r2 + r3, r1);
        bx(lr);
    }

    // function: Function(address=134299932, size=32, name='gc_isenabled', path='build/py/modgc.o', has_indirect=False)
    protected void gc_isenabled(int offset) throws Exception
    {
        pc = gc_isenabled + offset;
        switch (offset)
        {
            case 0:
                r2 = mp_state_ctx;
                r3 = 0x00000312;
                r0 = mp_const_true_obj;
                r3 = ldrh(r2 + r3);
                cmp(r3, 0);
                if (bne(null, 14)) return;
            case 12:
                r0 = mp_const_false_obj;
            case 14:
                bx(lr);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134299964, size=28, name='py_gc_collect', path='build/py/modgc.o', has_indirect=False)
    protected void py_gc_collect(int offset) throws Exception
    {
        pc = py_gc_collect + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = py_gc_collect + 6 | 1;
                bl(this::gc_collect, 6);
                return;
            case 6:
                r3 = movs(r3, 200);
                r0 = movs(r0, 1);
                r2 = mp_state_ctx;
                r3 = lsls(r3, 2);
                r3 = ldr(r2 + r3);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134299992, size=22, name='gc_mem_free', path='build/py/modgc.o', has_indirect=False)
    protected void gc_mem_free(int offset) throws Exception
    {
        pc = gc_mem_free + offset;
        switch (offset)
        {
            case 0:
                push(true);
                sp = sub(sp, 36);
                r0 = add(sp, 4);
                lr = gc_mem_free + 10 | 1;
                bl(this::gc_info, 10);
                return;
            case 10:
                r0 = movs(r0, 1);
                r3 = ldr(sp + 12);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                sp = add(sp, 36);
                pop(true);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134300014, size=22, name='gc_mem_alloc', path='build/py/modgc.o', has_indirect=False)
    protected void gc_mem_alloc(int offset) throws Exception
    {
        pc = gc_mem_alloc + offset;
        switch (offset)
        {
            case 0:
                push(true);
                sp = sub(sp, 36);
                r0 = add(sp, 4);
                lr = gc_mem_alloc + 10 | 1;
                bl(this::gc_info, 10);
                return;
            case 10:
                r0 = movs(r0, 1);
                r3 = ldr(sp + 8);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                sp = add(sp, 36);
                pop(true);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134300036, size=60, name='gc_threshold', path='build/py/modgc.o', has_indirect=False)
    protected void gc_threshold(int offset) throws Exception
    {
        pc = gc_threshold + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r4 = movs(r4, 198);
                r5 = mp_state_ctx;
                r4 = lsls(r4, 2);
                cmp(r0, 0);
                if (bne(null, 28)) return;
            case 12:
                r3 = ldr(r5 + r4);
                r0 = movs(r0, r3);
                r2 = adds(r3, 1);
                if (beq(null, 26)) return;
            case 20:
                r0 = lsls(r3, 4);
                lr = gc_threshold + 26 | 1;
                bl(this::mp_obj_new_int, 26);
                return;
            case 26:
                pop(true, R4, R5, R6);
                return;
            case 28:
                r0 = ldr(r1);
                lr = gc_threshold + 34 | 1;
                bl(this::mp_obj_get_int, 34);
                return;
            case 34:
                r3 = subs(r0, 0);
                r0 = mp_const_none_obj;
                if (bge(null, 48)) return;
            case 40:
                r3 = movs(r3, 1);
                r3 = rsbs(r3, 0);
            case 44:
                str(r5 + r4, r3);
                b(null, 26);
                return;
            case 48:
                r3 = lsrs(r3, 4);
                b(null, 44);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134300096, size=224, name='resource_stream', path='build/py/modio.o', has_indirect=False)
    protected void resource_stream(int offset) throws Exception
    {
        pc = resource_stream + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5);
                r5 = movs(r5, r1);
                r1 = movs(r1, 128);
                r4 = 0xfffffdc4;
                r1 = lsls(r1, 2);
                sp = add(sp, r4);
                r2 = add(sp, 56);
                r4 = movs(r4, r0);
                r0 = add(sp, 20);
                lr = resource_stream + 22 | 1;
                bl(this::vstr_init_fixed_buf, 22);
                return;
            case 22:
                r3 = mp_const_none_obj;
                cmp(r4, r3);
                if (beq(null, 92)) return;
            case 28:
                str(sp + 40, r3);
                str(sp + 44, r3);
                r3 = mp_const_true_obj;
                r1 = add(sp, 36);
                str(sp + 48, r3);
                r3 = movs(r3, 1);
                r0 = movs(r0, 5);
                str(sp + 52, r3);
                str(sp + 36, r4);
                lr = resource_stream + 50 | 1;
                bl(this::mp_builtin___import__, 50);
                return;
            case 50:
                r2 = add(sp, 12);
                r1 = movs(r1, 62);
                lr = resource_stream + 58 | 1;
                bl(this::mp_load_method_maybe, 58);
                return;
            case 58:
                r0 = ldr(sp + 12);
                cmp(r0, 0);
                if (bne(null, 68)) return;
            case 64:
                lr = resource_stream + 68 | 1;
                bl(this::mp_raise_TypeError, 68);
                return;
            case 68:
                r1 = add(sp, 8);
                lr = resource_stream + 74 | 1;
                bl(this::mp_obj_str_get_data, 74);
                return;
            case 74:
                r2 = ldr(sp + 8);
                r1 = movs(r1, r0);
                r0 = add(sp, 20);
                lr = resource_stream + 84 | 1;
                bl(this::vstr_add_strn, 84);
                return;
            case 84:
                r1 = movs(r1, 47);
                r0 = add(sp, 20);
                lr = resource_stream + 92 | 1;
                bl(this::vstr_add_byte, 92);
                return;
            case 92:
                r1 = add(sp, 8);
                r0 = movs(r0, r5);
                lr = resource_stream + 100 | 1;
                bl(this::mp_obj_str_get_data, 100);
                return;
            case 100:
                r2 = ldr(sp + 8);
                r1 = movs(r1, r0);
                r0 = add(sp, 20);
                lr = resource_stream + 110 | 1;
                bl(this::vstr_add_strn, 110);
                return;
            case 110:
                r3 = ldr(sp + 24);
                r1 = add(sp, 8);
                r0 = ldr(sp + 28);
                str(sp + 4, r3);
                str(sp + 8, r3);
                lr = resource_stream + 124 | 1;
                bl(this::mp_find_frozen_str, 124);
                return;
            case 124:
                r5 = subs(r0, 0);
                if (beq(null, 178)) return;
            case 128:
                r0 = movs(r0, 16);
                lr = resource_stream + 134 | 1;
                bl(this::m_malloc, 134);
                return;
            case 134:
                r3 = mp_type_bytesio;
                r4 = movs(r4, r0);
                str(r0, r3);
                r0 = movs(r0, 16);
                lr = resource_stream + 146 | 1;
                bl(this::m_malloc, 146);
                return;
            case 146:
                r3 = ldr(sp + 8);
                r2 = movs(r2, r5);
                r1 = adds(r3, 1);
                str(r4 + 4, r0);
                lr = resource_stream + 158 | 1;
                bl(this::vstr_init_fixed_buf, 158);
                return;
            case 158:
                r3 = ldr(r4 + 4);
                r2 = ldr(sp + 8);
                str(r3 + 4, r2);
                r3 = movs(r3, 0);
                str(r4 + 8, r3);
            case 168:
                r0 = movs(r0, r4);
                r3 = movs(r3, 143);
                r3 = lsls(r3, 2);
                sp = add(sp, r3);
                pop(true, R4, R5);
                return;
            case 178:
                r1 = ldr(sp + 24);
                r0 = ldr(sp + 28);
                lr = resource_stream + 186 | 1;
                bl(this::mp_obj_new_str, 186);
                return;
            case 186:
                r2 = mp_const_empty_map;
                str(sp + 36, r0);
                r1 = add(sp, 36);
                r0 = movs(r0, 1);
                lr = resource_stream + 198 | 1;
                bl(this::mp_vfs_open, 198);
                return;
            case 198:
                r4 = movs(r4, r0);
                b(null, 168);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134300320, size=6, name='fabs_funcf', path='build/py/modmath.o', has_indirect=True)
    protected void fabs_funcf(int offset) throws Exception
    {
        assert offset == 0;
        pc = fabs_funcf + offset;
        r0 = lsls(r0, 1);
        r0 = lsrs(r0, 1);
        bx(lr);
    }

    // function: Function(address=134300328, size=20, name='log2f', path='build/py/modmath.o', has_indirect=True)
    protected void log2f(int offset) throws Exception
    {
        pc = log2f + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                lr = log2f + 6 | 1;
                bl(this::logf, 6);
                return;
            case 6:
                r1 = 0x3fb8aa3b;
                lr = log2f + 12 | 1;
                bl(this::__aeabi_fmul, 12);
                return;
            case 12:
                pop(true, R4);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134300686, size=12, name='copysign_funcf', path='build/py/modmath.o', has_indirect=True)
    protected void copysign_funcf(int offset) throws Exception
    {
        assert offset == 0;
        pc = copysign_funcf + offset;
        r1 = lsrs(r1, 31);
        r0 = lsls(r0, 1);
        r1 = lsls(r1, 31);
        r0 = lsrs(r0, 1);
        r0 = orrs(r0, r1);
        bx(lr);
    }

    // function: Function(address=134300716, size=116, name='math_generic_1', path='build/py/modmath.o', has_indirect=False)
    protected void math_generic_1(int offset) throws Exception
    {
        pc = math_generic_1 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r5 = movs(r5, r1);
                lr = math_generic_1 + 8 | 1;
                bl(this::mp_obj_get_float, 8);
                return;
            case 8:
                r4 = adds(r0, 0);
                blx(r5, 12);
                return;
            case 12:
                r1 = adds(r0, 0);
                r5 = adds(r0, 0);
                lr = math_generic_1 + 20 | 1;
                bl(this::__aeabi_fcmpun, 20);
                return;
            case 20:
                cmp(r0, 0);
                if (beq(null, 36)) return;
            case 24:
                r1 = adds(r4, 0);
                r0 = adds(r4, 0);
                lr = math_generic_1 + 32 | 1;
                bl(this::__aeabi_fcmpun, 32);
                return;
            case 32:
                cmp(r0, 0);
                if (beq(null, 92)) return;
            case 36:
                r6 = lsls(r5, 1);
                r6 = lsrs(r6, 1);
                r1 = 0x7f7fffff;
                r0 = adds(r6, 0);
                lr = math_generic_1 + 48 | 1;
                bl(this::__aeabi_fcmpun, 48);
                return;
            case 48:
                cmp(r0, 0);
                if (bne(null, 98)) return;
            case 52:
                r1 = 0x7f7fffff;
                r0 = adds(r6, 0);
                lr = math_generic_1 + 60 | 1;
                bl(this::__aeabi_fcmple, 60);
                return;
            case 60:
                cmp(r0, 0);
                if (bne(null, 98)) return;
            case 64:
                r4 = lsls(r4, 1);
                r4 = lsrs(r4, 1);
                r1 = 0x7f7fffff;
                r0 = adds(r4, 0);
                lr = math_generic_1 + 76 | 1;
                bl(this::__aeabi_fcmpun, 76);
                return;
            case 76:
                cmp(r0, 0);
                if (bne(null, 92)) return;
            case 80:
                r1 = 0x7f7fffff;
                r0 = adds(r4, 0);
                lr = math_generic_1 + 88 | 1;
                bl(this::__aeabi_fcmple, 88);
                return;
            case 88:
                cmp(r0, 0);
                if (beq(null, 98)) return;
            case 92:
                r0 = math_generic_1_str1_1;
                lr = math_generic_1 + 98 | 1;
                bl(this::mp_raise_ValueError, 98);
                return;
            case 98:
                r0 = adds(r5, 0);
                lr = math_generic_1 + 104 | 1;
                bl(this::mp_obj_new_float, 104);
                return;
            case 104:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134301184, size=140, name='math_generic_2', path='build/py/modmath.o', has_indirect=False)
    protected void math_generic_2(int offset) throws Exception
    {
        pc = math_generic_2 + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6);
                r6 = movs(r6, r1);
                r5 = movs(r5, r2);
                lr = math_generic_2 + 10 | 1;
                bl(this::mp_obj_get_float, 10);
                return;
            case 10:
                r4 = adds(r0, 0);
                r0 = movs(r0, r6);
                lr = math_generic_2 + 18 | 1;
                bl(this::mp_obj_get_float, 18);
                return;
            case 18:
                r1 = adds(r0, 0);
                r6 = adds(r0, 0);
                r0 = adds(r4, 0);
                blx(r5, 26);
                return;
            case 26:
                r1 = adds(r0, 0);
                r5 = adds(r0, 0);
                lr = math_generic_2 + 34 | 1;
                bl(this::__aeabi_fcmpun, 34);
                return;
            case 34:
                cmp(r0, 0);
                if (beq(null, 62)) return;
            case 38:
                r1 = adds(r4, 0);
                r0 = adds(r4, 0);
                lr = math_generic_2 + 46 | 1;
                bl(this::__aeabi_fcmpun, 46);
                return;
            case 46:
                cmp(r0, 0);
                if (bne(null, 62)) return;
            case 50:
                r1 = adds(r6, 0);
                r0 = adds(r6, 0);
                lr = math_generic_2 + 58 | 1;
                bl(this::__aeabi_fcmpun, 58);
                return;
            case 58:
                cmp(r0, 0);
                if (beq(null, 118)) return;
            case 62:
                r6 = lsls(r5, 1);
                r6 = lsrs(r6, 1);
                r1 = 0x7f7fffff;
                r0 = adds(r6, 0);
                lr = math_generic_2 + 74 | 1;
                bl(this::__aeabi_fcmpun, 74);
                return;
            case 74:
                cmp(r0, 0);
                if (bne(null, 124)) return;
            case 78:
                r1 = 0x7f7fffff;
                r0 = adds(r6, 0);
                lr = math_generic_2 + 86 | 1;
                bl(this::__aeabi_fcmple, 86);
                return;
            case 86:
                cmp(r0, 0);
                if (bne(null, 124)) return;
            case 90:
                r4 = lsls(r4, 1);
                r4 = lsrs(r4, 1);
                r1 = 0x7f7fffff;
                r0 = adds(r4, 0);
                lr = math_generic_2 + 102 | 1;
                bl(this::__aeabi_fcmpun, 102);
                return;
            case 102:
                cmp(r0, 0);
                if (bne(null, 118)) return;
            case 106:
                r1 = 0x7f7fffff;
                r0 = adds(r4, 0);
                lr = math_generic_2 + 114 | 1;
                bl(this::__aeabi_fcmple, 114);
                return;
            case 114:
                cmp(r0, 0);
                if (beq(null, 124)) return;
            case 118:
                r0 = math_generic_1_str1_1;
                lr = math_generic_2 + 124 | 1;
                bl(this::mp_raise_ValueError, 124);
                return;
            case 124:
                r0 = adds(r5, 0);
                lr = math_generic_2 + 130 | 1;
                bl(this::mp_obj_new_float, 130);
                return;
            case 130:
                pop(true, R4, R5, R6);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302476, size=36, name='get_fmt_type', path='build/py/modstruct.o', has_indirect=False)
    protected void get_fmt_type(int offset) throws Exception
    {
        pc = get_fmt_type + offset;
        switch (offset)
        {
            case 0:
                r2 = ldr(r0);
                r3 = ldrb(r2);
                cmp(r3, 62);
                if (bhi(null, 20)) return;
            case 8:
                cmp(r3, 60);
                if (bhs(null, 24)) return;
            case 12:
                cmp(r3, 33);
                if (beq(null, 32)) return;
            case 16:
                r3 = movs(r3, 64);
                b(null, 28);
                return;
            case 20:
                cmp(r3, 64);
                if (bne(null, 16)) return;
            case 24:
                r2 = adds(r2, 1);
                str(r0, r2);
            case 28:
                r0 = movs(r0, r3);
                bx(lr);
                return;
            case 32:
                r3 = movs(r3, 62);
                b(null, 24);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302512, size=44, name='get_fmt_num', path='build/py/modstruct.o', has_indirect=False)
    protected void get_fmt_num(int offset) throws Exception
    {
        pc = get_fmt_num + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5, r6, r7);
                r5 = movs(r5, r0);
                r6 = ldr(r0);
                r4 = adds(r6, 1);
            case 8:
                r0 = ldrb(r4);
                str(sp + 4, r4);
                lr = get_fmt_num + 16 | 1;
                bl(this::unichar_isdigit, 16);
                return;
            case 16:
                r7 = subs(r4, r6);
                r3 = movs(r3, r0);
                r4 = adds(r4, 1);
                cmp(r0, 0);
                if (bne(null, 8)) return;
            case 26:
                r1 = movs(r1, r7);
                r0 = ldr(r5);
                r2 = movs(r2, 10);
                lr = get_fmt_num + 36 | 1;
                bl(this::mp_parse_num_integer, 36);
                return;
            case 36:
                r3 = ldr(sp + 4);
                r0 = asrs(r0, 1);
                str(r5, r3);
                pop(true, R1, R2, R3, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302556, size=102, name='calc_size_items', path='build/py/modstruct.o', has_indirect=False)
    protected void calc_size_items(int offset) throws Exception
    {
        pc = calc_size_items + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, 0);
                sp = sub(sp, 20);
                str(sp + 4, r0);
                r0 = add(sp, 4);
                r7 = movs(r7, r1);
                lr = calc_size_items + 16 | 1;
                bl(this::get_fmt_type, 16);
                return;
            case 16:
                r6 = movs(r6, r4);
                str(sp, r0);
            case 20:
                r3 = ldr(sp + 4);
                r0 = ldrb(r3);
                cmp(r0, 0);
                if (bne(null, 36)) return;
            case 28:
                r0 = movs(r0, r6);
                str(r7, r4);
                sp = add(sp, 20);
                pop(true, R4, R5, R6, R7);
                return;
            case 36:
                lr = calc_size_items + 40 | 1;
                bl(this::unichar_isdigit, 40);
                return;
            case 40:
                r5 = movs(r5, 1);
                cmp(r0, 0);
                if (beq(null, 54)) return;
            case 46:
                r0 = add(sp, 4);
                lr = calc_size_items + 52 | 1;
                bl(this::get_fmt_num, 52);
                return;
            case 52:
                r5 = movs(r5, r0);
            case 54:
                r3 = ldr(sp + 4);
                r1 = ldrb(r3);
                cmp(r1, 115);
                if (bne(null, 74)) return;
            case 62:
                r6 = adds(r6, 1);
                r4 = adds(r4, r5);
            case 66:
                r3 = ldr(sp + 4);
                r3 = adds(r3, 1);
                str(sp + 4, r3);
                b(null, 20);
                return;
            case 74:
                r2 = add(sp, 12);
                r0 = ldr(sp);
                lr = calc_size_items + 82 | 1;
                bl(this::mp_binary_get_size, 82);
                return;
            case 82:
                r3 = ldr(sp + 12);
                r6 = adds(r6, r5);
                r2 = subs(r3, 1);
                r3 = rsbs(r3, 0);
            case 90:
                r5 = subs(r5, 1);
                if (blo(null, 66)) return;
            case 94:
                r4 = adds(r4, r2);
                r4 = ands(r4, r3);
                r4 = adds(r0, r4);
                b(null, 90);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302658, size=22, name='struct_calcsize', path='build/py/modstruct.o', has_indirect=False)
    protected void struct_calcsize(int offset) throws Exception
    {
        pc = struct_calcsize + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2);
                lr = struct_calcsize + 6 | 1;
                bl(this::mp_obj_str_get_str, 6);
                return;
            case 6:
                r1 = add(sp, 4);
                lr = struct_calcsize + 12 | 1;
                bl(this::calc_size_items, 12);
                return;
            case 12:
                r0 = movs(r0, 1);
                r3 = ldr(sp + 4);
                r3 = lsls(r3, 1);
                r0 = orrs(r0, r3);
                pop(true, R1, R2, R3);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302680, size=216, name='struct_unpack_from', path='build/py/modstruct.o', has_indirect=False)
    protected void struct_unpack_from(int offset) throws Exception
    {
        pc = struct_unpack_from + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r7 = movs(r7, r0);
                sp = sub(sp, 36);
                r0 = ldr(r1);
                r5 = movs(r5, r1);
                lr = struct_unpack_from + 14 | 1;
                bl(this::mp_obj_str_get_str, 14);
                return;
            case 14:
                r1 = add(sp, 12);
                str(sp + 8, r0);
                lr = struct_unpack_from + 22 | 1;
                bl(this::calc_size_items, 22);
                return;
            case 22:
                r6 = movs(r6, r0);
                r0 = add(sp, 8);
                lr = struct_unpack_from + 30 | 1;
                bl(this::get_fmt_type, 30);
                return;
            case 30:
                r1 = movs(r1, 0);
                str(sp + 4, r0);
                r0 = movs(r0, r6);
                lr = struct_unpack_from + 40 | 1;
                bl(this::mp_obj_new_tuple, 40);
                return;
            case 40:
                r2 = movs(r2, 1);
                r4 = movs(r4, r0);
                r1 = add(sp, 20);
                r0 = ldr(r5 + 4);
                lr = struct_unpack_from + 52 | 1;
                bl(this::mp_get_buffer_raise, 52);
                return;
            case 52:
                r3 = ldr(sp + 20);
                r2 = ldr(sp + 24);
                str(sp + 16, r3);
                r3 = adds(r3, r2);
                str(sp, r3);
                cmp(r7, 2);
                if (bls(null, 94)) return;
            case 66:
                r0 = ldr(r5 + 8);
                lr = struct_unpack_from + 72 | 1;
                bl(this::mp_obj_get_int, 72);
                return;
            case 72:
                cmp(r0, 0);
                if (bge(null, 88)) return;
            case 76:
                r3 = ldr(sp + 24);
                r0 = adds(r0, r3);
                if (bpl(null, 88)) return;
            case 82:
                r0 = struct_unpack_from_str1_1;
                lr = struct_unpack_from + 88 | 1;
                bl(this::mp_raise_ValueError, 88);
                return;
            case 88:
                r3 = ldr(sp + 16);
                r0 = adds(r3, r0);
                str(sp + 16, r0);
            case 94:
                r2 = ldr(sp + 12);
                r3 = ldr(sp + 16);
                r7 = movs(r7, 0);
                r3 = adds(r3, r2);
                r2 = ldr(sp);
                cmp(r2, r3);
                if (blo(null, 82)) return;
            case 108:
                cmp(r7, r6);
                if (blo(null, 118)) return;
            case 112:
                r0 = movs(r0, r4);
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 118:
                r3 = ldr(sp + 8);
                r5 = movs(r5, 1);
                r0 = ldrb(r3);
                lr = struct_unpack_from + 128 | 1;
                bl(this::unichar_isdigit, 128);
                return;
            case 128:
                cmp(r0, 0);
                if (beq(null, 140)) return;
            case 132:
                r0 = add(sp, 8);
                lr = struct_unpack_from + 138 | 1;
                bl(this::get_fmt_num, 138);
                return;
            case 138:
                r5 = movs(r5, r0);
            case 140:
                r3 = ldr(sp + 8);
                r3 = ldrb(r3);
                cmp(r3, 115);
                if (beq(null, 182)) return;
            case 148:
                r7 = adds(r7, r5);
                r3 = lsls(r7, 2);
                str(sp, r3);
            case 154:
                r3 = ldr(sp + 8);
                r5 = subs(r5, 1);
                if (blo(null, 204)) return;
            case 160:
                r1 = ldrb(r3);
                r2 = add(sp, 16);
                r0 = ldr(sp + 4);
                lr = struct_unpack_from + 170 | 1;
                bl(this::mp_binary_get_val, 170);
                return;
            case 170:
                r2 = ldr(sp);
                r3 = lsls(r5, 2);
                r3 = subs(r2, r3);
                r3 = adds(r4, r3);
                str(r3 + 4, r0);
                b(null, 154);
                return;
            case 182:
                r1 = movs(r1, r5);
                r0 = ldr(sp + 16);
                lr = struct_unpack_from + 190 | 1;
                bl(this::mp_obj_new_bytes, 190);
                return;
            case 190:
                r3 = ldr(sp + 16);
                r5 = adds(r3, r5);
                r3 = adds(r7, 2);
                r3 = lsls(r3, 2);
                str(sp + 16, r5);
                r7 = adds(r7, 1);
                str(r3 + r4, r0);
            case 204:
                r3 = ldr(sp + 8);
                r3 = adds(r3, 1);
                str(sp + 8, r3);
                b(null, 108);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134302896, size=160, name='struct_pack_into_internal', path='build/py/modstruct.o', has_indirect=False)
    protected void struct_pack_into_internal(int offset) throws Exception
    {
        pc = struct_pack_into_internal + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                sp = sub(sp, 36);
                str(sp + 12, r1);
                r6 = movs(r6, r2);
                r7 = movs(r7, r3);
                lr = struct_pack_into_internal + 14 | 1;
                bl(this::mp_obj_str_get_str, 14);
                return;
            case 14:
                str(sp + 16, r0);
                r0 = add(sp, 16);
                lr = struct_pack_into_internal + 22 | 1;
                bl(this::get_fmt_type, 22);
                return;
            case 22:
                r4 = movs(r4, 0);
                str(sp + 8, r0);
            case 26:
                cmp(r4, r6);
                if (blo(null, 34)) return;
            case 30:
                sp = add(sp, 36);
                pop(true, R4, R5, R6, R7);
                return;
            case 34:
                r3 = ldr(sp + 16);
                r0 = ldrb(r3);
                cmp(r0, 0);
                if (beq(null, 30)) return;
            case 42:
                lr = struct_pack_into_internal + 46 | 1;
                bl(this::unichar_isdigit, 46);
                return;
            case 46:
                r5 = movs(r5, 1);
                cmp(r0, 0);
                if (beq(null, 60)) return;
            case 52:
                r0 = add(sp, 16);
                lr = struct_pack_into_internal + 58 | 1;
                bl(this::get_fmt_num, 58);
                return;
            case 58:
                r5 = movs(r5, r0);
            case 60:
                r3 = ldr(sp + 16);
                r3 = ldrb(r3);
                cmp(r3, 115);
                if (beq(null, 98)) return;
            case 68:
                r5 = adds(r4, r5);
            case 70:
                r3 = ldr(sp + 16);
                cmp(r5, r4);
                if (beq(null, 152)) return;
            case 76:
                cmp(r6, r4);
                if (beq(null, 152)) return;
            case 80:
                r2 = lsls(r4, 2);
                r1 = ldrb(r3);
                r2 = ldr(r7 + r2);
                r3 = add(sp, 12);
                r0 = ldr(sp + 8);
                lr = struct_pack_into_internal + 94 | 1;
                bl(this::mp_binary_set_val, 94);
                return;
            case 94:
                r4 = adds(r4, 1);
                b(null, 70);
                return;
            case 98:
                r3 = adds(r4, 1);
                r4 = lsls(r4, 2);
                r0 = ldr(r4 + r7);
                r2 = movs(r2, 1);
                r1 = add(sp, 20);
                str(sp + 4, r3);
                lr = struct_pack_into_internal + 114 | 1;
                bl(this::mp_get_buffer_raise, 114);
                return;
            case 114:
                r4 = ldr(sp + 24);
                cmp(r4, r5);
                if (bls(null, 122)) return;
            case 120:
                r4 = movs(r4, r5);
            case 122:
                r2 = movs(r2, r4);
                r1 = ldr(sp + 20);
                r0 = ldr(sp + 12);
                lr = struct_pack_into_internal + 132 | 1;
                bl(this::memcpy, 132);
                return;
            case 132:
                r3 = ldr(sp + 12);
                r2 = subs(r5, r4);
                r0 = adds(r3, r4);
                r1 = movs(r1, 0);
                lr = struct_pack_into_internal + 144 | 1;
                bl(this::memset, 144);
                return;
            case 144:
                r3 = ldr(sp + 12);
                r4 = ldr(sp + 4);
                r5 = adds(r3, r5);
                str(sp + 12, r5);
            case 152:
                r3 = ldr(sp + 16);
                r3 = adds(r3, 1);
                str(sp + 16, r3);
                b(null, 26);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134303056, size=68, name='struct_pack', path='build/py/modstruct.o', has_indirect=False)
    protected void struct_pack(int offset) throws Exception
    {
        pc = struct_pack + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r5 = movs(r5, r1);
                sp = sub(sp, 28);
                str(sp + 4, r0);
                r5 = ldm(r5, R0);
                r6 = movs(r6, r1);
                lr = struct_pack + 16 | 1;
                bl(this::struct_calcsize, 16);
                return;
            case 16:
                r4 = asrs(r0, 1);
                r1 = movs(r1, r4);
                r0 = add(sp, 8);
                lr = struct_pack + 26 | 1;
                bl(this::vstr_init_len, 26);
                return;
            case 26:
                r7 = ldr(sp + 16);
                r2 = movs(r2, r4);
                r1 = movs(r1, 0);
                r0 = movs(r0, r7);
                lr = struct_pack + 38 | 1;
                bl(this::memset, 38);
                return;
            case 38:
                r2 = ldr(sp + 4);
                r3 = movs(r3, r5);
                r2 = subs(r2, 1);
                r1 = movs(r1, r7);
                r0 = ldr(r6);
                lr = struct_pack + 52 | 1;
                bl(this::struct_pack_into_internal, 52);
                return;
            case 52:
                r1 = add(sp, 8);
                r0 = mp_type_bytes;
                lr = struct_pack + 60 | 1;
                bl(this::mp_obj_new_str_from_vstr, 60);
                return;
            case 60:
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134303124, size=92, name='struct_pack_into', path='build/py/modstruct.o', has_indirect=False)
    protected void struct_pack_into(int offset) throws Exception
    {
        pc = struct_pack_into + offset;
        switch (offset)
        {
            case 0:
                push(true, r4, r5, r6, r7);
                r4 = movs(r4, r1);
                sp = sub(sp, 28);
                r6 = movs(r6, r0);
                r2 = movs(r2, 2);
                r0 = ldr(r4 + 4);
                r1 = add(sp, 12);
                lr = struct_pack_into + 18 | 1;
                bl(this::mp_get_buffer_raise, 18);
                return;
            case 18:
                r0 = ldr(r4 + 8);
                lr = struct_pack_into + 24 | 1;
                bl(this::mp_obj_get_int, 24);
                return;
            case 24:
                cmp(r0, 0);
                if (bge(null, 42)) return;
            case 28:
                r3 = ldr(sp + 16);
                str(sp + 4, r3);
                r0 = adds(r0, r3);
                if (bpl(null, 42)) return;
            case 36:
                r0 = struct_unpack_from_str1_1;
                lr = struct_pack_into + 42 | 1;
                bl(this::mp_raise_ValueError, 42);
                return;
            case 42:
                r5 = ldr(sp + 12);
                r7 = ldr(sp + 16);
                r7 = adds(r5, r7);
                r5 = adds(r5, r0);
                r0 = ldr(r4);
                lr = struct_pack_into + 56 | 1;
                bl(this::struct_calcsize, 56);
                return;
            case 56:
                r0 = asrs(r0, 1);
                r0 = adds(r5, r0);
                cmp(r7, r0);
                if (blo(null, 36)) return;
            case 64:
                r3 = movs(r3, r4);
                r0 = ldr(r4);
                r3 = adds(r3, 12);
                r2 = subs(r6, 3);
                r1 = movs(r1, r5);
                lr = struct_pack_into + 78 | 1;
                bl(this::struct_pack_into_internal, 78);
                return;
            case 78:
                r0 = mp_const_none_obj;
                sp = add(sp, 28);
                pop(true, R4, R5, R6, R7);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134308240, size=36, name='unlikely_fun_pos_args_mismatch', path='build/py/bc.o', has_indirect=False)
    protected void unlikely_fun_pos_args_mismatch(int offset) throws Exception
    {
        pc = unlikely_fun_pos_args_mismatch + offset;
        switch (offset)
        {
            case 0:
                push(true, r0, r1, r2, r4, r5);
                r4 = movs(r4, r1);
                r5 = movs(r5, r2);
                lr = unlikely_fun_pos_args_mismatch + 10 | 1;
                bl(this::mp_obj_fun_get_name, 10);
                return;
            case 10:
                r3 = movs(r3, r4);
                r2 = movs(r2, r0);
                r1 = namedtuple_make_new_str1_1;
                str(sp, r5);
                r0 = mp_type_TypeError;
                lr = unlikely_fun_pos_args_mismatch + 24 | 1;
                bl(this::mp_obj_new_exception_msg_varg, 24);
                return;
            case 24:
                lr = unlikely_fun_pos_args_mismatch + 28 | 1;
                bl(this::nlr_jump, 28);
                return;
            default:
                crash();
        }
    }

    // function: Function(address=134309136, size=54, name='str_startswith_word', path='build/py/repl.o', has_indirect=False)
    protected void str_startswith_word(int offset) throws Exception
    {
        pc = str_startswith_word + offset;
        switch (offset)
        {
            case 0:
                push(true, r4);
                r2 = movs(r2, 0);
                r4 = movs(r4, r0);
            case 6:
                r0 = ldrb(r4 + r2);
                r3 = ldrb(r1 + r2);
                cmp(r0, 0);
                if (bne(null, 32)) return;
            case 14:
                r0 = rsbs(r3, 0);
                r0 = adcs(r0, r3);
            case 18:
                r3 = movs(r3, 1);
                r0 = ands(r0, r3);
            case 22:
                pop(true, R4);
                return;
            case 24:
                cmp(r0, r3);
                if (bne(null, 50)) return;
            case 28:
                r2 = adds(r2, 1);
                b(null, 6);
                return;
            case 32:
                cmp(r3, 0);
                if (bne(null, 24)) return;
            case 36:
                lr = str_startswith_word + 40 | 1;
                bl(this::unichar_isident, 40);
                return;
            case 40:
                r3 = movs(r3, r0);
                r0 = movs(r0, 1);
                r0 = eors(r0, r3);
                r0 = uxtb(r0);
                b(null, 18);
                return;
            case 50:
                r0 = movs(r0, 0);
                b(null, 22);
                return;
            default:
                crash();
        }
    }

} // MicroPython_upy
